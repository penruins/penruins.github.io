<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Penruins</title>
    <link>/zh/</link>
    <description>Recent content on Penruins</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 10 Feb 2025 22:59:16 +0800</lastBuildDate>
    <atom:link href="/zh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>about me</title>
      <link>/zh/post/others/about-me/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/others/about-me/</guid>
      <description>&lt;h1 id=&#34;about-me&#34;&gt;&#xA;  about me&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#about-me&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;家乡 云南昆明&lt;/li&gt;&#xA;&lt;li&gt;骑行 &lt;a href=&#34;https://www.strava.com/athletes/24928841&#34;&gt;Strava&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;电影 &lt;a href=&#34;https://www.douban.com/people/191687379&#34;&gt;douban&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;../movies-log&#34;&gt;观影记录&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;研究各种提升效率的小工具&#xA;&lt;ul&gt;&#xA;&lt;li&gt;vim&lt;/li&gt;&#xA;&lt;li&gt;双拼&lt;/li&gt;&#xA;&lt;li&gt;raspberry pi&lt;/li&gt;&#xA;&lt;li&gt;ios shortcut&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>about me</title>
      <link>/zh/zh/post/others/about-me/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/others/about-me/</guid>
      <description>&lt;h1 id=&#34;about-me&#34;&gt;&#xA;  about me&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#about-me&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;家乡 云南昆明&lt;/li&gt;&#xA;&lt;li&gt;骑行 &lt;a href=&#34;https://www.strava.com/athletes/24928841&#34;&gt;Strava&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;电影 &lt;a href=&#34;https://www.douban.com/people/191687379&#34;&gt;douban&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;../movies-log&#34;&gt;观影记录&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;研究各种提升效率的小工具&#xA;&lt;ul&gt;&#xA;&lt;li&gt;vim&lt;/li&gt;&#xA;&lt;li&gt;双拼&lt;/li&gt;&#xA;&lt;li&gt;raspberry pi&lt;/li&gt;&#xA;&lt;li&gt;ios shortcut&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>java</title>
      <link>/zh/post/computer-science/java/java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/computer-science/java/java/</guid>
      <description>&lt;h1 id=&#34;java&#34;&gt;&#xA;  java&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#java&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;学习资料&#34;&gt;&#xA;  学习资料&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ad%a6%e4%b9%a0%e8%b5%84%e6%96%99&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cyc2018.xyz&#34;&gt;CS-Notes面试笔记&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.macrozheng.com/foreword/mall_swarm_video.html&#34;&gt;mall-swarm视频教程&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;basic&#34;&gt;&#xA;  basic&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#basic&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;java-array-转-list&#34;&gt;&#xA;  java array 转 list&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#java-array-%e8%bd%ac-list&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;在Java中，你可以使用&lt;code&gt;Arrays.asList()&lt;/code&gt;方法将数组转换为列表。这是一个简单的方法来创建一个固定大小的&lt;code&gt;List&lt;/code&gt;。如果你需要一个能够改变大小的&lt;code&gt;List&lt;/code&gt;，你需要使用&lt;code&gt;new ArrayList&amp;lt;&amp;gt;(Arrays.asList(array))&lt;/code&gt;来创建一个新的&lt;code&gt;ArrayList&lt;/code&gt;实例。&lt;/p&gt;&#xA;&lt;p&gt;以下是两种情况的代码示例：&lt;/p&gt;&#xA;&lt;h4 id=&#34;创建一个固定大小的列表&#34;&gt;&#xA;  创建一个固定大小的列表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e5%9b%ba%e5%ae%9a%e5%a4%a7%e5%b0%8f%e7%9a%84%e5%88%97%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.Arrays;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.List;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ArrayToListExample&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Arrays.&lt;span style=&#34;color:#a6e22e&#34;&gt;asList&lt;/span&gt;(array);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(list); &lt;span style=&#34;color:#75715e&#34;&gt;// 输出: [a, b, c]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;创建一个可变大小的列表&#34;&gt;&#xA;  创建一个可变大小的列表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e5%8f%af%e5%8f%98%e5%a4%a7%e5%b0%8f%e7%9a%84%e5%88%97%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.ArrayList;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.Arrays;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.List;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ArrayToArrayListExample&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; arrayList &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;(Arrays.&lt;span style=&#34;color:#a6e22e&#34;&gt;asList&lt;/span&gt;(array));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 现在可以添加或删除元素了&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        arrayList.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(arrayList); &lt;span style=&#34;color:#75715e&#34;&gt;// 输出: [a, b, c, d]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请注意，当你使用&lt;code&gt;Arrays.asList()&lt;/code&gt;时，它返回的是一个受数组支持的固定大小的列表。这意味着你不能添加或移除元素（除非你将其转换为像&lt;code&gt;ArrayList&lt;/code&gt;这样的可调整大小的列表），但是你可以修改已经存在的元素。如果你尝试对固定大小的列表执行添加或移除操作，将会抛出&lt;code&gt;UnsupportedOperationException&lt;/code&gt;异常。&lt;/p&gt;</description>
    </item>
    <item>
      <title>java</title>
      <link>/zh/zh/post/computer-science/java/java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/computer-science/java/java/</guid>
      <description>&lt;h1 id=&#34;java&#34;&gt;&#xA;  java&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#java&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;学习资料&#34;&gt;&#xA;  学习资料&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ad%a6%e4%b9%a0%e8%b5%84%e6%96%99&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cyc2018.xyz&#34;&gt;CS-Notes面试笔记&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.macrozheng.com/foreword/mall_swarm_video.html&#34;&gt;mall-swarm视频教程&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;basic&#34;&gt;&#xA;  basic&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#basic&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;java-array-转-list&#34;&gt;&#xA;  java array 转 list&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#java-array-%e8%bd%ac-list&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;在Java中，你可以使用&lt;code&gt;Arrays.asList()&lt;/code&gt;方法将数组转换为列表。这是一个简单的方法来创建一个固定大小的&lt;code&gt;List&lt;/code&gt;。如果你需要一个能够改变大小的&lt;code&gt;List&lt;/code&gt;，你需要使用&lt;code&gt;new ArrayList&amp;lt;&amp;gt;(Arrays.asList(array))&lt;/code&gt;来创建一个新的&lt;code&gt;ArrayList&lt;/code&gt;实例。&lt;/p&gt;&#xA;&lt;p&gt;以下是两种情况的代码示例：&lt;/p&gt;&#xA;&lt;h4 id=&#34;创建一个固定大小的列表&#34;&gt;&#xA;  创建一个固定大小的列表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e5%9b%ba%e5%ae%9a%e5%a4%a7%e5%b0%8f%e7%9a%84%e5%88%97%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.Arrays;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.List;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ArrayToListExample&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Arrays.&lt;span style=&#34;color:#a6e22e&#34;&gt;asList&lt;/span&gt;(array);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(list); &lt;span style=&#34;color:#75715e&#34;&gt;// 输出: [a, b, c]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;创建一个可变大小的列表&#34;&gt;&#xA;  创建一个可变大小的列表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e5%8f%af%e5%8f%98%e5%a4%a7%e5%b0%8f%e7%9a%84%e5%88%97%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.ArrayList;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.Arrays;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.List;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ArrayToArrayListExample&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; arrayList &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;(Arrays.&lt;span style=&#34;color:#a6e22e&#34;&gt;asList&lt;/span&gt;(array));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 现在可以添加或删除元素了&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        arrayList.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(arrayList); &lt;span style=&#34;color:#75715e&#34;&gt;// 输出: [a, b, c, d]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请注意，当你使用&lt;code&gt;Arrays.asList()&lt;/code&gt;时，它返回的是一个受数组支持的固定大小的列表。这意味着你不能添加或移除元素（除非你将其转换为像&lt;code&gt;ArrayList&lt;/code&gt;这样的可调整大小的列表），但是你可以修改已经存在的元素。如果你尝试对固定大小的列表执行添加或移除操作，将会抛出&lt;code&gt;UnsupportedOperationException&lt;/code&gt;异常。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mybatis</title>
      <link>/zh/post/computer-science/java/mybatis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/computer-science/java/mybatis/</guid>
      <description>&lt;h2 id=&#34;mybatis是怎么进行事务管理的-2025-02-08&#34;&gt;&#xA;  mybatis是怎么进行事务管理的 2025-02-08&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mybatis%e6%98%af%e6%80%8e%e4%b9%88%e8%bf%9b%e8%a1%8c%e4%ba%8b%e5%8a%a1%e7%ae%a1%e7%90%86%e7%9a%84-2025-02-08&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;MyBatis 通过集成外部事务管理器（如 Spring 或 Java EE 容器）或使用内置的 JDBC 事务管理机制来管理事务。以下是 MyBatis 事务管理的主要方式：&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-使用-jdbc-事务管理&#34;&gt;&#xA;  1. 使用 JDBC 事务管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-%e4%bd%bf%e7%94%a8-jdbc-%e4%ba%8b%e5%8a%a1%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;MyBatis 默认使用 JDBC 的事务管理，通过 &lt;code&gt;java.sql.Connection&lt;/code&gt; 实现。具体步骤如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;开启事务&lt;/strong&gt;：调用 &lt;code&gt;Connection.setAutoCommit(false)&lt;/code&gt; 关闭自动提交。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;提交事务&lt;/strong&gt;：调用 &lt;code&gt;Connection.commit()&lt;/code&gt; 提交事务。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;回滚事务&lt;/strong&gt;：调用 &lt;code&gt;Connection.rollback()&lt;/code&gt; 回滚事务。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;示例代码：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SqlSession sqlSession &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sqlSessionFactory.&lt;span style=&#34;color:#a6e22e&#34;&gt;openSession&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 执行数据库操作&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sqlSession.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;insert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;insertUser&amp;#34;&lt;/span&gt;,user);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sqlSession.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;updateUser&amp;#34;&lt;/span&gt;,user);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 提交事务&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sqlSession.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;commit&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Exception e){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 回滚事务&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sqlSession.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rollback&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;span style=&#34;color:#66d9ef&#34;&gt;finally&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 关闭 SqlSession&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sqlSession.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-集成-spring-事务管理&#34;&gt;&#xA;  2. 集成 Spring 事务管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-%e9%9b%86%e6%88%90-spring-%e4%ba%8b%e5%8a%a1%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;MyBatis 通常与 Spring 集成，利用 Spring 的事务管理功能。Spring 提供了声明式和编程式事务管理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mybatis</title>
      <link>/zh/zh/post/computer-science/java/mybatis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/computer-science/java/mybatis/</guid>
      <description>&lt;h2 id=&#34;mybatis是怎么进行事务管理的-2025-02-08&#34;&gt;&#xA;  mybatis是怎么进行事务管理的 2025-02-08&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mybatis%e6%98%af%e6%80%8e%e4%b9%88%e8%bf%9b%e8%a1%8c%e4%ba%8b%e5%8a%a1%e7%ae%a1%e7%90%86%e7%9a%84-2025-02-08&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;MyBatis 通过集成外部事务管理器（如 Spring 或 Java EE 容器）或使用内置的 JDBC 事务管理机制来管理事务。以下是 MyBatis 事务管理的主要方式：&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-使用-jdbc-事务管理&#34;&gt;&#xA;  1. 使用 JDBC 事务管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-%e4%bd%bf%e7%94%a8-jdbc-%e4%ba%8b%e5%8a%a1%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;MyBatis 默认使用 JDBC 的事务管理，通过 &lt;code&gt;java.sql.Connection&lt;/code&gt; 实现。具体步骤如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;开启事务&lt;/strong&gt;：调用 &lt;code&gt;Connection.setAutoCommit(false)&lt;/code&gt; 关闭自动提交。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;提交事务&lt;/strong&gt;：调用 &lt;code&gt;Connection.commit()&lt;/code&gt; 提交事务。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;回滚事务&lt;/strong&gt;：调用 &lt;code&gt;Connection.rollback()&lt;/code&gt; 回滚事务。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;示例代码：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SqlSession sqlSession &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sqlSessionFactory.&lt;span style=&#34;color:#a6e22e&#34;&gt;openSession&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 执行数据库操作&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sqlSession.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;insert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;insertUser&amp;#34;&lt;/span&gt;,user);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sqlSession.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;updateUser&amp;#34;&lt;/span&gt;,user);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 提交事务&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sqlSession.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;commit&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Exception e){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 回滚事务&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sqlSession.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rollback&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;span style=&#34;color:#66d9ef&#34;&gt;finally&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 关闭 SqlSession&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sqlSession.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-集成-spring-事务管理&#34;&gt;&#xA;  2. 集成 Spring 事务管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-%e9%9b%86%e6%88%90-spring-%e4%ba%8b%e5%8a%a1%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;MyBatis 通常与 Spring 集成，利用 Spring 的事务管理功能。Spring 提供了声明式和编程式事务管理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>推荐</title>
      <link>/zh/post/computer-science/computer-science-recommend/</link>
      <pubDate>Thu, 14 Nov 2024 08:59:49 +0800</pubDate>
      <guid>/zh/post/computer-science/computer-science-recommend/</guid>
      <description>&lt;h1 id=&#34;推荐&#34;&gt;&#xA;  推荐&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8e%a8%e8%8d%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com&#34;&gt;github&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/alex-shpak/hugo-book&#34;&gt;alex-shpak/hugo-book&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这个博客就是用这个项目搭建的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://news.ycombinator.com&#34;&gt;hacker news&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;有很多关于计算机相关的文章，每天都会更新&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;资源下载相关&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/pingf/annie&#34;&gt;pingf/annie&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可以用来下载B站视频&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;yt-dlp/yt-dlp&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;下载 youtube 视频&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yutto-dev/bilili&#34;&gt;yutto-dev/bilili&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;下载 bilibili 视频(项目已经归档不再维护,目前还能用，可以使用yutto)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yutto-dev/yutto&#34;&gt;yutto-dev/yutto&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://notes.kamacoder.com/home/&#34;&gt;卡码笔记&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;代码随想录的网站，里面整理了一些计算机相关的知识点（非算法相关）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/blogs&#34;&gt;segment fault&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;blog&#34;&gt;&#xA;  blog&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#blog&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/&#34;&gt;阮一峰的网络日志&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.yinwang.org&#34;&gt;王垠&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;github&#34;&gt;&#xA;  github&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#github&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yihong0618&#34;&gt;yihong0618&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;large-language-modelllm&#34;&gt;&#xA;  Large Language Model(LLM)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#large-language-modelllm&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tongyi.aliyun.com/qianwen/&#34;&gt;通义千问&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>推荐</title>
      <link>/zh/zh/post/computer-science/computer-science-recommend/</link>
      <pubDate>Thu, 14 Nov 2024 08:59:49 +0800</pubDate>
      <guid>/zh/zh/post/computer-science/computer-science-recommend/</guid>
      <description>&lt;h1 id=&#34;推荐&#34;&gt;&#xA;  推荐&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8e%a8%e8%8d%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com&#34;&gt;github&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/alex-shpak/hugo-book&#34;&gt;alex-shpak/hugo-book&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这个博客就是用这个项目搭建的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://news.ycombinator.com&#34;&gt;hacker news&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;有很多关于计算机相关的文章，每天都会更新&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;资源下载相关&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/pingf/annie&#34;&gt;pingf/annie&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可以用来下载B站视频&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;yt-dlp/yt-dlp&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;下载 youtube 视频&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yutto-dev/bilili&#34;&gt;yutto-dev/bilili&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;下载 bilibili 视频(项目已经归档不再维护,目前还能用，可以使用yutto)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yutto-dev/yutto&#34;&gt;yutto-dev/yutto&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://notes.kamacoder.com/home/&#34;&gt;卡码笔记&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;代码随想录的网站，里面整理了一些计算机相关的知识点（非算法相关）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/blogs&#34;&gt;segment fault&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;blog&#34;&gt;&#xA;  blog&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#blog&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/&#34;&gt;阮一峰的网络日志&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.yinwang.org&#34;&gt;王垠&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;github&#34;&gt;&#xA;  github&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#github&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yihong0618&#34;&gt;yihong0618&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;large-language-modelllm&#34;&gt;&#xA;  Large Language Model(LLM)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#large-language-modelllm&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tongyi.aliyun.com/qianwen/&#34;&gt;通义千问&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>观影记录</title>
      <link>/zh/post/life/movies-log/</link>
      <pubDate>Thu, 14 Nov 2024 08:59:49 +0800</pubDate>
      <guid>/zh/post/life/movies-log/</guid>
      <description>&lt;h1 id=&#34;观影记录&#34;&gt;&#xA;  观影记录&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%82%e5%bd%b1%e8%ae%b0%e5%bd%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;2025&#34;&gt;&#xA;  2025&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025-01-12&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 敦煌&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 &lt;code&gt;2025-01-16&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 &lt;code&gt;2025-01-18&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 &lt;code&gt;2025-01-20&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 ``&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 ``&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 ``&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 ``&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 ``&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2025-01-11&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如果国宝会说话 第四季&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 东京爱情故事&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 &lt;code&gt;2025-01-16&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 &lt;code&gt;2025-01-17&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 &lt;code&gt;2025-01-18&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 &lt;code&gt;2025-01-19&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 &lt;code&gt;2025-01-20&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 &lt;code&gt;2025-01-22&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11 ``&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2025-01-10&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 飞屋环游记&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2025-01-07&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如果国宝会说话 第三季&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2025-01-04&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如果国宝会说话 第二季&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2025-01-03&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 辛德勒的名单（2）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2025-01-02&#xA;&lt;ul&gt;&#xA;&lt;li&gt;四重奏&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 2025-01-02&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 2025-01-07&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 2025-01-10&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;code&gt;10&lt;/code&gt; 2025-01-10&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2025-01-01&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如果国宝会说话 第一季&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2024&#34;&gt;&#xA;  2024&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2024&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2024-12-01&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 金色梦乡&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-30&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Better Call Saul S04E07&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-29&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Better Call Saul S04E06&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-28&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Better Call Saul S04E05&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-27&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Better Call Saul S04E03-04&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-26&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Better Call Saul S04E01-02&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-25&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Better Call Saul S03E09-10&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-23&#xA;&lt;ul&gt;&#xA;&lt;li&gt;热血警探&lt;/li&gt;&#xA;&lt;li&gt;铁雨 ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-18&#xA;&lt;ul&gt;&#xA;&lt;li&gt;东邪西毒 终极版&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-17&#xA;&lt;ul&gt;&#xA;&lt;li&gt;甲方乙方&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-16&#xA;&lt;ul&gt;&#xA;&lt;li&gt;正义回廊 ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;li&gt;有话好好说 ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-15&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Better Call Saul S03E07&lt;/li&gt;&#xA;&lt;li&gt;Better Call Saul S03E08&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-14&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Better Call Saul S03E06&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-13&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Better Call Saul S03E05&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-12&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Better Call Saul S03E04&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-12&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Better Call Saul S03E02&lt;/li&gt;&#xA;&lt;li&gt;Better Call Saul S03E03&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-24&#xA;&lt;ul&gt;&#xA;&lt;li&gt;哈利波特与死亡圣器 下&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-23&#xA;&lt;ul&gt;&#xA;&lt;li&gt;哈利波特与死亡圣器 上&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-22&#xA;&lt;ul&gt;&#xA;&lt;li&gt;哈利波特与混血王子&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-20&#xA;&lt;ul&gt;&#xA;&lt;li&gt;哈利波特与凤凰社&lt;/li&gt;&#xA;&lt;li&gt;哈利波特与火焰杯&lt;/li&gt;&#xA;&lt;li&gt;哈利波特与阿兹卡班的囚徒&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-19&#xA;&lt;ul&gt;&#xA;&lt;li&gt;哈利波特与密室&lt;/li&gt;&#xA;&lt;li&gt;哈利波特与魔法石&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2024-10-07&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 燃情岁月 ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 抓娃娃&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-06&#xA;&lt;ul&gt;&#xA;&lt;li&gt;赛德克巴莱&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-05&#xA;&lt;ul&gt;&#xA;&lt;li&gt;名侦探柯南：百万美元的五棱星&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-04&#xA;&lt;ul&gt;&#xA;&lt;li&gt;年会不能停&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-09-17&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://movie.douban.com/subject/26304212/?dt_dapp=1&#34;&gt;市场法则&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 过季 ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://movie.douban.com/subject/35902857/?dt_dapp=1&#34;&gt;完美的日子&lt;/a&gt; ⭐⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-09-15&#xA;&lt;ul&gt;&#xA;&lt;li&gt;幽灵公主&lt;/li&gt;&#xA;&lt;li&gt;鬼灭之刃 那田蜘蛛山篇&lt;/li&gt;&#xA;&lt;li&gt;鬼灭之刃 柱训练篇&lt;/li&gt;&#xA;&lt;li&gt;鬼灭之刃 锻刀村篇&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-09-08&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不要抬头&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://movie.douban.com/subject/25878808/?dt_dapp=1&#34;&gt;2024-08-18 一部关于咖啡的电影&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;2024-07-14&#xA;&lt;ul&gt;&#xA;&lt;li&gt;鬼灭之刃 游郭篇&lt;/li&gt;&#xA;&lt;li&gt;鬼灭之刃 无限列车篇&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-07-07&#xA;&lt;ul&gt;&#xA;&lt;li&gt;朗读者&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-06-15&#xA;&lt;ul&gt;&#xA;&lt;li&gt;环法自行车赛：逆风飞驰 第二季&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-06-09&#xA;&lt;ul&gt;&#xA;&lt;li&gt;江湖儿女&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-05-19&#xA;&lt;ul&gt;&#xA;&lt;li&gt;红猪&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-05-12&#xA;&lt;ul&gt;&#xA;&lt;li&gt;繁花&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-05-04&#xA;&lt;ul&gt;&#xA;&lt;li&gt;极速车王&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-05-03&#xA;&lt;ul&gt;&#xA;&lt;li&gt;大佛普拉斯&lt;/li&gt;&#xA;&lt;li&gt;芝加哥七君子审判&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-04-22&#xA;&lt;ul&gt;&#xA;&lt;li&gt;寻梦环游记&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-04-21&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你想活出怎样的人生&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-04-06&#xA;&lt;ul&gt;&#xA;&lt;li&gt;黄海&lt;/li&gt;&#xA;&lt;li&gt;逃离乌托邦&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-04-04&#xA;&lt;ul&gt;&#xA;&lt;li&gt;坠落的审判&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-03-15&#xA;&lt;ul&gt;&#xA;&lt;li&gt;周处除三害&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-03-13&#xA;&lt;ul&gt;&#xA;&lt;li&gt;巾帼枭雄之义海豪情&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-02-20&#xA;&lt;ul&gt;&#xA;&lt;li&gt;新闻女王&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-02-18&#xA;&lt;ul&gt;&#xA;&lt;li&gt;飞驰人生2&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-02-09&#xA;&lt;ul&gt;&#xA;&lt;li&gt;阿尔法围棋&lt;/li&gt;&#xA;&lt;li&gt;哈利波特20周年：回到霍格沃茨&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-02-08&#xA;&lt;ul&gt;&#xA;&lt;li&gt;三大队&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-01-20&#xA;&lt;ul&gt;&#xA;&lt;li&gt;土拨鼠之日&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-01-10&#xA;&lt;ul&gt;&#xA;&lt;li&gt;请回答1988&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2023&#34;&gt;&#xA;  2023&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2023&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年5月2日 &lt;strong&gt;婚姻生活&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年4月29日 &lt;strong&gt;惠子，凝视&lt;/strong&gt; ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年3月18日 &lt;strong&gt;黑暗荣耀 第二季&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年3月05日 &lt;strong&gt;乒乓&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年2月12日 &lt;strong&gt;健听女孩&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月30日 &lt;strong&gt;黑匣子&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月29日 &lt;strong&gt;巴斯克·斯克鲁格斯的歌谣&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月27日 &lt;strong&gt;马拉多纳2019&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月26日 &lt;strong&gt;马拉多纳之死&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月26日 &lt;strong&gt;打扰伯格曼&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月26日 &lt;strong&gt;误杀瞒天记&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月26日 &lt;strong&gt;我即闪电&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月25日 &lt;strong&gt;风骚律师 第六季&lt;/strong&gt; ⭐⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月25日 &lt;strong&gt;宿敌&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月24日 &lt;strong&gt;互联网之子&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月22日 &lt;strong&gt;互联网之子&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月22日 &lt;strong&gt;万圣节的新娘&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月22日 &lt;strong&gt;伊卡洛斯&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月22日 &lt;strong&gt;老师，您能坐我旁边吗？&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2022&#34;&gt;&#xA;  2022&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2022&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年10月07日 &lt;strong&gt;真相捕捉 第二季&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年10月03日 &lt;strong&gt;黑洞&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年09月10日 &lt;strong&gt;六号车厢&lt;/strong&gt; ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年08月10日 &lt;strong&gt;我的天才女友 第三季&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年07月31日 &lt;strong&gt;命运喜欢恶作剧&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年07月30日 &lt;strong&gt;人生大事&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年07月26日 &lt;strong&gt;渔业阴谋&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月08日 &lt;strong&gt;Tinder诈骗王&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月07日 &lt;strong&gt;亢奋 第一季&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月03日 &lt;strong&gt;情事&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月03日 &lt;strong&gt;火口的两人&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月03日 &lt;strong&gt;激情&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月02日 &lt;strong&gt;偶然与想象&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月02日 &lt;strong&gt;东城梦魇&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月01日 &lt;strong&gt;2020去死&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月31日 &lt;strong&gt;瀑布&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月31日 &lt;strong&gt;天注定&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月30日 &lt;strong&gt;T省的 84·85年&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月30日 &lt;strong&gt;天道&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月20日 &lt;strong&gt;405谋杀案&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月19日 &lt;strong&gt;背靠背，脸对脸&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月18日 &lt;strong&gt;黑炮事件&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月17日 &lt;strong&gt;成瘾剂量&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月09日 &lt;strong&gt;驾驶我的车&lt;/strong&gt; ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月01日 &lt;strong&gt;踏雪寻梅&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2021&#34;&gt;&#xA;  2021&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2021&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年12月26日 &lt;strong&gt;困在时间里的父亲&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年11月19日 &lt;strong&gt;扬名立万&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年11月13日 &lt;strong&gt;不老奇事&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年10月31日 &lt;strong&gt;沙丘&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年10月31日 &lt;strong&gt;007:无暇赴死&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年10月16日 &lt;strong&gt;长津湖&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年10月10日 &lt;strong&gt;吗啡&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年09月25日 &lt;strong&gt;峰爆&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年09月22日 &lt;strong&gt;教室里的一头牦牛&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年09月20日 &lt;strong&gt;无依之地&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年09月03日 &lt;strong&gt;失控玩家&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年08月29日 &lt;strong&gt;让子弹飞&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年08月15日 &lt;strong&gt;心灵奇旅&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年08月10日 &lt;strong&gt;脸庞，村庄&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年08月07日 &lt;strong&gt;沉默的真相&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年08月02日 &lt;strong&gt;隐秘的角落&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年07月31日 &lt;strong&gt;花束般的恋爱&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年07月30日 &lt;strong&gt;热带往事&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年07月30日 &lt;strong&gt;大阪直美&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年07月26日 &lt;strong&gt;俗女养成记&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年07月07日 &lt;strong&gt;巴萨提的颜色&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年07月04日 &lt;strong&gt;真心半解&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年06月11日 &lt;strong&gt;过把瘾&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年06月08日 &lt;strong&gt;射雕英雄传&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月27日 &lt;strong&gt;茶馆&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月16日 &lt;strong&gt;人间的条件 5,6&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月15日 &lt;strong&gt;人间的条件 3,4&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月14日&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;热带雨&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;人间的条件 1,2&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月13日 &lt;strong&gt;南海十三郎&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月11日 &lt;strong&gt;笨鸟&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月10日 &lt;strong&gt;无言的山丘&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月09日 &lt;strong&gt;恐怖分子&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月08日 &lt;strong&gt;海滩的一日&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月08日 &lt;strong&gt;麻将&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月07日&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;青梅竹马&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;盲山&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;万箭穿心&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月06日 &lt;strong&gt;倒霉性爱，发狂黄片&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月05日 &lt;strong&gt;龙争虎斗&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;零水日&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月04日 &lt;strong&gt;若水&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月04日 &lt;strong&gt;剩女&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021-04-13&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 盗火者：中国教育改革调查&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;others&#34;&gt;&#xA;  others&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#others&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/dL20Yu5&#34;&gt;【风骚律师杂谈】我爱你——86年&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>观影记录</title>
      <link>/zh/zh/post/life/movies-log/</link>
      <pubDate>Thu, 14 Nov 2024 08:59:49 +0800</pubDate>
      <guid>/zh/zh/post/life/movies-log/</guid>
      <description>&lt;h1 id=&#34;观影记录&#34;&gt;&#xA;  观影记录&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%82%e5%bd%b1%e8%ae%b0%e5%bd%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;2025&#34;&gt;&#xA;  2025&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025-01-12&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 敦煌&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 &lt;code&gt;2025-01-16&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 &lt;code&gt;2025-01-18&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 &lt;code&gt;2025-01-20&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 ``&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 ``&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 ``&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 ``&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 ``&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2025-01-11&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如果国宝会说话 第四季&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 东京爱情故事&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 &lt;code&gt;2025-01-16&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 &lt;code&gt;2025-01-17&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 &lt;code&gt;2025-01-18&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 &lt;code&gt;2025-01-19&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 &lt;code&gt;2025-01-20&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 &lt;code&gt;2025-01-22&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11 ``&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2025-01-10&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 飞屋环游记&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2025-01-07&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如果国宝会说话 第三季&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2025-01-04&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如果国宝会说话 第二季&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2025-01-03&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 辛德勒的名单（2）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2025-01-02&#xA;&lt;ul&gt;&#xA;&lt;li&gt;四重奏&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 2025-01-02&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 2025-01-07&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 2025-01-10&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;code&gt;10&lt;/code&gt; 2025-01-10&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2025-01-01&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如果国宝会说话 第一季&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2024&#34;&gt;&#xA;  2024&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2024&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2024-12-01&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 金色梦乡&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-30&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Better Call Saul S04E07&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-29&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Better Call Saul S04E06&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-28&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Better Call Saul S04E05&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-27&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Better Call Saul S04E03-04&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-26&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Better Call Saul S04E01-02&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-25&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Better Call Saul S03E09-10&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-23&#xA;&lt;ul&gt;&#xA;&lt;li&gt;热血警探&lt;/li&gt;&#xA;&lt;li&gt;铁雨 ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-18&#xA;&lt;ul&gt;&#xA;&lt;li&gt;东邪西毒 终极版&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-17&#xA;&lt;ul&gt;&#xA;&lt;li&gt;甲方乙方&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-16&#xA;&lt;ul&gt;&#xA;&lt;li&gt;正义回廊 ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;li&gt;有话好好说 ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-15&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Better Call Saul S03E07&lt;/li&gt;&#xA;&lt;li&gt;Better Call Saul S03E08&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-14&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Better Call Saul S03E06&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-13&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Better Call Saul S03E05&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-12&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Better Call Saul S03E04&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-11-12&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Better Call Saul S03E02&lt;/li&gt;&#xA;&lt;li&gt;Better Call Saul S03E03&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-24&#xA;&lt;ul&gt;&#xA;&lt;li&gt;哈利波特与死亡圣器 下&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-23&#xA;&lt;ul&gt;&#xA;&lt;li&gt;哈利波特与死亡圣器 上&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-22&#xA;&lt;ul&gt;&#xA;&lt;li&gt;哈利波特与混血王子&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-20&#xA;&lt;ul&gt;&#xA;&lt;li&gt;哈利波特与凤凰社&lt;/li&gt;&#xA;&lt;li&gt;哈利波特与火焰杯&lt;/li&gt;&#xA;&lt;li&gt;哈利波特与阿兹卡班的囚徒&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-19&#xA;&lt;ul&gt;&#xA;&lt;li&gt;哈利波特与密室&lt;/li&gt;&#xA;&lt;li&gt;哈利波特与魔法石&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2024-10-07&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 燃情岁月 ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 抓娃娃&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-06&#xA;&lt;ul&gt;&#xA;&lt;li&gt;赛德克巴莱&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-05&#xA;&lt;ul&gt;&#xA;&lt;li&gt;名侦探柯南：百万美元的五棱星&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-10-04&#xA;&lt;ul&gt;&#xA;&lt;li&gt;年会不能停&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-09-17&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://movie.douban.com/subject/26304212/?dt_dapp=1&#34;&gt;市场法则&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 过季 ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://movie.douban.com/subject/35902857/?dt_dapp=1&#34;&gt;完美的日子&lt;/a&gt; ⭐⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-09-15&#xA;&lt;ul&gt;&#xA;&lt;li&gt;幽灵公主&lt;/li&gt;&#xA;&lt;li&gt;鬼灭之刃 那田蜘蛛山篇&lt;/li&gt;&#xA;&lt;li&gt;鬼灭之刃 柱训练篇&lt;/li&gt;&#xA;&lt;li&gt;鬼灭之刃 锻刀村篇&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-09-08&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不要抬头&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://movie.douban.com/subject/25878808/?dt_dapp=1&#34;&gt;2024-08-18 一部关于咖啡的电影&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;2024-07-14&#xA;&lt;ul&gt;&#xA;&lt;li&gt;鬼灭之刃 游郭篇&lt;/li&gt;&#xA;&lt;li&gt;鬼灭之刃 无限列车篇&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-07-07&#xA;&lt;ul&gt;&#xA;&lt;li&gt;朗读者&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-06-15&#xA;&lt;ul&gt;&#xA;&lt;li&gt;环法自行车赛：逆风飞驰 第二季&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-06-09&#xA;&lt;ul&gt;&#xA;&lt;li&gt;江湖儿女&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-05-19&#xA;&lt;ul&gt;&#xA;&lt;li&gt;红猪&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-05-12&#xA;&lt;ul&gt;&#xA;&lt;li&gt;繁花&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-05-04&#xA;&lt;ul&gt;&#xA;&lt;li&gt;极速车王&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-05-03&#xA;&lt;ul&gt;&#xA;&lt;li&gt;大佛普拉斯&lt;/li&gt;&#xA;&lt;li&gt;芝加哥七君子审判&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-04-22&#xA;&lt;ul&gt;&#xA;&lt;li&gt;寻梦环游记&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-04-21&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你想活出怎样的人生&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-04-06&#xA;&lt;ul&gt;&#xA;&lt;li&gt;黄海&lt;/li&gt;&#xA;&lt;li&gt;逃离乌托邦&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-04-04&#xA;&lt;ul&gt;&#xA;&lt;li&gt;坠落的审判&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-03-15&#xA;&lt;ul&gt;&#xA;&lt;li&gt;周处除三害&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-03-13&#xA;&lt;ul&gt;&#xA;&lt;li&gt;巾帼枭雄之义海豪情&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-02-20&#xA;&lt;ul&gt;&#xA;&lt;li&gt;新闻女王&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-02-18&#xA;&lt;ul&gt;&#xA;&lt;li&gt;飞驰人生2&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-02-09&#xA;&lt;ul&gt;&#xA;&lt;li&gt;阿尔法围棋&lt;/li&gt;&#xA;&lt;li&gt;哈利波特20周年：回到霍格沃茨&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-02-08&#xA;&lt;ul&gt;&#xA;&lt;li&gt;三大队&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-01-20&#xA;&lt;ul&gt;&#xA;&lt;li&gt;土拨鼠之日&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2024-01-10&#xA;&lt;ul&gt;&#xA;&lt;li&gt;请回答1988&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2023&#34;&gt;&#xA;  2023&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2023&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年5月2日 &lt;strong&gt;婚姻生活&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年4月29日 &lt;strong&gt;惠子，凝视&lt;/strong&gt; ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年3月18日 &lt;strong&gt;黑暗荣耀 第二季&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年3月05日 &lt;strong&gt;乒乓&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年2月12日 &lt;strong&gt;健听女孩&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月30日 &lt;strong&gt;黑匣子&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月29日 &lt;strong&gt;巴斯克·斯克鲁格斯的歌谣&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月27日 &lt;strong&gt;马拉多纳2019&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月26日 &lt;strong&gt;马拉多纳之死&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月26日 &lt;strong&gt;打扰伯格曼&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月26日 &lt;strong&gt;误杀瞒天记&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月26日 &lt;strong&gt;我即闪电&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月25日 &lt;strong&gt;风骚律师 第六季&lt;/strong&gt; ⭐⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月25日 &lt;strong&gt;宿敌&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月24日 &lt;strong&gt;互联网之子&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月22日 &lt;strong&gt;互联网之子&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月22日 &lt;strong&gt;万圣节的新娘&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月22日 &lt;strong&gt;伊卡洛斯&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023年1月22日 &lt;strong&gt;老师，您能坐我旁边吗？&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2022&#34;&gt;&#xA;  2022&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2022&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年10月07日 &lt;strong&gt;真相捕捉 第二季&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年10月03日 &lt;strong&gt;黑洞&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年09月10日 &lt;strong&gt;六号车厢&lt;/strong&gt; ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年08月10日 &lt;strong&gt;我的天才女友 第三季&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年07月31日 &lt;strong&gt;命运喜欢恶作剧&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年07月30日 &lt;strong&gt;人生大事&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年07月26日 &lt;strong&gt;渔业阴谋&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月08日 &lt;strong&gt;Tinder诈骗王&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月07日 &lt;strong&gt;亢奋 第一季&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月03日 &lt;strong&gt;情事&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月03日 &lt;strong&gt;火口的两人&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月03日 &lt;strong&gt;激情&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月02日 &lt;strong&gt;偶然与想象&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月02日 &lt;strong&gt;东城梦魇&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年02月01日 &lt;strong&gt;2020去死&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月31日 &lt;strong&gt;瀑布&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月31日 &lt;strong&gt;天注定&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月30日 &lt;strong&gt;T省的 84·85年&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月30日 &lt;strong&gt;天道&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月20日 &lt;strong&gt;405谋杀案&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月19日 &lt;strong&gt;背靠背，脸对脸&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月18日 &lt;strong&gt;黑炮事件&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月17日 &lt;strong&gt;成瘾剂量&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月09日 &lt;strong&gt;驾驶我的车&lt;/strong&gt; ⭐⭐⭐⭐&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2022年01月01日 &lt;strong&gt;踏雪寻梅&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2021&#34;&gt;&#xA;  2021&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2021&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年12月26日 &lt;strong&gt;困在时间里的父亲&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年11月19日 &lt;strong&gt;扬名立万&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年11月13日 &lt;strong&gt;不老奇事&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年10月31日 &lt;strong&gt;沙丘&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年10月31日 &lt;strong&gt;007:无暇赴死&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年10月16日 &lt;strong&gt;长津湖&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年10月10日 &lt;strong&gt;吗啡&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年09月25日 &lt;strong&gt;峰爆&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年09月22日 &lt;strong&gt;教室里的一头牦牛&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年09月20日 &lt;strong&gt;无依之地&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年09月03日 &lt;strong&gt;失控玩家&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年08月29日 &lt;strong&gt;让子弹飞&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年08月15日 &lt;strong&gt;心灵奇旅&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年08月10日 &lt;strong&gt;脸庞，村庄&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年08月07日 &lt;strong&gt;沉默的真相&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年08月02日 &lt;strong&gt;隐秘的角落&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年07月31日 &lt;strong&gt;花束般的恋爱&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年07月30日 &lt;strong&gt;热带往事&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年07月30日 &lt;strong&gt;大阪直美&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年07月26日 &lt;strong&gt;俗女养成记&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年07月07日 &lt;strong&gt;巴萨提的颜色&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年07月04日 &lt;strong&gt;真心半解&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年06月11日 &lt;strong&gt;过把瘾&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年06月08日 &lt;strong&gt;射雕英雄传&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月27日 &lt;strong&gt;茶馆&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月16日 &lt;strong&gt;人间的条件 5,6&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月15日 &lt;strong&gt;人间的条件 3,4&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月14日&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;热带雨&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;人间的条件 1,2&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月13日 &lt;strong&gt;南海十三郎&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月11日 &lt;strong&gt;笨鸟&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月10日 &lt;strong&gt;无言的山丘&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月09日 &lt;strong&gt;恐怖分子&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月08日 &lt;strong&gt;海滩的一日&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月08日 &lt;strong&gt;麻将&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月07日&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;青梅竹马&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;盲山&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;万箭穿心&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月06日 &lt;strong&gt;倒霉性爱，发狂黄片&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月05日 &lt;strong&gt;龙争虎斗&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;零水日&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月04日 &lt;strong&gt;若水&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021年05月04日 &lt;strong&gt;剩女&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2021-04-13&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 盗火者：中国教育改革调查&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;others&#34;&gt;&#xA;  others&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#others&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/dL20Yu5&#34;&gt;【风骚律师杂谈】我爱你——86年&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>学习记录</title>
      <link>/zh/post/computer-science/computer-science-learning-log/</link>
      <pubDate>Thu, 14 Nov 2024 08:59:49 +0800</pubDate>
      <guid>/zh/post/computer-science/computer-science-learning-log/</guid>
      <description>&lt;h1 id=&#34;学习记录&#34;&gt;&#xA;  学习记录&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ad%a6%e4%b9%a0%e8%ae%b0%e5%bd%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;2025-01-17&#34;&gt;&#xA;  2025-01-17&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-17&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;剑指offer-book&#34;&gt;&#xA;  剑指Offer Book&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%89%91%e6%8c%87offer-book&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/25910559/&#34;&gt;剑指Offer&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第1章-面试的流程-1&#34;&gt;&#xA;  第1章 面试的流程 1&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-%e9%9d%a2%e8%af%95%e7%9a%84%e6%b5%81%e7%a8%8b-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.1 面试官谈面试 1&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.2 面试的三种形式 2&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.2.1 电话面试 2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.2.2 共享桌面远程面试 3&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.2.3 现场面试 4&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.3 面试的三个环节 5&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.3.1 行为面试环节 5&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 应聘者的项目经验 6&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 应聘者掌握的技能 7&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 回答“为什么跳槽” 8&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.3.2 技术面试环节 10&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 扎实的基础知识 10&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 高质量的代码 11&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 清晰的思路 14&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 优化效率的能力 15&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 优秀的综合能力 16&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.3.3 应聘者提问环节 17&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.4 本章小结 18&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第2章-面试需要的基础知识-20&#34;&gt;&#xA;  第2章 面试需要的基础知识 20&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-%e9%9d%a2%e8%af%95%e9%9c%80%e8%a6%81%e7%9a%84%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86-20&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2.1 面试官谈基础知识 20&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.2 编程语言 22&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.2.1 C++ 22&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题1：赋值运算符函数 24&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 经典的解法，适用于初级程序员 25&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 考虑异常安全性的解法，高级程序员必备 26&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.2.2 C# 27&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题2：实现Singleton模式 31&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 不好的解法一：只适用于单线程 31&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 不好的解法二：可用于多线程但效率不高 32&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 可行的解法：同步锁前后两次判断 33&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 推荐的解法一：利用静态构造函数 34&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 推荐的解法二：按需创建实例 34&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 解法比较 35&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.3 数据结构 36&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.3.1 数组 36&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题3：二维数组中的查找 38&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.3.2 字符串 42&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题4：替换空格 44&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; O(n2)的解法，不足以拿到Offer 45&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; O(n)的解法，搞定Offer就靠它 46&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.3.3 链表 49&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题5：从尾到头打印链表 51&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.3.4 树 53&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题6：重建二叉树 55&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.3.5 栈和队列 58&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题7：用两个栈实现队列 59&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.4 算法和数据操作 62&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.4.1 查找和排序 63&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题8：旋转数组的最小数字 66&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.4.2 递归和循环 71&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题9：斐波那契数列 73&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 效率很低的解法，面试官不会喜欢 73&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试官期待的实用解法 74&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; O(logn)但不够实用的解法 74&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 解法比较 75&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.4.3 位运算 77&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题10：二进制中1的个数 78&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 可能引起死循环的解法 79&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 常规解法 79&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 能给面试官带来惊喜的解法 80&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.5 本章小结 82&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第3章-高质量的代码-84&#34;&gt;&#xA;  第3章 高质量的代码 84&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0-%e9%ab%98%e8%b4%a8%e9%87%8f%e7%9a%84%e4%bb%a3%e7%a0%81-84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.1 面试官谈代码质量 84&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.2 代码的规范性 86&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.3 代码的完整性 87&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 从3方面确保代码的完整性 87&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3种错误处理的方法 88&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题11：数值的整数次方 90&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 自以为题目简单的解法 90&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 全面但不够高效的解法，离Offer已经很近了 90&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 全面又高效的解法，确保能拿到Offer 92&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题12：打印1到最大的n位数 94&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 跳进面试官陷阱 94&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 在字符串上模拟数字加法 94&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 把问题转换成数字排列 97&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题13：在O(1)时间删除链表结点 99&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题14：调整数组顺序使奇数位于偶数前面 102&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 只完成基本功能的解法，仅适用于初级程序员 102&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 考虑可扩展性的解法，能秒杀Offer 104&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.4 代码的鲁棒性 106&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题15：链表中倒数第k个结点 107&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题16：反转链表 112&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题17：合并两个排序的链表 114&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题18：树的子结构 117&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.5 本章小结 121&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第4章-解决面试题的思路-123&#34;&gt;&#xA;  第4章 解决面试题的思路 123&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0-%e8%a7%a3%e5%86%b3%e9%9d%a2%e8%af%95%e9%a2%98%e7%9a%84%e6%80%9d%e8%b7%af-123&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4.1 面试官谈面试思路 123&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题19：二叉树的镜像 125&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4.2 画图让抽象问题形象化 125&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题20：顺时针打印矩阵 127&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4.3 举例让抽象问题具体化 131&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题21：包含min函数的栈 132&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题22：栈的压入、弹出序列 134&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题23：从上往下打印二叉树 137&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题24：二叉搜索树的后序遍历序列 140&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题25：二叉树中和为某一值的路径 143&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4.4 分解让复杂问题简单化 146&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题26：复杂链表的复制 147&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题27：二叉搜索树与双向链表 151&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题28：字符串的排列 154&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4.5 本章小结 158&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第5章-优化时间和空间效率-160&#34;&gt;&#xA;  第5章 优化时间和空间效率 160&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac5%e7%ab%a0-%e4%bc%98%e5%8c%96%e6%97%b6%e9%97%b4%e5%92%8c%e7%a9%ba%e9%97%b4%e6%95%88%e7%8e%87-160&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.1 面试官谈效率 160&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.2 时间效率 162&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题29：数组中出现次数超过一半的数字 163&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 基于Partition函数的O(n)算法 163&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 利用数组特点的O(n)算法 165&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 解法比较 166&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题30：最小的k个数 167&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; O(n)的算法，只当可以修改输入数组时可用 167&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; O(nlogk)的算法，适合处理海量数据 168&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 解法比较 169&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题31：连续子数组的最大和 171&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 举例分析数组的规律 171&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 应用动态规划法 173&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题32：从1到n整数中1出现的次数 174&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 不考虑效率的解法，想拿Offer有点难 174&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 明显提高效率的解法，让面试官耳目一新 175&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题33：把数组排成最小的数 177&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.3 时间效率与空间效率的平衡 181&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题34：丑数 182&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 逐个判断整数是不是丑数的解法 182&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 创建数组保存已经找到的丑数的解法 183&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题35：第一个只出现一次的字符 186&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题36：数组中的逆序对 189&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题37：两个链表的第一个公共结点 193&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.4 本章小结 196&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第6章-面试中的各项能力-198&#34;&gt;&#xA;  第6章 面试中的各项能力 198&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0-%e9%9d%a2%e8%af%95%e4%b8%ad%e7%9a%84%e5%90%84%e9%a1%b9%e8%83%bd%e5%8a%9b-198&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.1 面试官谈能力 198&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.2 沟通能力和学习能力 200&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 沟通能力 200&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 学习能力 200&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 善于学习、沟通的人也善于提问 201&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.3 知识迁移能力 203&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题38：数字在排序数组中出现的次数 204&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题39：二叉树的深度 207&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 重复遍历结点的解法，不足以打动面试官 209&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 只遍历结点一次的解法，正是面试官喜欢的 209&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题40：数组中只出现一次的数字 211&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题41：和为s的两个数字VS和为s的连续正数序列 214&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题42：翻转单词顺序 VS左旋转字符串 218&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.4 抽象建模能力 222&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题43：n个骰子的点数 223&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 基于递归求骰子点数，时间效率不够高 223&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 基于循环求骰子点数，时间性能好 224&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题44：扑克牌的顺子 226&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题45：圆圈中最后剩下的数字 228&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 经典的解法，用循环链表模拟圆圈 229&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 创新的解法，拿到Offer不在话下 230&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.5 发散思维能力 232&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题46：求1+2+…+n 233&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 利用构造函数求解 234&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 利用虚函数求解 234&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 利用函数指针求解 235&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 利用模板类型求解 236&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题47：不用加减乘除做加法 237&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题48：不能被继承的类 239&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 常规的解法：把构造函数设为私有函数 239&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 新奇的解法：利用虚拟继承 240&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.6 本章小结 241&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第7章-两个面试案例-243&#34;&gt;&#xA;  第7章 两个面试案例 243&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac7%e7%ab%a0-%e4%b8%a4%e4%b8%aa%e9%9d%a2%e8%af%95%e6%a1%88%e4%be%8b-243&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7.1 案例一：（面试题49）把字符串转换成整数 244&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7.2 案例二：（面试题50）树中两个结点的最低公共祖先 252&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第8章-英文版新增面试题-261&#34;&gt;&#xA;  第8章 英文版新增面试题 261&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac8%e7%ab%a0-%e8%8b%b1%e6%96%87%e7%89%88%e6%96%b0%e5%a2%9e%e9%9d%a2%e8%af%95%e9%a2%98-261&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.1 数组 261&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题51：数组中重复的数字 261&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题52：构建乘积数组 263&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.2 字符串 265&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题53：正则表达式匹配 265&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题54：表示数值的字符串 267&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题55：字符流中第一个不重复的字符 269&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.3 链表 270&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题56：链表中环的入口结点 270&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题57：删除链表中重复的结点 273&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.4 树 275&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题58：二叉树的下一个结点 275&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题59：对称的二叉树 277&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题60：把二叉树打印成多行 278&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题61：按之字形顺序打印二叉树 280&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题62：序列化二叉树 283&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题63：二叉搜索树的第k个结点 285&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题64：数据流中的中位数 286&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.5 栈和队列 290&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题65：滑动窗口的最大值 290&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.6 回溯法 294&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题66：矩阵中的路径 294&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题67：机器人的运动范围 296&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2025-01-11&#34;&gt;&#xA;  2025-01-11&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-11&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;leetcode-刷题&#34;&gt;&#xA;  leetcode 刷题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#leetcode-%e5%88%b7%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试经典150题&#34;&gt;&#xA;  面试经典150题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e7%bb%8f%e5%85%b8150%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.cn/studyplan/top-interview-150/&#34;&gt;面试经典150题&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;数组字符串&#34;&gt;&#xA;  数组/字符串&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e7%bb%84%e5%ad%97%e7%ac%a6%e4%b8%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/merge-sorted-array/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;合并两个有序数组&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution88.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/remove-element/submissions/592471220/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;移除元素&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 删除有序数组中的重复项&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11 没有做出来，看的官方题解&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution26.java&#34;&gt;2025-01-11&lt;/a&gt; 做完&lt;code&gt;删除有序数组中的重复项 II&lt;/code&gt;之后再尝试重新解题完成&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 删除有序数组中的重复项 II&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution80.java&#34;&gt;2025-01-11&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/majority-element/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;多数元素&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution169.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/rotate-array/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;轮转数组&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution189.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;进阶&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 尽可能想出更多的解决方案，至少有 三种 不同的方法可以解决这个问题。&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 你可以使用空间复杂度为 O(1) 的 原地 算法解决这个问题吗？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/best-time-to-buy-and-sell-stock/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;买卖股票的最佳时机&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11 看官方题解做出来的&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 review&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;买卖股票的最佳时机 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 官方题解 理解&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 方法一：动态规划&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 方法二：贪心&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/jump-game/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;跳跃游戏&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 官方题解理解 贪心&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution55.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/jump-game-ii/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;跳跃游戏 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution45.java&#34;&gt;2025-01-18 算法超时了&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 理解官方题解&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-18 方法一：反向查找出发位置&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Solution45.jump2&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-18 方法二：正向查找可达到的最大位置&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Solution45.jump3&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/h-index/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;H 指数&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution274.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Tips&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; An easy approach is to sort the array first.&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What are the possible values of h-index?&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; A faster approach is to use extra space.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; O(1) 时间插入、删除和获取随机元素&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 除自身以外数组的乘积&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 加油站&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 分发糖果&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 接雨水&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/roman-to-integer/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;罗马数字转整数&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution13.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 整数转罗马数字&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/length-of-last-word/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;最后一个单词的长度&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution58.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/longest-common-prefix/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;最长公共前缀&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution14.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/reverse-words-in-a-string/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;反转字符串中的单词&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution151.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;进阶&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Z 字形变换&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/find-the-index-of-the-first-occurrence-in-a-string/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;找出字符串中第一个匹配项的下标&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution28.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 文本左右对齐&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;双指针&#34;&gt;&#xA;  双指针&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%8c%e6%8c%87%e9%92%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/valid-palindrome/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;验证回文串&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution125.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/is-subsequence/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;判断子序列&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution392.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/two-sum-ii-input-array-is-sorted/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;两数之和 II - 输入有序数组&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution167.java&#34;&gt;2025-01-13&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 运行有时候会超过时间限制&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/container-with-most-water/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;盛最多水的容器&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 三数之和&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;滑动窗口&#34;&gt;&#xA;  滑动窗口&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%bb%91%e5%8a%a8%e7%aa%97%e5%8f%a3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/minimum-size-subarray-sum/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;长度最小的子数组&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution209.java&#34;&gt;2025-01-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/longest-substring-without-repeating-characters/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;无重复字符的最长子串&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution3.java&#34;&gt;2025-01-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/substring-with-concatenation-of-all-words/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;串联所有单词的子串&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution30.java&#34;&gt;2025-01-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/minimum-window-substring/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;最小覆盖子串&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;矩阵&#34;&gt;&#xA;  矩阵&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%9f%a9%e9%98%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/valid-sudoku/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;有效的数独&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution36.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/spiral-matrix/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;螺旋矩阵&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution54.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/rotate-image/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;旋转图像&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 理解官方题解&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-18 方法一：使用辅助数组&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-18 方法二：原地旋转&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 有数学公式的推导，需要自己推导一次&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-18 方法三：用翻转代替旋转&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 有数学公式的推导，需要自己推导一次&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/set-matrix-zeroes/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;矩阵置零&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution73.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/game-of-life/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;生命游戏&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution289.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;进阶&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 你可以使用原地算法解决本题吗？请注意，面板上所有格子需要同时被更新：你不能先更新某些格子，然后使用它们的更新后的值再更新其他格子。&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 本题中，我们使用二维数组来表示面板。原则上，面板是无限的，但当活细胞侵占了面板边界时会造成问题。你将如何解决这些问题？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;-哈希表&#34;&gt;&#xA;  ✅ 哈希表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e5%93%88%e5%b8%8c%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/ransom-note/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;赎金信&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution383.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/isomorphic-strings/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;同构字符串&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution205.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/word-pattern/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;单词规律&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution290.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/valid-anagram/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;有效的字母异位词&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution242.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/group-anagrams/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;字母异位词分组&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution49.java&#34;&gt;2025-01-16&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;第一遍算法超时，看了官方题解思路后实现通过&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/two-sum/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;两数之和&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution1.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/happy-number/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;快乐数&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution202.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/contains-duplicate-ii/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;存在重复元素 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution219.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/longest-consecutive-sequence/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;最长连续序列&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution128.java&#34;&gt;2025-01-16&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;看了官方题解后完成&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;区间&#34;&gt;&#xA;  区间&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8c%ba%e9%97%b4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;栈&#34;&gt;&#xA;  栈&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/valid-parentheses/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;有效的括号&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution20.java&#34;&gt;2025-01-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/simplify-path/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;简化路径&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution71.java&#34;&gt;2025-01-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/min-stack/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;最小栈&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution155.java&#34;&gt;2025-01-22&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;理解官方题解 文字描述后完成&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-22 理解官方题解&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/evaluate-reverse-polish-notation/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;逆波兰表达式求值&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution150.java&#34;&gt;2025-01-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 基本计算器&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;链表&#34;&gt;&#xA;  链表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%93%be%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/linked-list-cycle/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;环形链表&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution141.java&#34;&gt;2025-01-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;理解官方题解&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-20 方法一：哈希表&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 方法二：快慢指针&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/add-two-numbers/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;两数相加&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution2.java&#34;&gt;2025-01-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/merge-two-sorted-lists/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;合并两个有序链表&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution21.java&#34;&gt;2025-01-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/copy-list-with-random-pointer/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;随机链表的复制&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution138.java&#34;&gt;2025-01-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/reverse-linked-list-ii/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;反转链表 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution92.java&#34;&gt;2025-01-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/reverse-nodes-in-k-group/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;K 个一组翻转链表&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/remove-nth-node-from-end-of-list/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;删除链表的倒数第 N 个结点&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution19.java&#34;&gt;2025-01-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;进阶&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-20 你能尝试使用一趟扫描实现吗？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/remove-duplicates-from-sorted-list-ii/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;删除排序链表中的重复元素 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution82.java&#34;&gt;2025-01-21&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/rotate-list/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;旋转链表&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution61.java&#34;&gt;2025-01-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/partition-list/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;分隔链表&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution86.java&#34;&gt;2025-01-21&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/lru-cache/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;LRU 缓存&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution146.java&#34;&gt;2025-01-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 理解官方题解&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;二叉树&#34;&gt;&#xA;  二叉树&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%8f%89%e6%a0%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/maximum-depth-of-binary-tree/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;二叉树的最大深度&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution104.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/same-tree/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;相同的树&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution100.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/invert-binary-tree/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;翻转二叉树&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution226.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 对称二叉树&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 没做出来，看的官方题解&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 从前序与中序遍历序列构造二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 从中序与后序遍历序列构造二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 填充每个节点的下一个右侧节点指针 II&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 二叉树展开为链表&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 路径总和&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 求根节点到叶节点数字之和&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 二叉树中的最大路径和&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 二叉搜索树迭代器&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 完全二叉树的节点个数&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 二叉树的最近公共祖先&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;二叉树层次遍历&#34;&gt;&#xA;  二叉树层次遍历&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%8f%89%e6%a0%91%e5%b1%82%e6%ac%a1%e9%81%8d%e5%8e%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;二叉搜索树&#34;&gt;&#xA;  二叉搜索树&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%8f%89%e6%90%9c%e7%b4%a2%e6%a0%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;图&#34;&gt;&#xA;  图&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%be&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;图的广度优先搜索&#34;&gt;&#xA;  图的广度优先搜索&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%be%e7%9a%84%e5%b9%bf%e5%ba%a6%e4%bc%98%e5%85%88%e6%90%9c%e7%b4%a2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;字典树&#34;&gt;&#xA;  字典树&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ad%97%e5%85%b8%e6%a0%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;-回溯&#34;&gt;&#xA;  ✅ 回溯&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e5%9b%9e%e6%ba%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/letter-combinations-of-a-phone-number/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;电话号码的字母组合&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution17.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/combinations/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;组合&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution77.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/permutations/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;全排列&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution46.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/combination-sum/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;组合总和&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution39.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/n-queens-ii/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;N 皇后 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution52.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/generate-parentheses/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;括号生成&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution22.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/word-search/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;单词搜索&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution79.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;分治&#34;&gt;&#xA;  分治&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%86%e6%b2%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;kadane算法&#34;&gt;&#xA;  kadane算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#kadane%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;二分查找&#34;&gt;&#xA;  二分查找&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%88%86%e6%9f%a5%e6%89%be&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;堆&#34;&gt;&#xA;  堆&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a0%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;位运算&#34;&gt;&#xA;  位运算&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bd%8d%e8%bf%90%e7%ae%97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/add-binary/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;二进制求和&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution67.java&#34;&gt;2025-01-16&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/reverse-bits/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;颠倒二进制位&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-16 没做出来, 参考这篇文章&lt;a href=&#34;https://blog.csdn.net/QuantumYou/article/details/119998894&#34;&gt;LeetCode 190. 颠倒二进制位 （位运算 分治）&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 复习了一遍&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution190.java&#34;&gt;2025-01-17 新增了中间值打印的代码在算法中&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/number-of-1-bits/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;位1的个数&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution191.java&#34;&gt;2025-01-17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/single-number/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;只出现一次的数字&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution136.java&#34;&gt;2025-01-17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/single-number-ii/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;只出现一次的数字 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 理解了官方题解 方法2&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/bitwise-and-of-numbers-range/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;数字范围按位与&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 理解了官方题解 方法2&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;数学&#34;&gt;&#xA;  数学&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e5%ad%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/palindrome-number/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;回文数&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution9.java&#34;&gt;2025-01-17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 不将整数转为字符串来解决这个问题&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/plus-one/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;加一&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution66.java&#34;&gt;2025-01-17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/factorial-trailing-zeroes/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;阶乘后的零&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution172.java&#34;&gt;2025-01-17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/sqrtx/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;x 的平方根&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution69.java&#34;&gt;2025-01-17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/powx-n/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;Pow(x, n)&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution50.java&#34;&gt;2025-01-17&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;超时了&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 看懂了官方题解&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 直线上最多的点数&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 看了官方题解，但还是不太理解&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;一维动态规划&#34;&gt;&#xA;  一维动态规划&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e7%bb%b4%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/climbing-stairs/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;爬楼梯&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11 通过&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;多维动态规划&#34;&gt;&#xA;  多维动态规划&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a4%9a%e7%bb%b4%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h2 id=&#34;2025-01-09&#34;&gt;&#xA;  2025-01-09&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-09&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;-spring实战-第6版-book&#34;&gt;&#xA;  ✅ Spring实战 第6版 Book&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-spring%e5%ae%9e%e6%88%98-%e7%ac%ac6%e7%89%88-book&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第1章 Spring 起步&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.1 什么是Spring &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.2 初始化 spring 应用 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.3 编写 Spring 应用 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.4 俯瞰 Spring 风景线 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第2章&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.1 展现信息 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.2 处理表单提交 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.3 校验表单输入 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.4 使用视图控制器 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.5 选择视图模板库 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第3章 使用数据&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.1 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.2 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.3 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第4章 使用非关系型数据&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4.1 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4.2 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第5章 保护Spring&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.1 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.2 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.3 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.4 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.5 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第6章 使用配置属性&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.1 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.2 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.3 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第7章 创建REST服务&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7.1 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7.2 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7.3 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第8章 保护REST&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.1 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.2 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.3 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.4 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第9章 发送异步消息&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9.1 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9.2 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9.3 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第10章 Spring集成&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10.1 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10.2 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10.3 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第11章 理解反应式编程&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11.1 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11.2 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11.3 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第12章 开发反应式API&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12.1 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12.2 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12.3 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12.4 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12.5 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第13章 反应式持久化数据&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13.1 &lt;code&gt;2025-01-14&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13.2 &lt;code&gt;2025-01-14&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13.3 &lt;code&gt;2025-01-14&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第14章 使用RSocket&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14.1 &lt;code&gt;2025-01-14&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14.2 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14.3 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第15章 部署Spring&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15.1 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15.2 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15.3 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15.4 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第16章 管理Spring&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16.1 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16.2 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16.3 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第17章 使用JMX监控Spring&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17.1 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17.2 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17.3 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第18章 部署Spring&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18.1 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18.2 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18.3 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18.4 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18.5 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;javaguide-文档阅读&#34;&gt;&#xA;  JavaGuide 文档阅读&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#javaguide-%e6%96%87%e6%a1%a3%e9%98%85%e8%af%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://javaguide.cn/home.html&#34;&gt;JavaGuide&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 必看&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试准备&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Java&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 计算机基础&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 数据库&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 开发工具&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 常用框架&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Spring&amp;amp;Spring Boot&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; MyBatis常见面试题总结&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-09 太过总结性，需要看一些更基础的文章&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Netty常见面试题总结&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 系统设计&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 分布式&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 高性能&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 高可用&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2025-01-08&#34;&gt;&#xA;  2025-01-08&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-08&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;计算机教育中缺失的学期&#34;&gt;&#xA;  计算机教育中缺失的学期&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%a1%e7%ae%97%e6%9c%ba%e6%95%99%e8%82%b2%e4%b8%ad%e7%bc%ba%e5%a4%b1%e7%9a%84%e5%ad%a6%e6%9c%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://space.bilibili.com/695281681/lists?sid=4245283&amp;amp;spm_id_from=333.788.0.0&#34;&gt;计算机教育中缺失的学期&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;阮一峰博客阅读&#34;&gt;&#xA;  阮一峰博客阅读&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%98%ae%e4%b8%80%e5%b3%b0%e5%8d%9a%e5%ae%a2%e9%98%85%e8%af%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/&#34;&gt;阮一峰的网络日志&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;散文&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;观点与感想&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;算法与数学&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;开发者手册&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;理解计算机&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;JavaScript&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;计算机行业历史&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;周刊&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;创业&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;译文集&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2025-01-05&#34;&gt;&#xA;  2025-01-05&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-05&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;spring-基础知识点-视频&#34;&gt;&#xA;  spring 基础知识点 视频&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#spring-%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86%e7%82%b9-%e8%a7%86%e9%a2%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1vLaceeEMY?spm_id_from=333.788.videopod.episodes&amp;amp;vd_source=867426e6965781e5a2c5ef2fc1a0f8f8&#34;&gt;B站大学终于把Spring做成动画片了，一周刷爆，2024最新版，学完即可面试，拿走不谢，学不会我退出IT圈！&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Spring 是如何整合MyBatis管理Mapper接口的 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11 (January 6, 2025 at 18:43:04 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12 (January 6, 2025 at 18:50:57 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13 (January 6, 2025 at 18:57:05 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14 (January 6, 2025 at 18:59:15 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15 2025-01-07&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16 2025-01-07&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 19&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 20&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 22&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 23&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 24&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 25&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 26&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 27&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 28&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 29&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 30&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 31&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 32&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 33&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 34&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 35&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 36&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 37&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 38&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 39&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 40&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 41&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 42&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 43&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 44&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 45&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 46&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 47&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 48&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 49&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 50&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 51&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 52&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 53&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 54&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 55&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 56&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 57&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 58&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 19&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 20&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 22&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 23&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 24&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 25&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 26&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 27&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 28&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 29&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 30&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 31&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 32&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 33&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 34&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 35&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 36&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 37&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 38&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 39&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 40&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 41&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 42&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 43&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 44&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 45&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 46&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 47&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 48&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 49&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 50&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 51&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 52&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 53&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 54&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 55&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 56&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 57&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 58&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 59&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 60&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 61&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 62&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 63&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 64&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 65&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 66&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 67&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 68&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 69&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 70&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 71&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 72&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 73&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 74&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 75&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 76&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 77&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 78&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 79&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 80&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 100&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2025-01-03&#34;&gt;&#xA;  2025-01-03&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-03&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;代码随想录-视频&#34;&gt;&#xA;  代码随想录 视频&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bb%a3%e7%a0%81%e9%9a%8f%e6%83%b3%e5%bd%95-%e8%a7%86%e9%a2%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1fA4y1o715&#34;&gt;代码随想录&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;数组&#34;&gt;&#xA;  数组&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e7%bb%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;链表-1&#34;&gt;&#xA;  链表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%93%be%e8%a1%a8-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;哈希表&#34;&gt;&#xA;  哈希表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%93%88%e5%b8%8c%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;字符串&#34;&gt;&#xA;  字符串&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ad%97%e7%ac%a6%e4%b8%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;栈与队列&#34;&gt;&#xA;  栈与队列&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%88%e4%b8%8e%e9%98%9f%e5%88%97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;二叉树-1&#34;&gt;&#xA;  二叉树&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%8f%89%e6%a0%91-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 &lt;a href=&#34;https://www.bilibili.com/video/BV1Hy4y1t7ij?vd_source=867426e6965781e5a2c5ef2fc1a0f8f8&amp;amp;spm_id_from=333.788.videopod.sections&#34;&gt;理论基础&lt;/a&gt; 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 递归遍历 (Leetcode 144, 145, 94) 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 非递归遍历 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 非递归遍历-中序 2025-01-11&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 层序遍历（广度优先搜索）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 翻转二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 对称二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 二叉树的最大深度&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 二叉树的最小深度&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 完全二叉树节点的数量&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11 平衡二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12 二叉树的所有路径&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13 左叶子之和&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14 找左下角的值&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15 路径总和&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16 从中序和后序遍历序列构造二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17 最大二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18 合并二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 19 &lt;a href=&#34;https://www.bilibili.com/video/BV1wG411g7sF?vd_source=867426e6965781e5a2c5ef2fc1a0f8f8&amp;amp;spm_id_from=333.788.videopod.sections&#34;&gt;二叉搜索树中的搜索&lt;/a&gt; (Leetcode 700) 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 20 验证二叉搜索树 (Leetcode 98) 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 21 二叉搜索树的最小绝对差 (Leetcode 530) 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 22 二叉搜索树中的众数(Leetcode 501) 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 23 二叉树的最近公共祖先(Leetcode 236) 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 24 二叉搜索树的最近公共祖先 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 25 二叉搜索树中的插入操作(Leetcode 701) 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 26 &lt;a href=&#34;https://www.bilibili.com/video/BV1tP41177us?vd_source=867426e6965781e5a2c5ef2fc1a0f8f8&amp;amp;spm_id_from=333.788.player.switch&#34;&gt;删除二叉搜索树中的节点(Leetcode 450)&lt;/a&gt; 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 27 修剪二叉搜索树 (Leetcode 669) 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 28 将有序数组转换为二叉搜索树 (Leetcode 108) 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 29 把二叉搜索树转换为累加树(Leetcode 538) 2025-01-09&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-回溯法&#34;&gt;&#xA;  ✅ 回溯法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e5%9b%9e%e6%ba%af%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 理论篇 2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 组合问题（对应力扣题目：77.组合） 2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 组合问题的剪枝操作（对应力扣题目：77.组合）2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 回溯算法如何剪枝？| LeetCode：216.组合总和III 2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 LeetCode：17.电话号码的字母组合 2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 组合总和（对应「leetcode」力扣题目：39.组合总和） 2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 LeetCode:40.组合总和II 2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 分割回文串 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 复原IP地址 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 子集 （Leetcode 78） 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11 子集2（Leetcode 90） 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12 递增子序列（Leetcode 491） 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13 全排列（Leetcode 46） 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14 全排列2（Leetcode 47）2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15 N皇后（Leetcode 51） 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16 解数独（Leetcode 37） 2025-01-05&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-贪心算法&#34;&gt;&#xA;  ✅ 贪心算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e8%b4%aa%e5%bf%83%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 理论基础 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 分发饼干 leetcode 455 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 摆动序列 Leetcode 376 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 最大子序和 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 买卖股票最佳时机2 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 跳跃游戏（Leetcode 55） 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 跳跃游戏2 （Leetcode 45） 2025-01-06&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这道题没听懂&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 K次取反后最大化的数组和 （Leetcode 1005） 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 加油站（Leetcode 134） 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 分发糖果（Leetcode 135） 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 柠檬水找零（Leetcode 860） 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11 根据身高重建队列（Leetcode 406） 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12 用最少数量的箭引爆气球(Leetcode 452) 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13 无重叠区间(Leetcode 435) 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14 划分字母区间 (Leetcode 763) 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15 合并区间 （Leetcode 56） (January 7, 2025 at 15:18:40 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16 单调自增的数字（Leetcode 738）(January 7, 2025 at 15:41:59 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17 监督二叉树（Leetcode 968） (January 7, 2025 at 16:11:51 GMT+8)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;动态规划&#34;&gt;&#xA;  动态规划&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 理论基础   (January 7, 2025 at 16:34:49 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 斐波那契数列 （Leetcode 509） (January 7, 2025 at 16:46:54 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 爬楼梯（Leetcode 70） (January 7, 2025 at 16:57:46 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 &lt;a href=&#34;https://www.bilibili.com/video/BV16G411c7yZ&#34;&gt;使用最小花费爬楼梯&lt;/a&gt; (Leetcode 746)  2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 不同路径 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 不同路径2 (Leetcode 63) 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 整数拆分 (Leetcode 343)  2025-01-08&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这道题没太听懂&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 不同的二叉搜索树（Leetcode 96）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 0-1背包问题理论基础&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 0-1背包问题之滚动数组&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11 分割等和子集&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12 最后一块石头的重量2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13 目标和&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14 一和零&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15 完全背包理论基础&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16 零钱兑换2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17 组合综合4&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18 零钱兑换&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 19 完全平方数&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 20 单词拆分&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 21 打家劫舍&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 22 打家劫舍2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 23 打家劫舍3&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 24 买卖股票的最佳时机1&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 25 买卖股票的最佳时机2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 26 买卖股票的最佳时机3&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 27 买卖股票的最佳时机4&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 28 买卖股票的最佳时机含冷冻期&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 29 买卖股票的最佳时机含手续费&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 30 最长递增子序列&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 31 最长连续递增序列&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 32 最长重复子数组&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 33 最长公共子序列&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 34 不相交的线&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 35 最大子序和&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 36 判断子序列&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 37 不同的子序列&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 38 两个字符串的删除操作&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 39 编辑距离&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 40 回文子串&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 42 最长回文子序列&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;单调栈&#34;&gt;&#xA;  单调栈&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8d%95%e8%b0%83%e6%a0%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h2 id=&#34;2024-11-14&#34;&gt;&#xA;  2024-11-14&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2024-11-14&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://challahscript.com/what_i_wish_someone_told_me_about_postgres&#34;&gt;What I Wish Someone Told Me About Postgres&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;介绍了 postgresql 相关的一些知识点，可以看一看&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.wired.com/story/the-wired-guide-to-protecting-yourself-from-government-surveillance/&#34;&gt;The WIRED Guide to Protecting Yourself From Government Surveillance&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://arstechnica.com/ai/2024/11/how-a-stubborn-computer-scientist-accidentally-launched-the-deep-learning-boom/&#34;&gt;How a stubborn computer scientist accidentally launched the deep learning boom&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可以了解到 辛顿、黄仁勋、李飞飞 的工作是如何推动神经网络的发展的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>学习记录</title>
      <link>/zh/zh/post/computer-science/computer-science-learning-log/</link>
      <pubDate>Thu, 14 Nov 2024 08:59:49 +0800</pubDate>
      <guid>/zh/zh/post/computer-science/computer-science-learning-log/</guid>
      <description>&lt;h1 id=&#34;学习记录&#34;&gt;&#xA;  学习记录&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ad%a6%e4%b9%a0%e8%ae%b0%e5%bd%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;2025-01-17&#34;&gt;&#xA;  2025-01-17&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-17&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;剑指offer-book&#34;&gt;&#xA;  剑指Offer Book&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%89%91%e6%8c%87offer-book&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/25910559/&#34;&gt;剑指Offer&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第1章-面试的流程-1&#34;&gt;&#xA;  第1章 面试的流程 1&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-%e9%9d%a2%e8%af%95%e7%9a%84%e6%b5%81%e7%a8%8b-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.1 面试官谈面试 1&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.2 面试的三种形式 2&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.2.1 电话面试 2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.2.2 共享桌面远程面试 3&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.2.3 现场面试 4&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.3 面试的三个环节 5&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.3.1 行为面试环节 5&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 应聘者的项目经验 6&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 应聘者掌握的技能 7&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 回答“为什么跳槽” 8&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.3.2 技术面试环节 10&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 扎实的基础知识 10&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 高质量的代码 11&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 清晰的思路 14&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 优化效率的能力 15&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 优秀的综合能力 16&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.3.3 应聘者提问环节 17&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.4 本章小结 18&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第2章-面试需要的基础知识-20&#34;&gt;&#xA;  第2章 面试需要的基础知识 20&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-%e9%9d%a2%e8%af%95%e9%9c%80%e8%a6%81%e7%9a%84%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86-20&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2.1 面试官谈基础知识 20&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.2 编程语言 22&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.2.1 C++ 22&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题1：赋值运算符函数 24&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 经典的解法，适用于初级程序员 25&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 考虑异常安全性的解法，高级程序员必备 26&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.2.2 C# 27&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题2：实现Singleton模式 31&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 不好的解法一：只适用于单线程 31&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 不好的解法二：可用于多线程但效率不高 32&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 可行的解法：同步锁前后两次判断 33&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 推荐的解法一：利用静态构造函数 34&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 推荐的解法二：按需创建实例 34&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 解法比较 35&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.3 数据结构 36&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.3.1 数组 36&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题3：二维数组中的查找 38&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.3.2 字符串 42&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题4：替换空格 44&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; O(n2)的解法，不足以拿到Offer 45&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; O(n)的解法，搞定Offer就靠它 46&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.3.3 链表 49&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题5：从尾到头打印链表 51&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.3.4 树 53&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题6：重建二叉树 55&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.3.5 栈和队列 58&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题7：用两个栈实现队列 59&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.4 算法和数据操作 62&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.4.1 查找和排序 63&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题8：旋转数组的最小数字 66&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.4.2 递归和循环 71&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题9：斐波那契数列 73&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 效率很低的解法，面试官不会喜欢 73&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试官期待的实用解法 74&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; O(logn)但不够实用的解法 74&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 解法比较 75&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.4.3 位运算 77&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题10：二进制中1的个数 78&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 可能引起死循环的解法 79&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 常规解法 79&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 能给面试官带来惊喜的解法 80&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.5 本章小结 82&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第3章-高质量的代码-84&#34;&gt;&#xA;  第3章 高质量的代码 84&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0-%e9%ab%98%e8%b4%a8%e9%87%8f%e7%9a%84%e4%bb%a3%e7%a0%81-84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.1 面试官谈代码质量 84&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.2 代码的规范性 86&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.3 代码的完整性 87&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 从3方面确保代码的完整性 87&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3种错误处理的方法 88&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题11：数值的整数次方 90&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 自以为题目简单的解法 90&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 全面但不够高效的解法，离Offer已经很近了 90&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 全面又高效的解法，确保能拿到Offer 92&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题12：打印1到最大的n位数 94&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 跳进面试官陷阱 94&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 在字符串上模拟数字加法 94&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 把问题转换成数字排列 97&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题13：在O(1)时间删除链表结点 99&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题14：调整数组顺序使奇数位于偶数前面 102&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 只完成基本功能的解法，仅适用于初级程序员 102&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 考虑可扩展性的解法，能秒杀Offer 104&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.4 代码的鲁棒性 106&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题15：链表中倒数第k个结点 107&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题16：反转链表 112&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题17：合并两个排序的链表 114&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题18：树的子结构 117&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.5 本章小结 121&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第4章-解决面试题的思路-123&#34;&gt;&#xA;  第4章 解决面试题的思路 123&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0-%e8%a7%a3%e5%86%b3%e9%9d%a2%e8%af%95%e9%a2%98%e7%9a%84%e6%80%9d%e8%b7%af-123&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4.1 面试官谈面试思路 123&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题19：二叉树的镜像 125&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4.2 画图让抽象问题形象化 125&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题20：顺时针打印矩阵 127&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4.3 举例让抽象问题具体化 131&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题21：包含min函数的栈 132&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题22：栈的压入、弹出序列 134&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题23：从上往下打印二叉树 137&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题24：二叉搜索树的后序遍历序列 140&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题25：二叉树中和为某一值的路径 143&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4.4 分解让复杂问题简单化 146&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题26：复杂链表的复制 147&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题27：二叉搜索树与双向链表 151&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题28：字符串的排列 154&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4.5 本章小结 158&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第5章-优化时间和空间效率-160&#34;&gt;&#xA;  第5章 优化时间和空间效率 160&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac5%e7%ab%a0-%e4%bc%98%e5%8c%96%e6%97%b6%e9%97%b4%e5%92%8c%e7%a9%ba%e9%97%b4%e6%95%88%e7%8e%87-160&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.1 面试官谈效率 160&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.2 时间效率 162&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题29：数组中出现次数超过一半的数字 163&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 基于Partition函数的O(n)算法 163&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 利用数组特点的O(n)算法 165&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 解法比较 166&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题30：最小的k个数 167&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; O(n)的算法，只当可以修改输入数组时可用 167&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; O(nlogk)的算法，适合处理海量数据 168&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 解法比较 169&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题31：连续子数组的最大和 171&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 举例分析数组的规律 171&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 应用动态规划法 173&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题32：从1到n整数中1出现的次数 174&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 不考虑效率的解法，想拿Offer有点难 174&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 明显提高效率的解法，让面试官耳目一新 175&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题33：把数组排成最小的数 177&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.3 时间效率与空间效率的平衡 181&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题34：丑数 182&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 逐个判断整数是不是丑数的解法 182&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 创建数组保存已经找到的丑数的解法 183&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题35：第一个只出现一次的字符 186&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题36：数组中的逆序对 189&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题37：两个链表的第一个公共结点 193&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.4 本章小结 196&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第6章-面试中的各项能力-198&#34;&gt;&#xA;  第6章 面试中的各项能力 198&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0-%e9%9d%a2%e8%af%95%e4%b8%ad%e7%9a%84%e5%90%84%e9%a1%b9%e8%83%bd%e5%8a%9b-198&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.1 面试官谈能力 198&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.2 沟通能力和学习能力 200&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 沟通能力 200&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 学习能力 200&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 善于学习、沟通的人也善于提问 201&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.3 知识迁移能力 203&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题38：数字在排序数组中出现的次数 204&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题39：二叉树的深度 207&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 重复遍历结点的解法，不足以打动面试官 209&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 只遍历结点一次的解法，正是面试官喜欢的 209&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题40：数组中只出现一次的数字 211&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题41：和为s的两个数字VS和为s的连续正数序列 214&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题42：翻转单词顺序 VS左旋转字符串 218&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.4 抽象建模能力 222&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题43：n个骰子的点数 223&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 基于递归求骰子点数，时间效率不够高 223&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 基于循环求骰子点数，时间性能好 224&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题44：扑克牌的顺子 226&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题45：圆圈中最后剩下的数字 228&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 经典的解法，用循环链表模拟圆圈 229&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 创新的解法，拿到Offer不在话下 230&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.5 发散思维能力 232&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题46：求1+2+…+n 233&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 利用构造函数求解 234&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 利用虚函数求解 234&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 利用函数指针求解 235&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 利用模板类型求解 236&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题47：不用加减乘除做加法 237&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题48：不能被继承的类 239&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 常规的解法：把构造函数设为私有函数 239&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 新奇的解法：利用虚拟继承 240&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.6 本章小结 241&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第7章-两个面试案例-243&#34;&gt;&#xA;  第7章 两个面试案例 243&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac7%e7%ab%a0-%e4%b8%a4%e4%b8%aa%e9%9d%a2%e8%af%95%e6%a1%88%e4%be%8b-243&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7.1 案例一：（面试题49）把字符串转换成整数 244&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7.2 案例二：（面试题50）树中两个结点的最低公共祖先 252&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第8章-英文版新增面试题-261&#34;&gt;&#xA;  第8章 英文版新增面试题 261&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac8%e7%ab%a0-%e8%8b%b1%e6%96%87%e7%89%88%e6%96%b0%e5%a2%9e%e9%9d%a2%e8%af%95%e9%a2%98-261&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.1 数组 261&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题51：数组中重复的数字 261&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题52：构建乘积数组 263&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.2 字符串 265&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题53：正则表达式匹配 265&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题54：表示数值的字符串 267&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题55：字符流中第一个不重复的字符 269&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.3 链表 270&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题56：链表中环的入口结点 270&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题57：删除链表中重复的结点 273&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.4 树 275&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题58：二叉树的下一个结点 275&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题59：对称的二叉树 277&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题60：把二叉树打印成多行 278&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题61：按之字形顺序打印二叉树 280&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题62：序列化二叉树 283&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题63：二叉搜索树的第k个结点 285&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题64：数据流中的中位数 286&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.5 栈和队列 290&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题65：滑动窗口的最大值 290&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.6 回溯法 294&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题66：矩阵中的路径 294&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试题67：机器人的运动范围 296&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2025-01-11&#34;&gt;&#xA;  2025-01-11&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-11&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;leetcode-刷题&#34;&gt;&#xA;  leetcode 刷题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#leetcode-%e5%88%b7%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试经典150题&#34;&gt;&#xA;  面试经典150题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e7%bb%8f%e5%85%b8150%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.cn/studyplan/top-interview-150/&#34;&gt;面试经典150题&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;数组字符串&#34;&gt;&#xA;  数组/字符串&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e7%bb%84%e5%ad%97%e7%ac%a6%e4%b8%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/merge-sorted-array/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;合并两个有序数组&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution88.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/remove-element/submissions/592471220/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;移除元素&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 删除有序数组中的重复项&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11 没有做出来，看的官方题解&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution26.java&#34;&gt;2025-01-11&lt;/a&gt; 做完&lt;code&gt;删除有序数组中的重复项 II&lt;/code&gt;之后再尝试重新解题完成&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 删除有序数组中的重复项 II&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution80.java&#34;&gt;2025-01-11&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/majority-element/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;多数元素&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution169.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/rotate-array/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;轮转数组&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution189.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;进阶&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 尽可能想出更多的解决方案，至少有 三种 不同的方法可以解决这个问题。&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 你可以使用空间复杂度为 O(1) 的 原地 算法解决这个问题吗？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/best-time-to-buy-and-sell-stock/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;买卖股票的最佳时机&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11 看官方题解做出来的&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 review&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;买卖股票的最佳时机 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 官方题解 理解&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 方法一：动态规划&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 方法二：贪心&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/jump-game/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;跳跃游戏&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 官方题解理解 贪心&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution55.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/jump-game-ii/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;跳跃游戏 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution45.java&#34;&gt;2025-01-18 算法超时了&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 理解官方题解&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-18 方法一：反向查找出发位置&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Solution45.jump2&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-18 方法二：正向查找可达到的最大位置&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Solution45.jump3&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/h-index/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;H 指数&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution274.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Tips&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; An easy approach is to sort the array first.&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What are the possible values of h-index?&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; A faster approach is to use extra space.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; O(1) 时间插入、删除和获取随机元素&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 除自身以外数组的乘积&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 加油站&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 分发糖果&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 接雨水&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/roman-to-integer/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;罗马数字转整数&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution13.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 整数转罗马数字&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/length-of-last-word/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;最后一个单词的长度&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution58.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/longest-common-prefix/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;最长公共前缀&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution14.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/reverse-words-in-a-string/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;反转字符串中的单词&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution151.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;进阶&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如果字符串在你使用的编程语言中是一种可变数据类型，请尝试使用 O(1) 额外空间复杂度的 原地 解法。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Z 字形变换&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/find-the-index-of-the-first-occurrence-in-a-string/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;找出字符串中第一个匹配项的下标&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution28.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 文本左右对齐&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;双指针&#34;&gt;&#xA;  双指针&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%8c%e6%8c%87%e9%92%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/valid-palindrome/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;验证回文串&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution125.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/is-subsequence/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;判断子序列&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution392.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/two-sum-ii-input-array-is-sorted/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;两数之和 II - 输入有序数组&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution167.java&#34;&gt;2025-01-13&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 运行有时候会超过时间限制&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/container-with-most-water/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;盛最多水的容器&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 三数之和&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;滑动窗口&#34;&gt;&#xA;  滑动窗口&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%bb%91%e5%8a%a8%e7%aa%97%e5%8f%a3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/minimum-size-subarray-sum/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;长度最小的子数组&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution209.java&#34;&gt;2025-01-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/longest-substring-without-repeating-characters/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;无重复字符的最长子串&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution3.java&#34;&gt;2025-01-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/substring-with-concatenation-of-all-words/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;串联所有单词的子串&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution30.java&#34;&gt;2025-01-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/minimum-window-substring/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;最小覆盖子串&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;矩阵&#34;&gt;&#xA;  矩阵&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%9f%a9%e9%98%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/valid-sudoku/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;有效的数独&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution36.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/spiral-matrix/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;螺旋矩阵&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution54.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/rotate-image/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;旋转图像&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 理解官方题解&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-18 方法一：使用辅助数组&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-18 方法二：原地旋转&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 有数学公式的推导，需要自己推导一次&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-18 方法三：用翻转代替旋转&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 有数学公式的推导，需要自己推导一次&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/set-matrix-zeroes/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;矩阵置零&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution73.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/game-of-life/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;生命游戏&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution289.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;进阶&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 你可以使用原地算法解决本题吗？请注意，面板上所有格子需要同时被更新：你不能先更新某些格子，然后使用它们的更新后的值再更新其他格子。&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 本题中，我们使用二维数组来表示面板。原则上，面板是无限的，但当活细胞侵占了面板边界时会造成问题。你将如何解决这些问题？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;-哈希表&#34;&gt;&#xA;  ✅ 哈希表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e5%93%88%e5%b8%8c%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/ransom-note/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;赎金信&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution383.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/isomorphic-strings/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;同构字符串&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution205.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/word-pattern/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;单词规律&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution290.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/valid-anagram/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;有效的字母异位词&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution242.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/group-anagrams/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;字母异位词分组&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution49.java&#34;&gt;2025-01-16&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;第一遍算法超时，看了官方题解思路后实现通过&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/two-sum/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;两数之和&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution1.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/happy-number/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;快乐数&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution202.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/contains-duplicate-ii/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;存在重复元素 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution219.java&#34;&gt;2025-01-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/longest-consecutive-sequence/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;最长连续序列&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution128.java&#34;&gt;2025-01-16&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;看了官方题解后完成&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;区间&#34;&gt;&#xA;  区间&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8c%ba%e9%97%b4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;栈&#34;&gt;&#xA;  栈&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/valid-parentheses/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;有效的括号&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution20.java&#34;&gt;2025-01-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/simplify-path/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;简化路径&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution71.java&#34;&gt;2025-01-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/min-stack/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;最小栈&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution155.java&#34;&gt;2025-01-22&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;理解官方题解 文字描述后完成&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-22 理解官方题解&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/evaluate-reverse-polish-notation/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;逆波兰表达式求值&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution150.java&#34;&gt;2025-01-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 基本计算器&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;链表&#34;&gt;&#xA;  链表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%93%be%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/linked-list-cycle/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;环形链表&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution141.java&#34;&gt;2025-01-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;理解官方题解&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-20 方法一：哈希表&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 方法二：快慢指针&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/add-two-numbers/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;两数相加&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution2.java&#34;&gt;2025-01-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/merge-two-sorted-lists/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;合并两个有序链表&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution21.java&#34;&gt;2025-01-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/copy-list-with-random-pointer/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;随机链表的复制&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution138.java&#34;&gt;2025-01-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/reverse-linked-list-ii/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;反转链表 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution92.java&#34;&gt;2025-01-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/reverse-nodes-in-k-group/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;K 个一组翻转链表&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/remove-nth-node-from-end-of-list/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;删除链表的倒数第 N 个结点&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution19.java&#34;&gt;2025-01-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;进阶&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-20 你能尝试使用一趟扫描实现吗？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/remove-duplicates-from-sorted-list-ii/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;删除排序链表中的重复元素 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution82.java&#34;&gt;2025-01-21&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/rotate-list/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;旋转链表&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution61.java&#34;&gt;2025-01-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/partition-list/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;分隔链表&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution86.java&#34;&gt;2025-01-21&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/lru-cache/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;LRU 缓存&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution146.java&#34;&gt;2025-01-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 理解官方题解&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;二叉树&#34;&gt;&#xA;  二叉树&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%8f%89%e6%a0%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/maximum-depth-of-binary-tree/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;二叉树的最大深度&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution104.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/same-tree/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;相同的树&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution100.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/invert-binary-tree/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;翻转二叉树&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution226.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 对称二叉树&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 没做出来，看的官方题解&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 从前序与中序遍历序列构造二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 从中序与后序遍历序列构造二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 填充每个节点的下一个右侧节点指针 II&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 二叉树展开为链表&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 路径总和&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 求根节点到叶节点数字之和&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 二叉树中的最大路径和&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 二叉搜索树迭代器&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 完全二叉树的节点个数&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 二叉树的最近公共祖先&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;二叉树层次遍历&#34;&gt;&#xA;  二叉树层次遍历&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%8f%89%e6%a0%91%e5%b1%82%e6%ac%a1%e9%81%8d%e5%8e%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;二叉搜索树&#34;&gt;&#xA;  二叉搜索树&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%8f%89%e6%90%9c%e7%b4%a2%e6%a0%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;图&#34;&gt;&#xA;  图&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%be&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;图的广度优先搜索&#34;&gt;&#xA;  图的广度优先搜索&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%be%e7%9a%84%e5%b9%bf%e5%ba%a6%e4%bc%98%e5%85%88%e6%90%9c%e7%b4%a2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;字典树&#34;&gt;&#xA;  字典树&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ad%97%e5%85%b8%e6%a0%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;-回溯&#34;&gt;&#xA;  ✅ 回溯&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e5%9b%9e%e6%ba%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/letter-combinations-of-a-phone-number/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;电话号码的字母组合&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution17.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/combinations/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;组合&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution77.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/permutations/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;全排列&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution46.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/combination-sum/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;组合总和&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution39.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/n-queens-ii/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;N 皇后 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution52.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/generate-parentheses/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;括号生成&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution22.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/word-search/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;单词搜索&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution79.java&#34;&gt;2025-01-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;分治&#34;&gt;&#xA;  分治&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%86%e6%b2%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;kadane算法&#34;&gt;&#xA;  kadane算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#kadane%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;二分查找&#34;&gt;&#xA;  二分查找&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%88%86%e6%9f%a5%e6%89%be&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;堆&#34;&gt;&#xA;  堆&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a0%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;位运算&#34;&gt;&#xA;  位运算&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bd%8d%e8%bf%90%e7%ae%97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/add-binary/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;二进制求和&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution67.java&#34;&gt;2025-01-16&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/reverse-bits/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;颠倒二进制位&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-16 没做出来, 参考这篇文章&lt;a href=&#34;https://blog.csdn.net/QuantumYou/article/details/119998894&#34;&gt;LeetCode 190. 颠倒二进制位 （位运算 分治）&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 复习了一遍&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution190.java&#34;&gt;2025-01-17 新增了中间值打印的代码在算法中&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/number-of-1-bits/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;位1的个数&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution191.java&#34;&gt;2025-01-17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/single-number/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;只出现一次的数字&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution136.java&#34;&gt;2025-01-17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/single-number-ii/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;只出现一次的数字 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 理解了官方题解 方法2&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/bitwise-and-of-numbers-range/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;数字范围按位与&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 理解了官方题解 方法2&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;数学&#34;&gt;&#xA;  数学&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e5%ad%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/palindrome-number/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;回文数&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution9.java&#34;&gt;2025-01-17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 不将整数转为字符串来解决这个问题&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/plus-one/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;加一&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution66.java&#34;&gt;2025-01-17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/factorial-trailing-zeroes/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;阶乘后的零&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution172.java&#34;&gt;2025-01-17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/sqrtx/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;x 的平方根&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution69.java&#34;&gt;2025-01-17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/powx-n/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;Pow(x, n)&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution50.java&#34;&gt;2025-01-17&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;超时了&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 看懂了官方题解&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 直线上最多的点数&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 看了官方题解，但还是不太理解&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;一维动态规划&#34;&gt;&#xA;  一维动态规划&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e7%bb%b4%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/climbing-stairs/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;爬楼梯&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11 通过&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;多维动态规划&#34;&gt;&#xA;  多维动态规划&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a4%9a%e7%bb%b4%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h2 id=&#34;2025-01-09&#34;&gt;&#xA;  2025-01-09&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-09&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;-spring实战-第6版-book&#34;&gt;&#xA;  ✅ Spring实战 第6版 Book&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-spring%e5%ae%9e%e6%88%98-%e7%ac%ac6%e7%89%88-book&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第1章 Spring 起步&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.1 什么是Spring &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.2 初始化 spring 应用 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.3 编写 Spring 应用 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.4 俯瞰 Spring 风景线 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第2章&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.1 展现信息 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.2 处理表单提交 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.3 校验表单输入 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.4 使用视图控制器 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2.5 选择视图模板库 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第3章 使用数据&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.1 &lt;code&gt;2025-01-09&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.2 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3.3 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第4章 使用非关系型数据&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4.1 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4.2 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第5章 保护Spring&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.1 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.2 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.3 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.4 &lt;code&gt;2025-01-11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5.5 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第6章 使用配置属性&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.1 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.2 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6.3 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第7章 创建REST服务&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7.1 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7.2 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7.3 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第8章 保护REST&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.1 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.2 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.3 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8.4 &lt;code&gt;2025-01-12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第9章 发送异步消息&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9.1 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9.2 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9.3 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第10章 Spring集成&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10.1 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10.2 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10.3 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第11章 理解反应式编程&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11.1 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11.2 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11.3 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第12章 开发反应式API&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12.1 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12.2 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12.3 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12.4 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12.5 &lt;code&gt;2025-01-13&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第13章 反应式持久化数据&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13.1 &lt;code&gt;2025-01-14&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13.2 &lt;code&gt;2025-01-14&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13.3 &lt;code&gt;2025-01-14&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第14章 使用RSocket&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14.1 &lt;code&gt;2025-01-14&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14.2 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14.3 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第15章 部署Spring&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15.1 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15.2 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15.3 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15.4 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第16章 管理Spring&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16.1 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16.2 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16.3 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第17章 使用JMX监控Spring&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17.1 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17.2 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17.3 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第18章 部署Spring&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18.1 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18.2 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18.3 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18.4 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18.5 &lt;code&gt;2025-01-15&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;javaguide-文档阅读&#34;&gt;&#xA;  JavaGuide 文档阅读&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#javaguide-%e6%96%87%e6%a1%a3%e9%98%85%e8%af%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://javaguide.cn/home.html&#34;&gt;JavaGuide&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 必看&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试准备&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Java&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 计算机基础&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 数据库&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 开发工具&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 常用框架&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Spring&amp;amp;Spring Boot&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; MyBatis常见面试题总结&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-09 太过总结性，需要看一些更基础的文章&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Netty常见面试题总结&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 系统设计&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 分布式&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 高性能&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 高可用&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2025-01-08&#34;&gt;&#xA;  2025-01-08&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-08&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;计算机教育中缺失的学期&#34;&gt;&#xA;  计算机教育中缺失的学期&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%a1%e7%ae%97%e6%9c%ba%e6%95%99%e8%82%b2%e4%b8%ad%e7%bc%ba%e5%a4%b1%e7%9a%84%e5%ad%a6%e6%9c%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://space.bilibili.com/695281681/lists?sid=4245283&amp;amp;spm_id_from=333.788.0.0&#34;&gt;计算机教育中缺失的学期&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;阮一峰博客阅读&#34;&gt;&#xA;  阮一峰博客阅读&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%98%ae%e4%b8%80%e5%b3%b0%e5%8d%9a%e5%ae%a2%e9%98%85%e8%af%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/&#34;&gt;阮一峰的网络日志&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;散文&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;观点与感想&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;算法与数学&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;开发者手册&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;理解计算机&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;JavaScript&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;计算机行业历史&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;周刊&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;创业&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;译文集&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2025-01-05&#34;&gt;&#xA;  2025-01-05&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-05&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;spring-基础知识点-视频&#34;&gt;&#xA;  spring 基础知识点 视频&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#spring-%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86%e7%82%b9-%e8%a7%86%e9%a2%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1vLaceeEMY?spm_id_from=333.788.videopod.episodes&amp;amp;vd_source=867426e6965781e5a2c5ef2fc1a0f8f8&#34;&gt;B站大学终于把Spring做成动画片了，一周刷爆，2024最新版，学完即可面试，拿走不谢，学不会我退出IT圈！&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Spring 是如何整合MyBatis管理Mapper接口的 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11 (January 6, 2025 at 18:43:04 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12 (January 6, 2025 at 18:50:57 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13 (January 6, 2025 at 18:57:05 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14 (January 6, 2025 at 18:59:15 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15 2025-01-07&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16 2025-01-07&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 19&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 20&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 22&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 23&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 24&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 25&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 26&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 27&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 28&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 29&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 30&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 31&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 32&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 33&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 34&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 35&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 36&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 37&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 38&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 39&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 40&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 41&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 42&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 43&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 44&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 45&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 46&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 47&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 48&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 49&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 50&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 51&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 52&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 53&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 54&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 55&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 56&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 57&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 58&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 19&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 20&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 22&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 23&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 24&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 25&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 26&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 27&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 28&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 29&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 30&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 31&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 32&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 33&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 34&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 35&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 36&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 37&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 38&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 39&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 40&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 41&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 42&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 43&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 44&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 45&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 46&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 47&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 48&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 49&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 50&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 51&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 52&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 53&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 54&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 55&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 56&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 57&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 58&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 59&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 60&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 61&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 62&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 63&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 64&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 65&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 66&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 67&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 68&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 69&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 70&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 71&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 72&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 73&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 74&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 75&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 76&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 77&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 78&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 79&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 80&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 100&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2025-01-03&#34;&gt;&#xA;  2025-01-03&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-03&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;代码随想录-视频&#34;&gt;&#xA;  代码随想录 视频&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bb%a3%e7%a0%81%e9%9a%8f%e6%83%b3%e5%bd%95-%e8%a7%86%e9%a2%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1fA4y1o715&#34;&gt;代码随想录&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;数组&#34;&gt;&#xA;  数组&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e7%bb%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;链表-1&#34;&gt;&#xA;  链表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%93%be%e8%a1%a8-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;哈希表&#34;&gt;&#xA;  哈希表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%93%88%e5%b8%8c%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;字符串&#34;&gt;&#xA;  字符串&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ad%97%e7%ac%a6%e4%b8%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;栈与队列&#34;&gt;&#xA;  栈与队列&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%88%e4%b8%8e%e9%98%9f%e5%88%97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;二叉树-1&#34;&gt;&#xA;  二叉树&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%8f%89%e6%a0%91-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 &lt;a href=&#34;https://www.bilibili.com/video/BV1Hy4y1t7ij?vd_source=867426e6965781e5a2c5ef2fc1a0f8f8&amp;amp;spm_id_from=333.788.videopod.sections&#34;&gt;理论基础&lt;/a&gt; 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 递归遍历 (Leetcode 144, 145, 94) 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 非递归遍历 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 非递归遍历-中序 2025-01-11&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 层序遍历（广度优先搜索）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 翻转二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 对称二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 二叉树的最大深度&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 二叉树的最小深度&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 完全二叉树节点的数量&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11 平衡二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12 二叉树的所有路径&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13 左叶子之和&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14 找左下角的值&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15 路径总和&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16 从中序和后序遍历序列构造二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17 最大二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18 合并二叉树&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 19 &lt;a href=&#34;https://www.bilibili.com/video/BV1wG411g7sF?vd_source=867426e6965781e5a2c5ef2fc1a0f8f8&amp;amp;spm_id_from=333.788.videopod.sections&#34;&gt;二叉搜索树中的搜索&lt;/a&gt; (Leetcode 700) 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 20 验证二叉搜索树 (Leetcode 98) 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 21 二叉搜索树的最小绝对差 (Leetcode 530) 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 22 二叉搜索树中的众数(Leetcode 501) 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 23 二叉树的最近公共祖先(Leetcode 236) 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 24 二叉搜索树的最近公共祖先 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 25 二叉搜索树中的插入操作(Leetcode 701) 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 26 &lt;a href=&#34;https://www.bilibili.com/video/BV1tP41177us?vd_source=867426e6965781e5a2c5ef2fc1a0f8f8&amp;amp;spm_id_from=333.788.player.switch&#34;&gt;删除二叉搜索树中的节点(Leetcode 450)&lt;/a&gt; 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 27 修剪二叉搜索树 (Leetcode 669) 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 28 将有序数组转换为二叉搜索树 (Leetcode 108) 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 29 把二叉搜索树转换为累加树(Leetcode 538) 2025-01-09&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-回溯法&#34;&gt;&#xA;  ✅ 回溯法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e5%9b%9e%e6%ba%af%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 理论篇 2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 组合问题（对应力扣题目：77.组合） 2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 组合问题的剪枝操作（对应力扣题目：77.组合）2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 回溯算法如何剪枝？| LeetCode：216.组合总和III 2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 LeetCode：17.电话号码的字母组合 2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 组合总和（对应「leetcode」力扣题目：39.组合总和） 2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 LeetCode:40.组合总和II 2025-01-03&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 分割回文串 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 复原IP地址 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 子集 （Leetcode 78） 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11 子集2（Leetcode 90） 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12 递增子序列（Leetcode 491） 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13 全排列（Leetcode 46） 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14 全排列2（Leetcode 47）2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15 N皇后（Leetcode 51） 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16 解数独（Leetcode 37） 2025-01-05&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-贪心算法&#34;&gt;&#xA;  ✅ 贪心算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e8%b4%aa%e5%bf%83%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 理论基础 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 分发饼干 leetcode 455 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 摆动序列 Leetcode 376 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 最大子序和 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 买卖股票最佳时机2 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 跳跃游戏（Leetcode 55） 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 跳跃游戏2 （Leetcode 45） 2025-01-06&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这道题没听懂&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 K次取反后最大化的数组和 （Leetcode 1005） 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 加油站（Leetcode 134） 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 分发糖果（Leetcode 135） 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 柠檬水找零（Leetcode 860） 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11 根据身高重建队列（Leetcode 406） 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12 用最少数量的箭引爆气球(Leetcode 452) 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13 无重叠区间(Leetcode 435) 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14 划分字母区间 (Leetcode 763) 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15 合并区间 （Leetcode 56） (January 7, 2025 at 15:18:40 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16 单调自增的数字（Leetcode 738）(January 7, 2025 at 15:41:59 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17 监督二叉树（Leetcode 968） (January 7, 2025 at 16:11:51 GMT+8)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;动态规划&#34;&gt;&#xA;  动态规划&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 理论基础   (January 7, 2025 at 16:34:49 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 斐波那契数列 （Leetcode 509） (January 7, 2025 at 16:46:54 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 爬楼梯（Leetcode 70） (January 7, 2025 at 16:57:46 GMT+8)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 &lt;a href=&#34;https://www.bilibili.com/video/BV16G411c7yZ&#34;&gt;使用最小花费爬楼梯&lt;/a&gt; (Leetcode 746)  2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 不同路径 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 不同路径2 (Leetcode 63) 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 整数拆分 (Leetcode 343)  2025-01-08&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这道题没太听懂&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 不同的二叉搜索树（Leetcode 96）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 0-1背包问题理论基础&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 0-1背包问题之滚动数组&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11 分割等和子集&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12 最后一块石头的重量2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13 目标和&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14 一和零&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15 完全背包理论基础&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16 零钱兑换2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17 组合综合4&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18 零钱兑换&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 19 完全平方数&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 20 单词拆分&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 21 打家劫舍&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 22 打家劫舍2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 23 打家劫舍3&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 24 买卖股票的最佳时机1&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 25 买卖股票的最佳时机2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 26 买卖股票的最佳时机3&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 27 买卖股票的最佳时机4&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 28 买卖股票的最佳时机含冷冻期&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 29 买卖股票的最佳时机含手续费&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 30 最长递增子序列&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 31 最长连续递增序列&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 32 最长重复子数组&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 33 最长公共子序列&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 34 不相交的线&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 35 最大子序和&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 36 判断子序列&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 37 不同的子序列&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 38 两个字符串的删除操作&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 39 编辑距离&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 40 回文子串&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 42 最长回文子序列&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;单调栈&#34;&gt;&#xA;  单调栈&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8d%95%e8%b0%83%e6%a0%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h2 id=&#34;2024-11-14&#34;&gt;&#xA;  2024-11-14&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2024-11-14&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://challahscript.com/what_i_wish_someone_told_me_about_postgres&#34;&gt;What I Wish Someone Told Me About Postgres&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;介绍了 postgresql 相关的一些知识点，可以看一看&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.wired.com/story/the-wired-guide-to-protecting-yourself-from-government-surveillance/&#34;&gt;The WIRED Guide to Protecting Yourself From Government Surveillance&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://arstechnica.com/ai/2024/11/how-a-stubborn-computer-scientist-accidentally-launched-the-deep-learning-boom/&#34;&gt;How a stubborn computer scientist accidentally launched the deep learning boom&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可以了解到 辛顿、黄仁勋、李飞飞 的工作是如何推动神经网络的发展的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/zh/post/others/english-learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/others/english-learning/</guid>
      <description>&lt;h1 id=&#34;english-learning&#34;&gt;&#xA;  English Learning&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#english-learning&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://lite.cnn.com&#34;&gt;lite cnn&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;纯文字版的cnn，没有图片&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://lite.cnn.com/world/china&#34;&gt;lite cnn &lt;strong&gt;China&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.chinadaily.com.cn&#34;&gt;China Daily&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;中国官方最大的英语新闻网站？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.21voa.com/special_english/&#34;&gt;voa special English&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这个网站听 voa special 不用翻墙&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://restofworld.org&#34;&gt;rest of world&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这个网站很有设计感&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://restofworld.org/region/china/&#34;&gt;China&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.theverge.com&#34;&gt;verge&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://news.ycombinator.com/&#34;&gt;Hacker News&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;技术文章也能学习英语&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.scmp.com&#34;&gt;南华早报&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bbc.com/news&#34;&gt;bbc&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bbc.com/news/world/asia/china&#34;&gt;China&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.quora.com&#34;&gt;quora&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;国外的知乎&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;log&#34;&gt;&#xA;  log&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#log&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025-01-07&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://mp.weixin.qq.com/s/nu1-Pg_kDNW4kpFwz3MCWw&#34;&gt;2024-12-14 “羽绒服”英语怎么说？你绝对想不到！&lt;/a&gt; 2025-01-07&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://mp.weixin.qq.com/s/IRaYk7ir1s-KU0s3L59WaQ&#34;&gt;2025-01-06 “年会”英文怎么说？“Year Meeting”还是“Annual Party？” 都错啦！&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;voa-special-english&#34;&gt;&#xA;  voa special English&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#voa-special-english&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.21voa.com/special_english/&#34;&gt;voa special English&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;others&#34;&gt;&#xA;  others&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#others&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/92623&#34;&gt;如何利用 AI 更好地学外语&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://greycoder.com/a-list-of-text-only-new-sites/&#34;&gt;A List Of Text-Only &amp;amp; Minimalist News Sites&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2022&#34;&gt;&#xA;  2022&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2022&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Monkeypox outbreak&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;猴痘病毒爆发&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Russia-Ukraine War&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;November&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cbsnews.com/live-updates/2022-elections-midterms-results-house-senate-polls-2022-11-09/&#34;&gt;&lt;strong&gt;A projected &amp;ldquo;red wave&amp;rdquo; fizzled, as Republicans won a slim majority in the House, and Democrats held control of the United States Senate&lt;/strong&gt;&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;随着共和党在众议院赢得微弱多数，民主党控制了美国参议院，预计中的“红色浪潮”落空了&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2022-11-09&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://dougallj.wordpress.com/2022/11/09/why-is-rosetta-2-fast/&#34;&gt;Why is Apple Rosetta 2 fast?&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;为什么 Apple Rosetta 2 速度很快？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;October&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cbsnews.com/news/elon-musk-twitter-sale-official-44-billion/&#34;&gt;&lt;strong&gt;Elon Musk took control of Twitter, bringing to the social media giant a brash leadership style – along with thousands of layoffs&lt;/strong&gt;&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;埃隆·马斯克 （Elon Musk） 控制了 Twitter，为这家社交媒体巨头带来了傲慢的领导风格——以及数千人的裁员&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;September&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cbsnews.com/news/queen-elizabeth-ii-dies-age-96-britains-longest-reigning-monarch/&#34;&gt;&lt;strong&gt;Britain&amp;rsquo;s Queen Elizabeth II died in Scotland, at the age of 96. Her son Charles succeeded her as king&lt;/strong&gt;&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;英国女王伊丽莎白二世在苏格兰去世，享年 96 岁。她的儿子查理继承了她的国王之位&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;August&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cbsnews.com/news/trump-mar-a-lago-search-fbi-documents-boxes/&#34;&gt;&lt;strong&gt;The FBI conducted a search of Mar-a-Lago, the home of former president Donald Trump, and found classified materials, including documents labeled &amp;ldquo;top secret.&amp;rdquo;&lt;/strong&gt;&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;联邦调查局对前总统唐纳德·特朗普的家马阿拉歌庄园进行了搜查，发现了机密材料，包括标记为“绝密”的文件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;July&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cbsnews.com/news/shinzo-abe-death-shooting-former-japanese-prime-minister/&#34;&gt;&lt;strong&gt;Former Japanese prime minister Shinzo Abe was assassinated, just two days before that country&amp;rsquo;s parliamentary elections&lt;/strong&gt;&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;日本前首相安倍晋三在该国议会选举前两天被暗杀&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;June&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cbsnews.com/live-updates/supreme-court-roe-v-wade-abortion-rights/&#34;&gt;&lt;strong&gt;The Supreme Court overturned Roe v. Wade, effectively criminalizing abortion in much of the nation&lt;/strong&gt;&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;最高法院推翻了罗伊诉韦德案（Roe v. Wade），实际上在全国大部分地区将堕胎定为刑事犯罪。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;May&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cbsnews.com/live-updates/texas-school-shooting-robb-elementary-uvalde/&#34;&gt;&lt;strong&gt;A gunman in Uvalde, Texas killed 19 students and two teachers at Robb Elementary School. It was the third-deadliest school shooting in U.S. history&lt;/strong&gt;&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;德克萨斯州尤瓦尔迪的一名枪手在罗布小学杀死了 19 名学生和两名教师。这是美国历史上第三致命的校园枪击事件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2021&#34;&gt;&#xA;  2021&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2021&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;December&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In December, tornadoes ripped through the South and Midwest, killing at least 91 people &amp;hellip;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;12 月，龙卷风席卷南部和中西部，造成至少 91 人死亡&amp;hellip;&amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;October&#xA;&lt;ul&gt;&#xA;&lt;li&gt;October brought the welcome news that the World Health Organization had endorsed the world&amp;rsquo;s first vaccine against malaria. 10 月带来了一个可喜的消息，即世界卫生组织批准了世界上第一种疟疾疫苗&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;September&#xA;&lt;ul&gt;&#xA;&lt;li&gt;September saw the implementation of the Texas Heartbeat Act, which bans abortions after roughly six weeks. The Supreme Court has declined to block the law, saying it&amp;rsquo;s a question for lower courts. 9 月，德克萨斯州心跳法案 （Texas Heartbeat Act） 实施，该法案禁止在大约六周后堕胎。最高法院拒绝阻止这项法律，称这是下级法院的问题&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;August&#xA;&lt;ul&gt;&#xA;&lt;li&gt;August saw the withdrawal of American troops from Afghanistan after a two-decade war that took the lives of over 2,400 U.S. service personnel. 8 月，美国军队在经历了二十年的战争后从阿富汗撤军，这场战争夺走了 2,400 多名美国军人的生命&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;July&#xA;&lt;ul&gt;&#xA;&lt;li&gt;July brought the 32nd Summer Olympic games to Tokyo, a year after being postponed. The U.S. topped the medal count with 113. 第 32 届夏季奥运会在推迟一年后于 7 月在东京举行。美国以 113 枚奖牌位居榜首&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;June&#xA;&lt;ul&gt;&#xA;&lt;li&gt;June saw the partial collapse of a 12-story condominium in Surfside, Florida, killing 98 residents. 6 月，佛罗里达州瑟夫赛德 （Surfside） 的一栋 12 层公寓部分倒塌，造成 98 名居民死亡&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;March&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The container ship Ever Given ran aground in the Suez Canal in March, holding up billions in trade. The ship was freed six days later. 3 月，集装箱船 Ever Given 在苏伊士运河搁浅，阻碍了数十亿美元的贸易。六天后，这艘船被释放&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;February&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In February, the United States formally re-joined the Paris Climate Agreement, an international treaty aimed at limiting global warming. 今年 2 月，美国正式重新加入旨在限制全球变暖的国际条约《巴黎气候协定》。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Janurary&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In January Joe Biden was inaugurated as our 46th president … 1 月，乔·拜登就任我们的第 46 任总统&amp;hellip;&amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2020&#34;&gt;&#xA;  2020&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2020&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;The United Kingdom left the European Union; Brexit&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2019&#34;&gt;&#xA;  2019&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2019&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Global SARS-Cov-2 (COVID-19) Pandemic&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;Hong Kong Protests in 2019. 2019 年香港抗议活动&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2018&#34;&gt;&#xA;  2018&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2018&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;The Yellow Vests Movement in France&lt;/strong&gt; 法国巴黎黄背心运动&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;World&amp;rsquo;s longest sea-crossing bridge: Hong Kong-Zhuhai-Macao Bridge&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;The China-US trade War Started in 2018. 2018 年开始的中美贸易战&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2015&#34;&gt;&#xA;  2015&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2015&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The Legalization of Same-Sex Marriage in the United States 美国同性婚姻合法化&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2014&#34;&gt;&#xA;  2014&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2014&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Catastrophic Aviation Disasters of 2014. 2014 年的灾难性航空灾难&lt;/li&gt;&#xA;&lt;li&gt;The Annexation of Crimea by Russia 俄罗斯吞并克里米亚&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2012&#34;&gt;&#xA;  2012&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2012&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The “God Particle” Is (Probably) Discovered “上帝粒子”被发现&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2011&#34;&gt;&#xA;  2011&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2011&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Japan’s 2011 Tōhoku Earthquake and Tsunami 日本 2011 年东北地震和海啸&lt;/li&gt;&#xA;&lt;li&gt;Bin Laden Killed 本·拉登被击毙&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2010&#34;&gt;&#xA;  2010&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2010&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Instagram was launched&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Apple Inc. releasd the first tablet touch screen computer iPad&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2009-2017&#34;&gt;&#xA;  2009-2017&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2009-2017&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Barack Obama, the 44th U.S. President. The 1st African American President of the United States&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2009&#34;&gt;&#xA;  2009&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2009&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bitcoin&lt;/strong&gt; 比特币&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/zh/zh/post/others/english-learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/others/english-learning/</guid>
      <description>&lt;h1 id=&#34;english-learning&#34;&gt;&#xA;  English Learning&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#english-learning&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://lite.cnn.com&#34;&gt;lite cnn&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;纯文字版的cnn，没有图片&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://lite.cnn.com/world/china&#34;&gt;lite cnn &lt;strong&gt;China&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.chinadaily.com.cn&#34;&gt;China Daily&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;中国官方最大的英语新闻网站？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.21voa.com/special_english/&#34;&gt;voa special English&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这个网站听 voa special 不用翻墙&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://restofworld.org&#34;&gt;rest of world&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这个网站很有设计感&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://restofworld.org/region/china/&#34;&gt;China&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.theverge.com&#34;&gt;verge&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://news.ycombinator.com/&#34;&gt;Hacker News&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;技术文章也能学习英语&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.scmp.com&#34;&gt;南华早报&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bbc.com/news&#34;&gt;bbc&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bbc.com/news/world/asia/china&#34;&gt;China&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.quora.com&#34;&gt;quora&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;国外的知乎&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;log&#34;&gt;&#xA;  log&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#log&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025-01-07&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://mp.weixin.qq.com/s/nu1-Pg_kDNW4kpFwz3MCWw&#34;&gt;2024-12-14 “羽绒服”英语怎么说？你绝对想不到！&lt;/a&gt; 2025-01-07&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://mp.weixin.qq.com/s/IRaYk7ir1s-KU0s3L59WaQ&#34;&gt;2025-01-06 “年会”英文怎么说？“Year Meeting”还是“Annual Party？” 都错啦！&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;voa-special-english&#34;&gt;&#xA;  voa special English&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#voa-special-english&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.21voa.com/special_english/&#34;&gt;voa special English&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;others&#34;&gt;&#xA;  others&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#others&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/92623&#34;&gt;如何利用 AI 更好地学外语&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://greycoder.com/a-list-of-text-only-new-sites/&#34;&gt;A List Of Text-Only &amp;amp; Minimalist News Sites&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2022&#34;&gt;&#xA;  2022&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2022&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Monkeypox outbreak&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;猴痘病毒爆发&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Russia-Ukraine War&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;November&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cbsnews.com/live-updates/2022-elections-midterms-results-house-senate-polls-2022-11-09/&#34;&gt;&lt;strong&gt;A projected &amp;ldquo;red wave&amp;rdquo; fizzled, as Republicans won a slim majority in the House, and Democrats held control of the United States Senate&lt;/strong&gt;&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;随着共和党在众议院赢得微弱多数，民主党控制了美国参议院，预计中的“红色浪潮”落空了&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2022-11-09&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://dougallj.wordpress.com/2022/11/09/why-is-rosetta-2-fast/&#34;&gt;Why is Apple Rosetta 2 fast?&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;为什么 Apple Rosetta 2 速度很快？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;October&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cbsnews.com/news/elon-musk-twitter-sale-official-44-billion/&#34;&gt;&lt;strong&gt;Elon Musk took control of Twitter, bringing to the social media giant a brash leadership style – along with thousands of layoffs&lt;/strong&gt;&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;埃隆·马斯克 （Elon Musk） 控制了 Twitter，为这家社交媒体巨头带来了傲慢的领导风格——以及数千人的裁员&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;September&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cbsnews.com/news/queen-elizabeth-ii-dies-age-96-britains-longest-reigning-monarch/&#34;&gt;&lt;strong&gt;Britain&amp;rsquo;s Queen Elizabeth II died in Scotland, at the age of 96. Her son Charles succeeded her as king&lt;/strong&gt;&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;英国女王伊丽莎白二世在苏格兰去世，享年 96 岁。她的儿子查理继承了她的国王之位&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;August&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cbsnews.com/news/trump-mar-a-lago-search-fbi-documents-boxes/&#34;&gt;&lt;strong&gt;The FBI conducted a search of Mar-a-Lago, the home of former president Donald Trump, and found classified materials, including documents labeled &amp;ldquo;top secret.&amp;rdquo;&lt;/strong&gt;&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;联邦调查局对前总统唐纳德·特朗普的家马阿拉歌庄园进行了搜查，发现了机密材料，包括标记为“绝密”的文件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;July&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cbsnews.com/news/shinzo-abe-death-shooting-former-japanese-prime-minister/&#34;&gt;&lt;strong&gt;Former Japanese prime minister Shinzo Abe was assassinated, just two days before that country&amp;rsquo;s parliamentary elections&lt;/strong&gt;&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;日本前首相安倍晋三在该国议会选举前两天被暗杀&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;June&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cbsnews.com/live-updates/supreme-court-roe-v-wade-abortion-rights/&#34;&gt;&lt;strong&gt;The Supreme Court overturned Roe v. Wade, effectively criminalizing abortion in much of the nation&lt;/strong&gt;&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;最高法院推翻了罗伊诉韦德案（Roe v. Wade），实际上在全国大部分地区将堕胎定为刑事犯罪。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;May&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cbsnews.com/live-updates/texas-school-shooting-robb-elementary-uvalde/&#34;&gt;&lt;strong&gt;A gunman in Uvalde, Texas killed 19 students and two teachers at Robb Elementary School. It was the third-deadliest school shooting in U.S. history&lt;/strong&gt;&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;德克萨斯州尤瓦尔迪的一名枪手在罗布小学杀死了 19 名学生和两名教师。这是美国历史上第三致命的校园枪击事件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2021&#34;&gt;&#xA;  2021&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2021&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;December&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In December, tornadoes ripped through the South and Midwest, killing at least 91 people &amp;hellip;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;12 月，龙卷风席卷南部和中西部，造成至少 91 人死亡&amp;hellip;&amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;October&#xA;&lt;ul&gt;&#xA;&lt;li&gt;October brought the welcome news that the World Health Organization had endorsed the world&amp;rsquo;s first vaccine against malaria. 10 月带来了一个可喜的消息，即世界卫生组织批准了世界上第一种疟疾疫苗&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;September&#xA;&lt;ul&gt;&#xA;&lt;li&gt;September saw the implementation of the Texas Heartbeat Act, which bans abortions after roughly six weeks. The Supreme Court has declined to block the law, saying it&amp;rsquo;s a question for lower courts. 9 月，德克萨斯州心跳法案 （Texas Heartbeat Act） 实施，该法案禁止在大约六周后堕胎。最高法院拒绝阻止这项法律，称这是下级法院的问题&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;August&#xA;&lt;ul&gt;&#xA;&lt;li&gt;August saw the withdrawal of American troops from Afghanistan after a two-decade war that took the lives of over 2,400 U.S. service personnel. 8 月，美国军队在经历了二十年的战争后从阿富汗撤军，这场战争夺走了 2,400 多名美国军人的生命&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;July&#xA;&lt;ul&gt;&#xA;&lt;li&gt;July brought the 32nd Summer Olympic games to Tokyo, a year after being postponed. The U.S. topped the medal count with 113. 第 32 届夏季奥运会在推迟一年后于 7 月在东京举行。美国以 113 枚奖牌位居榜首&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;June&#xA;&lt;ul&gt;&#xA;&lt;li&gt;June saw the partial collapse of a 12-story condominium in Surfside, Florida, killing 98 residents. 6 月，佛罗里达州瑟夫赛德 （Surfside） 的一栋 12 层公寓部分倒塌，造成 98 名居民死亡&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;March&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The container ship Ever Given ran aground in the Suez Canal in March, holding up billions in trade. The ship was freed six days later. 3 月，集装箱船 Ever Given 在苏伊士运河搁浅，阻碍了数十亿美元的贸易。六天后，这艘船被释放&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;February&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In February, the United States formally re-joined the Paris Climate Agreement, an international treaty aimed at limiting global warming. 今年 2 月，美国正式重新加入旨在限制全球变暖的国际条约《巴黎气候协定》。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Janurary&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In January Joe Biden was inaugurated as our 46th president … 1 月，乔·拜登就任我们的第 46 任总统&amp;hellip;&amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2020&#34;&gt;&#xA;  2020&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2020&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;The United Kingdom left the European Union; Brexit&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2019&#34;&gt;&#xA;  2019&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2019&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Global SARS-Cov-2 (COVID-19) Pandemic&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;Hong Kong Protests in 2019. 2019 年香港抗议活动&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2018&#34;&gt;&#xA;  2018&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2018&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;The Yellow Vests Movement in France&lt;/strong&gt; 法国巴黎黄背心运动&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;World&amp;rsquo;s longest sea-crossing bridge: Hong Kong-Zhuhai-Macao Bridge&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;The China-US trade War Started in 2018. 2018 年开始的中美贸易战&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2015&#34;&gt;&#xA;  2015&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2015&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The Legalization of Same-Sex Marriage in the United States 美国同性婚姻合法化&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2014&#34;&gt;&#xA;  2014&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2014&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Catastrophic Aviation Disasters of 2014. 2014 年的灾难性航空灾难&lt;/li&gt;&#xA;&lt;li&gt;The Annexation of Crimea by Russia 俄罗斯吞并克里米亚&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2012&#34;&gt;&#xA;  2012&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2012&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The “God Particle” Is (Probably) Discovered “上帝粒子”被发现&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2011&#34;&gt;&#xA;  2011&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2011&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Japan’s 2011 Tōhoku Earthquake and Tsunami 日本 2011 年东北地震和海啸&lt;/li&gt;&#xA;&lt;li&gt;Bin Laden Killed 本·拉登被击毙&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2010&#34;&gt;&#xA;  2010&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2010&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Instagram was launched&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Apple Inc. releasd the first tablet touch screen computer iPad&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2009-2017&#34;&gt;&#xA;  2009-2017&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2009-2017&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Barack Obama, the 44th U.S. President. The 1st African American President of the United States&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2009&#34;&gt;&#xA;  2009&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2009&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bitcoin&lt;/strong&gt; 比特币&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/zh/post/others/mathematics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/others/mathematics/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>/zh/zh/post/others/mathematics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/others/mathematics/</guid>
      <description></description>
    </item>
    <item>
      <title>bilibili</title>
      <link>/zh/post/life/bilibili/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/life/bilibili/</guid>
      <description>&lt;h1 id=&#34;bilibili&#34;&gt;&#xA;  bilibili&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#bilibili&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;movies&#34;&gt;&#xA;  movies&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#movies&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/Im7lGG9&#34;&gt;木鱼水心&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/kSzCtZK&#34;&gt;电影广角镜&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;world&#34;&gt;&#xA;  world&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#world&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/PtgvbW2&#34;&gt;Yooupi食途&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/zfDIHWd&#34;&gt;星球研究所&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/aimvkGQ&#34;&gt;世茹很如意&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;digital&#34;&gt;&#xA;  digital&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#digital&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/i0TPoh6&#34;&gt;那岩KJMX&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/11336264&#34;&gt;TESTV官方频道&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/91527228&#34;&gt;黄杨ME&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;cycling&#34;&gt;&#xA;  cycling&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#cycling&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/407656186&#34;&gt;Contayu_Cycling&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/1911394754&#34;&gt;道长说车&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/601150167&#34;&gt;club100&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/352037317&#34;&gt;周四青年&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/204850019&#34;&gt;艾慕葡萄&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;table-tennis&#34;&gt;&#xA;  table tennis&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#table-tennis&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/280156719&#34;&gt;-我是派派-&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;computer-science&#34;&gt;&#xA;  computer science&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#computer-science&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/13081489/&#34;&gt;TheCW&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/288339968/&#34;&gt;PegasusWang&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/mvac29i&#34;&gt;神州数码云基地&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/Y94ogWO&#34;&gt;Koala聊开源&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/Nq9jpyj&#34;&gt;JavaEE之Spring框架&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/525037536&#34;&gt;开源社KAIYUANSHE&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/18937923&#34;&gt;美团技术团队&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/165659472&#34;&gt;技术胖&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/525438321&#34;&gt;代码随想录&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/17124132&#34;&gt;张老师和杜老师编程课&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;photography&#34;&gt;&#xA;  photography&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#photography&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/AG2fzjT&#34;&gt;影视飓风&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;music&#34;&gt;&#xA;  music&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#music&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/14114630&#34;&gt;94不曈&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;bilibili-knowledge&#34;&gt;&#xA;  bilibili-knowledge&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#bilibili-knowledge&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/CvSjDAR&#34;&gt;量子位&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/26798384&#34;&gt;柴知道&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;other&#34;&gt;&#xA;  other&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#other&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/9ghFVSS&#34;&gt;M2档案&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>bilibili</title>
      <link>/zh/zh/post/life/bilibili/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/life/bilibili/</guid>
      <description>&lt;h1 id=&#34;bilibili&#34;&gt;&#xA;  bilibili&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#bilibili&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;movies&#34;&gt;&#xA;  movies&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#movies&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/Im7lGG9&#34;&gt;木鱼水心&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/kSzCtZK&#34;&gt;电影广角镜&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;world&#34;&gt;&#xA;  world&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#world&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/PtgvbW2&#34;&gt;Yooupi食途&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/zfDIHWd&#34;&gt;星球研究所&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/aimvkGQ&#34;&gt;世茹很如意&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;digital&#34;&gt;&#xA;  digital&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#digital&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/i0TPoh6&#34;&gt;那岩KJMX&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/11336264&#34;&gt;TESTV官方频道&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/91527228&#34;&gt;黄杨ME&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;cycling&#34;&gt;&#xA;  cycling&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#cycling&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/407656186&#34;&gt;Contayu_Cycling&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/1911394754&#34;&gt;道长说车&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/601150167&#34;&gt;club100&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/352037317&#34;&gt;周四青年&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/204850019&#34;&gt;艾慕葡萄&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;table-tennis&#34;&gt;&#xA;  table tennis&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#table-tennis&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/280156719&#34;&gt;-我是派派-&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;computer-science&#34;&gt;&#xA;  computer science&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#computer-science&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/13081489/&#34;&gt;TheCW&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/288339968/&#34;&gt;PegasusWang&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/mvac29i&#34;&gt;神州数码云基地&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/Y94ogWO&#34;&gt;Koala聊开源&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/Nq9jpyj&#34;&gt;JavaEE之Spring框架&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/525037536&#34;&gt;开源社KAIYUANSHE&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/18937923&#34;&gt;美团技术团队&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/165659472&#34;&gt;技术胖&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/525438321&#34;&gt;代码随想录&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/17124132&#34;&gt;张老师和杜老师编程课&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;photography&#34;&gt;&#xA;  photography&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#photography&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/AG2fzjT&#34;&gt;影视飓风&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;music&#34;&gt;&#xA;  music&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#music&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/14114630&#34;&gt;94不曈&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;bilibili-knowledge&#34;&gt;&#xA;  bilibili-knowledge&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#bilibili-knowledge&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/CvSjDAR&#34;&gt;量子位&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/26798384&#34;&gt;柴知道&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;other&#34;&gt;&#xA;  other&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#other&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/9ghFVSS&#34;&gt;M2档案&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>books</title>
      <link>/zh/post/life/books/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/life/books/</guid>
      <description>&lt;h1 id=&#34;books&#34;&gt;&#xA;  books&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#books&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;mathematics&#34;&gt;&#xA;  mathematics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mathematics&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 组合数学 原书第5版&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;computer-science&#34;&gt;&#xA;  computer science&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#computer-science&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 软件体系结构原理、方法与实践&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;algorithms&#34;&gt;&#xA;  algorithms&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#algorithms&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 算法 第四版&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 剑指Offer：名企面试官精讲典型编程题&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;java&#34;&gt;&#xA;  java&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#java&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Head First Java&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://book.douban.com/subject/34895968/&#34;&gt;Java实战（第2版）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; java 核心技术&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; java 编程的逻辑&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Maven 实战&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; java8 实战&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 深入理解java虚拟机&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第一行代码：Android&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://book.douban.com/subject/36142064/&#34;&gt;Spring实战（第6版）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; spring 微服务实战 第2版&lt;/li&gt;&#xA;&lt;li&gt;书单&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.douban.com/doulist/46474381/&#34;&gt;Modern Java(8+)下的技术/技能升级&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.douban.com/doulist/1779295/&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://book.douban.com/series/46192&#34;&gt;图灵程序设计丛书·Java系列&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;security&#34;&gt;&#xA;  security&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#security&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 白帽子讲 web 安全&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;networking&#34;&gt;&#xA;  networking&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#networking&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; http 权威指南&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 深入浅出https&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 网络是怎样连接的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;cloud&#34;&gt;&#xA;  cloud&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#cloud&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 云计算通俗讲义&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; kubernates in action&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;database&#34;&gt;&#xA;  database&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#database&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; SQL优化最佳实践&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; SQL查询的艺术&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;artificial-intelligence&#34;&gt;&#xA;  artificial intelligence&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#artificial-intelligence&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://book.douban.com/subject/36357287/&#34;&gt;人工智能入行实战：从校园到职场&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.douban.com/doubanapp/dispatch/book/30270959?dt_dapp=1&#34;&gt;深度学习入门&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.douban.com/doubanapp/dispatch/book/30192800?dt_dapp=1&#34;&gt;Python 神经网络编程&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;others&#34;&gt;&#xA;  others&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#others&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 大象：Thinking in UML&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Redis 设计与实现&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 人人都懂设计模式&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 编程之美&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; ffmpeg音视频开发基础与实战&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 黑客与画家&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;economy&#34;&gt;&#xA;  economy&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#economy&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 股票投资入门，进阶，与实战&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 经济学：第18版&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;politics&#34;&gt;&#xA;  politics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#politics&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://book.douban.com/subject/36946631/&#34;&gt;美国困局&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;history&#34;&gt;&#xA;  history&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#history&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://book.douban.com/subject/20424526/&#34;&gt;邓小平时代&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 美国十讲 资中筠&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 明朝那些事1&lt;/li&gt;&#xA;&lt;li&gt;文明的进程：文明的社会发生和心理发生的研究&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;law&#34;&gt;&#xA;  law&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#law&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 法理学（第4版）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 刑法学讲义 罗翔&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;health&#34;&gt;&#xA;  health&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#health&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 我们为什么睡觉&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;philosophy&#34;&gt;&#xA;  philosophy&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#philosophy&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 西方哲学史讲演录&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 伦理学的两个基本问题&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 哲学 科学 常识&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 古希腊文明的光芒 赵林&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 大问题：简明哲学导论&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 人类理智研究&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 自识与反思：近现代西方哲学的基本问题&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 谈谈方法 笛卡尔&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第一哲学沉思集：反驳与答辩&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 给无神论者：宗教对世俗生活的意义&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;psychology&#34;&gt;&#xA;  psychology&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#psychology&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 社会心理学 戴维迈尔斯&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 认知心理学及其启示&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 自控力：斯坦福大学最受欢迎心理学课程&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 习惯的力量&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 发展心理学&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 精神焦虑症的自救（病理分析卷）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;learning-science&#34;&gt;&#xA;  learning science&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-science&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 学习之道&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 练习的心态：如何培养耐心、专注和自律&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 为什么学生不喜欢上学&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 暗时间&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;thinking&#34;&gt;&#xA;  thinking&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#thinking&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://book.douban.com/subject/4238362/&#34;&gt;送你一颗子弹&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2019-08-05&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;枪炮、病菌与钢铁：人类社会的命运&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;literature&#34;&gt;&#xA;  literature&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#literature&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 恶意&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 嫌疑人X的献身&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 伽利略的苦恼&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 斯通纳&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 少年的你，如此美丽&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 杀死一只知更鸟&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 许三观卖血记&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 月光落在左手上&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 虚无的十字架&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 放学后&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mess&#34;&gt;&#xA;  mess&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mess&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://book.douban.com/subject/26768309/&#34;&gt;查令十字街84号&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2019-08-05&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 跑步圣经：我跑故我在&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 当我谈跑步时我在谈些什么&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 囚徒健身：用失传的技艺练就强大的生存实力&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>books</title>
      <link>/zh/zh/post/life/books/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/life/books/</guid>
      <description>&lt;h1 id=&#34;books&#34;&gt;&#xA;  books&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#books&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;mathematics&#34;&gt;&#xA;  mathematics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mathematics&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 组合数学 原书第5版&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;computer-science&#34;&gt;&#xA;  computer science&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#computer-science&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 软件体系结构原理、方法与实践&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;algorithms&#34;&gt;&#xA;  algorithms&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#algorithms&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 算法 第四版&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 剑指Offer：名企面试官精讲典型编程题&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;java&#34;&gt;&#xA;  java&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#java&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Head First Java&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://book.douban.com/subject/34895968/&#34;&gt;Java实战（第2版）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; java 核心技术&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; java 编程的逻辑&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Maven 实战&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; java8 实战&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 深入理解java虚拟机&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第一行代码：Android&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://book.douban.com/subject/36142064/&#34;&gt;Spring实战（第6版）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; spring 微服务实战 第2版&lt;/li&gt;&#xA;&lt;li&gt;书单&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.douban.com/doulist/46474381/&#34;&gt;Modern Java(8+)下的技术/技能升级&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.douban.com/doulist/1779295/&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://book.douban.com/series/46192&#34;&gt;图灵程序设计丛书·Java系列&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;security&#34;&gt;&#xA;  security&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#security&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 白帽子讲 web 安全&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;networking&#34;&gt;&#xA;  networking&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#networking&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; http 权威指南&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 深入浅出https&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 网络是怎样连接的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;cloud&#34;&gt;&#xA;  cloud&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#cloud&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 云计算通俗讲义&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; kubernates in action&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;database&#34;&gt;&#xA;  database&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#database&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; SQL优化最佳实践&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; SQL查询的艺术&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;artificial-intelligence&#34;&gt;&#xA;  artificial intelligence&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#artificial-intelligence&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://book.douban.com/subject/36357287/&#34;&gt;人工智能入行实战：从校园到职场&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.douban.com/doubanapp/dispatch/book/30270959?dt_dapp=1&#34;&gt;深度学习入门&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.douban.com/doubanapp/dispatch/book/30192800?dt_dapp=1&#34;&gt;Python 神经网络编程&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;others&#34;&gt;&#xA;  others&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#others&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 大象：Thinking in UML&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Redis 设计与实现&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 人人都懂设计模式&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 编程之美&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; ffmpeg音视频开发基础与实战&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 黑客与画家&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;economy&#34;&gt;&#xA;  economy&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#economy&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 股票投资入门，进阶，与实战&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 经济学：第18版&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;politics&#34;&gt;&#xA;  politics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#politics&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://book.douban.com/subject/36946631/&#34;&gt;美国困局&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;history&#34;&gt;&#xA;  history&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#history&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://book.douban.com/subject/20424526/&#34;&gt;邓小平时代&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 美国十讲 资中筠&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 明朝那些事1&lt;/li&gt;&#xA;&lt;li&gt;文明的进程：文明的社会发生和心理发生的研究&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;law&#34;&gt;&#xA;  law&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#law&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 法理学（第4版）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 刑法学讲义 罗翔&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;health&#34;&gt;&#xA;  health&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#health&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 我们为什么睡觉&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;philosophy&#34;&gt;&#xA;  philosophy&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#philosophy&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 西方哲学史讲演录&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 伦理学的两个基本问题&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 哲学 科学 常识&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 古希腊文明的光芒 赵林&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 大问题：简明哲学导论&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 人类理智研究&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 自识与反思：近现代西方哲学的基本问题&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 谈谈方法 笛卡尔&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第一哲学沉思集：反驳与答辩&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 给无神论者：宗教对世俗生活的意义&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;psychology&#34;&gt;&#xA;  psychology&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#psychology&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 社会心理学 戴维迈尔斯&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 认知心理学及其启示&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 自控力：斯坦福大学最受欢迎心理学课程&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 习惯的力量&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 发展心理学&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 精神焦虑症的自救（病理分析卷）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;learning-science&#34;&gt;&#xA;  learning science&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-science&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 学习之道&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 练习的心态：如何培养耐心、专注和自律&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 为什么学生不喜欢上学&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 暗时间&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;thinking&#34;&gt;&#xA;  thinking&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#thinking&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://book.douban.com/subject/4238362/&#34;&gt;送你一颗子弹&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2019-08-05&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;枪炮、病菌与钢铁：人类社会的命运&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;literature&#34;&gt;&#xA;  literature&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#literature&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 恶意&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 嫌疑人X的献身&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 伽利略的苦恼&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 斯通纳&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 少年的你，如此美丽&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 杀死一只知更鸟&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 许三观卖血记&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 月光落在左手上&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 虚无的十字架&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 放学后&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mess&#34;&gt;&#xA;  mess&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mess&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://book.douban.com/subject/26768309/&#34;&gt;查令十字街84号&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2019-08-05&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 跑步圣经：我跑故我在&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 当我谈跑步时我在谈些什么&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 囚徒健身：用失传的技艺练就强大的生存实力&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>cycling</title>
      <link>/zh/post/life/cycling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/life/cycling/</guid>
      <description>&lt;h1 id=&#34;cycling&#34;&gt;&#xA;  cycling&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#cycling&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;my-log&#34;&gt;&#xA;  my log&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#my-log&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;环滇池&#34;&gt;&#xA;  环滇池&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%8e%af%e6%bb%87%e6%b1%a0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;9 &lt;a href=&#34;https://www.strava.com/activities/12413018322&#34;&gt;2024-09-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;8 &lt;a href=&#34;https://www.strava.com/activities/10198388156&#34;&gt;2023-11-11&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;7 &lt;a href=&#34;https://www.strava.com/activities/10118006987&#34;&gt;2023-10-28&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;6 &lt;a href=&#34;https://www.strava.com/activities/10083784580&#34;&gt;2023-10-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;5 &lt;a href=&#34;https://www.strava.com/activities/9111939346&#34;&gt;2023-05-21&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;4 &lt;a href=&#34;https://www.strava.com/activities/8315375770&#34;&gt;2022-12-31&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;3 &lt;a href=&#34;https://www.strava.com/activities/7256929509&#34;&gt;2022-06-05&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;2 &lt;a href=&#34;https://www.strava.com/activities/6852172284&#34;&gt;2022-03-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;1 &lt;a href=&#34;https://www.strava.com/activities/6312587059&#34;&gt;2021-11-27&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;昆洛路-彩云中路爬坡-彩云北路&#34;&gt;&#xA;  昆洛路-&amp;gt;彩云中路爬坡-&amp;gt;彩云北路&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%98%86%e6%b4%9b%e8%b7%af-%e5%bd%a9%e4%ba%91%e4%b8%ad%e8%b7%af%e7%88%ac%e5%9d%a1-%e5%bd%a9%e4%ba%91%e5%8c%97%e8%b7%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;8 &lt;a href=&#34;https://www.strava.com/activities/13288594983&#34;&gt;2025-01-07&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;7 &lt;a href=&#34;https://www.strava.com/activities/13147543071&#34;&gt;2024-12-19&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;6 &lt;a href=&#34;https://www.strava.com/activities/13140696424&#34;&gt;2024-12-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;5 &lt;a href=&#34;https://www.strava.com/activities/13133130308&#34;&gt;2024-12-17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;4 &lt;a href=&#34;https://www.strava.com/activities/13105338980&#34;&gt;2024-12-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;3 &lt;a href=&#34;https://www.strava.com/activities/13084445625&#34;&gt;2024-12-10&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;2 &lt;a href=&#34;https://www.strava.com/activities/13057445903&#34;&gt;2024-12-06&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;1 &lt;a href=&#34;https://www.strava.com/activities/13007587918&#34;&gt;2024-11-29&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2024&#34;&gt;&#xA;  2024&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2024&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com/activities/11306332249&#34;&gt;2024-05-01 149.44km 阳宗海&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com/activities/10971310394&#34;&gt;2024-03-16 169.81km 环两湖失败 &lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2023&#34;&gt;&#xA;  2023&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2023&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com/activities/9454921406&#34;&gt;2023-07-15 136.21km 梁王山&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com/activities/8983725511&#34;&gt;2023-04-30 150.06km 抚仙湖折返&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2022&#34;&gt;&#xA;  2022&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2022&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com/activities/7215994725&#34;&gt;2022-05-28 131.56km 梁王山&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com/activities/7065665848&#34;&gt;2022-04-30 202.94km 抚仙湖&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;骑行路线&#34;&gt;&#xA;  骑行路线&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%aa%91%e8%a1%8c%e8%b7%af%e7%ba%bf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;昆明&#34;&gt;&#xA;  昆明&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%98%86%e6%98%8e&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/N3GJ7UFKzOb&#34;&gt;环滇池&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/hLnfVrCKzOb&#34;&gt;宝花路 爬至小亭子&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/NNsDrPHKzOb&#34;&gt;梁王山上坡&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/UUjQ56MKzOb&#34;&gt;西山后山爬坡&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/L0k5BVOKzOb&#34;&gt;松花坝水库爬坡&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;昭通&#34;&gt;&#xA;  昭通&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%98%ad%e9%80%9a&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/tpE4yBKKzOb&#34;&gt;凤凰山&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;athlete&#34;&gt;&#xA;  athlete&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#athlete&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;tadej-pogacar&#34;&gt;&#xA;  Tadej Pogacar&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tadej-pogacar&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/Bpj0wpxOzOb&#34;&gt;strava&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/V6DgzLAOzOb&#34;&gt;2024-09-29 世锦赛冠军&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/tVWMa7EOzOb&#34;&gt;2024-07-21 环法 stage 21 赛段冠军&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/JNBEriJOzOb&#34;&gt;2024-07-20 stage 20 赛段冠军&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;reference&#34;&gt;&#xA;  reference&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#reference&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.procyclingstats.com/index.php&#34;&gt;pro cycling stats&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;自行车职业赛数据及积分排行查询&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com&#34;&gt;strava&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com/athletes/24928841&#34;&gt;my_strava&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://veloviewer.com/&#34;&gt;veloviewer&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>cycling</title>
      <link>/zh/zh/post/life/cycling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/life/cycling/</guid>
      <description>&lt;h1 id=&#34;cycling&#34;&gt;&#xA;  cycling&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#cycling&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;my-log&#34;&gt;&#xA;  my log&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#my-log&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;环滇池&#34;&gt;&#xA;  环滇池&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%8e%af%e6%bb%87%e6%b1%a0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;9 &lt;a href=&#34;https://www.strava.com/activities/12413018322&#34;&gt;2024-09-15&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;8 &lt;a href=&#34;https://www.strava.com/activities/10198388156&#34;&gt;2023-11-11&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;7 &lt;a href=&#34;https://www.strava.com/activities/10118006987&#34;&gt;2023-10-28&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;6 &lt;a href=&#34;https://www.strava.com/activities/10083784580&#34;&gt;2023-10-22&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;5 &lt;a href=&#34;https://www.strava.com/activities/9111939346&#34;&gt;2023-05-21&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;4 &lt;a href=&#34;https://www.strava.com/activities/8315375770&#34;&gt;2022-12-31&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;3 &lt;a href=&#34;https://www.strava.com/activities/7256929509&#34;&gt;2022-06-05&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;2 &lt;a href=&#34;https://www.strava.com/activities/6852172284&#34;&gt;2022-03-20&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;1 &lt;a href=&#34;https://www.strava.com/activities/6312587059&#34;&gt;2021-11-27&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;昆洛路-彩云中路爬坡-彩云北路&#34;&gt;&#xA;  昆洛路-&amp;gt;彩云中路爬坡-&amp;gt;彩云北路&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%98%86%e6%b4%9b%e8%b7%af-%e5%bd%a9%e4%ba%91%e4%b8%ad%e8%b7%af%e7%88%ac%e5%9d%a1-%e5%bd%a9%e4%ba%91%e5%8c%97%e8%b7%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;8 &lt;a href=&#34;https://www.strava.com/activities/13288594983&#34;&gt;2025-01-07&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;7 &lt;a href=&#34;https://www.strava.com/activities/13147543071&#34;&gt;2024-12-19&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;6 &lt;a href=&#34;https://www.strava.com/activities/13140696424&#34;&gt;2024-12-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;5 &lt;a href=&#34;https://www.strava.com/activities/13133130308&#34;&gt;2024-12-17&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;4 &lt;a href=&#34;https://www.strava.com/activities/13105338980&#34;&gt;2024-12-13&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;3 &lt;a href=&#34;https://www.strava.com/activities/13084445625&#34;&gt;2024-12-10&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;2 &lt;a href=&#34;https://www.strava.com/activities/13057445903&#34;&gt;2024-12-06&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;1 &lt;a href=&#34;https://www.strava.com/activities/13007587918&#34;&gt;2024-11-29&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2024&#34;&gt;&#xA;  2024&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2024&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com/activities/11306332249&#34;&gt;2024-05-01 149.44km 阳宗海&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com/activities/10971310394&#34;&gt;2024-03-16 169.81km 环两湖失败 &lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2023&#34;&gt;&#xA;  2023&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2023&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com/activities/9454921406&#34;&gt;2023-07-15 136.21km 梁王山&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com/activities/8983725511&#34;&gt;2023-04-30 150.06km 抚仙湖折返&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2022&#34;&gt;&#xA;  2022&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2022&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com/activities/7215994725&#34;&gt;2022-05-28 131.56km 梁王山&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com/activities/7065665848&#34;&gt;2022-04-30 202.94km 抚仙湖&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;骑行路线&#34;&gt;&#xA;  骑行路线&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%aa%91%e8%a1%8c%e8%b7%af%e7%ba%bf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;昆明&#34;&gt;&#xA;  昆明&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%98%86%e6%98%8e&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/N3GJ7UFKzOb&#34;&gt;环滇池&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/hLnfVrCKzOb&#34;&gt;宝花路 爬至小亭子&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/NNsDrPHKzOb&#34;&gt;梁王山上坡&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/UUjQ56MKzOb&#34;&gt;西山后山爬坡&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/L0k5BVOKzOb&#34;&gt;松花坝水库爬坡&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;昭通&#34;&gt;&#xA;  昭通&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%98%ad%e9%80%9a&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/tpE4yBKKzOb&#34;&gt;凤凰山&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;athlete&#34;&gt;&#xA;  athlete&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#athlete&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;tadej-pogacar&#34;&gt;&#xA;  Tadej Pogacar&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tadej-pogacar&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/Bpj0wpxOzOb&#34;&gt;strava&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/V6DgzLAOzOb&#34;&gt;2024-09-29 世锦赛冠军&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/tVWMa7EOzOb&#34;&gt;2024-07-21 环法 stage 21 赛段冠军&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/JNBEriJOzOb&#34;&gt;2024-07-20 stage 20 赛段冠军&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;reference&#34;&gt;&#xA;  reference&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#reference&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.procyclingstats.com/index.php&#34;&gt;pro cycling stats&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;自行车职业赛数据及积分排行查询&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com&#34;&gt;strava&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.strava.com/athletes/24928841&#34;&gt;my_strava&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://veloviewer.com/&#34;&gt;veloviewer&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>database</title>
      <link>/zh/post/computer-science/database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/computer-science/database/</guid>
      <description>&lt;h1 id=&#34;database&#34;&gt;&#xA;  database&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#database&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;sql&#34;&gt;&#xA;  sql&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#sql&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;175-组合两个表&#34;&gt;&#xA;  175 组合两个表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#175-%e7%bb%84%e5%90%88%e4%b8%a4%e4%b8%aa%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.cn/problems/combine-two-tables/&#34;&gt;175. 组合两个表&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; FirstName, LastName, City, &lt;span style=&#34;color:#66d9ef&#34;&gt;State&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Person&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; Person.PersonId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Address.PersonId;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;176-第二高的薪水&#34;&gt;&#xA;  176 第二高的薪水&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#176-%e7%ac%ac%e4%ba%8c%e9%ab%98%e7%9a%84%e8%96%aa%e6%b0%b4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.cn/problems/second-highest-salary/description/&#34;&gt;176. 第二高的薪水&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;distinct&lt;/span&gt; Salary &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; SecondHighestSalary&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Employee&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;order&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; Salary &lt;span style=&#34;color:#66d9ef&#34;&gt;desc&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;limit&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; offset &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然而，如果没有第 2 高的薪资，即表里可能只有一条记录，这个解答会被评测为 &amp;lsquo;Wrong Answer&amp;rsquo; 。为了克服这个问题，我们可以将其作为临时表。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DISTINCT&lt;/span&gt; Salary&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; Employee&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; Salary &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; OFFSET &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; SecondHighestSalary&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>database</title>
      <link>/zh/zh/post/computer-science/database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/computer-science/database/</guid>
      <description>&lt;h1 id=&#34;database&#34;&gt;&#xA;  database&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#database&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;sql&#34;&gt;&#xA;  sql&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#sql&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;175-组合两个表&#34;&gt;&#xA;  175 组合两个表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#175-%e7%bb%84%e5%90%88%e4%b8%a4%e4%b8%aa%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.cn/problems/combine-two-tables/&#34;&gt;175. 组合两个表&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; FirstName, LastName, City, &lt;span style=&#34;color:#66d9ef&#34;&gt;State&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Person&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; Person.PersonId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Address.PersonId;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;176-第二高的薪水&#34;&gt;&#xA;  176 第二高的薪水&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#176-%e7%ac%ac%e4%ba%8c%e9%ab%98%e7%9a%84%e8%96%aa%e6%b0%b4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.cn/problems/second-highest-salary/description/&#34;&gt;176. 第二高的薪水&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;distinct&lt;/span&gt; Salary &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; SecondHighestSalary&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Employee&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;order&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; Salary &lt;span style=&#34;color:#66d9ef&#34;&gt;desc&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;limit&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; offset &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然而，如果没有第 2 高的薪资，即表里可能只有一条记录，这个解答会被评测为 &amp;lsquo;Wrong Answer&amp;rsquo; 。为了克服这个问题，我们可以将其作为临时表。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DISTINCT&lt;/span&gt; Salary&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; Employee&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; Salary &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; OFFSET &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; SecondHighestSalary&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>echarts</title>
      <link>/zh/post/computer-science/echarts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/computer-science/echarts/</guid>
      <description>&lt;h1 id=&#34;echarts&#34;&gt;&#xA;  echarts&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#echarts&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ppchart.com/#/&#34;&gt;PPChart&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>echarts</title>
      <link>/zh/zh/post/computer-science/echarts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/computer-science/echarts/</guid>
      <description>&lt;h1 id=&#34;echarts&#34;&gt;&#xA;  echarts&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#echarts&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ppchart.com/#/&#34;&gt;PPChart&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>github</title>
      <link>/zh/post/computer-science/github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/computer-science/github/</guid>
      <description>&lt;h1 id=&#34;github&#34;&gt;&#xA;  github&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#github&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;github-action&#34;&gt;&#xA;  Github Action&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#github-action&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html&#34;&gt;GitHub Actions 入门教程&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;repository&#34;&gt;&#xA;  repository&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#repository&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/torvalds/linux&#34;&gt;torvalds/linux&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/CesiumGS/cesium&#34;&gt;CesiumGS/cesium&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CesiumJS is a JavaScript library for creating 3D globes and 2D maps in a web browser without a plugin. It uses WebGL for hardware-accelerated graphics, and is cross-platform, cross-browser, and tuned for dynamic-data visualization.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh&#34;&gt;ohmyzsh/ohmyzsh&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Oh My Zsh is an open source, community-driven framework for managing your zsh configuration.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;follow&#34;&gt;&#xA;  follow&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#follow&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/oldratlee&#34;&gt;oldratlee&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>github</title>
      <link>/zh/zh/post/computer-science/github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/computer-science/github/</guid>
      <description>&lt;h1 id=&#34;github&#34;&gt;&#xA;  github&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#github&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;github-action&#34;&gt;&#xA;  Github Action&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#github-action&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html&#34;&gt;GitHub Actions 入门教程&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;repository&#34;&gt;&#xA;  repository&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#repository&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/torvalds/linux&#34;&gt;torvalds/linux&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/CesiumGS/cesium&#34;&gt;CesiumGS/cesium&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CesiumJS is a JavaScript library for creating 3D globes and 2D maps in a web browser without a plugin. It uses WebGL for hardware-accelerated graphics, and is cross-platform, cross-browser, and tuned for dynamic-data visualization.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh&#34;&gt;ohmyzsh/ohmyzsh&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Oh My Zsh is an open source, community-driven framework for managing your zsh configuration.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;follow&#34;&gt;&#xA;  follow&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#follow&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/oldratlee&#34;&gt;oldratlee&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>hiking</title>
      <link>/zh/post/life/hiking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/life/hiking/</guid>
      <description>&lt;h1 id=&#34;hiking&#34;&gt;&#xA;  hiking&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#hiking&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/FrS4G5cYvOb&#34;&gt;2024-10-13 金铜盆&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>hiking</title>
      <link>/zh/zh/post/life/hiking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/life/hiking/</guid>
      <description>&lt;h1 id=&#34;hiking&#34;&gt;&#xA;  hiking&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#hiking&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://strava.app.link/FrS4G5cYvOb&#34;&gt;2024-10-13 金铜盆&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>ios</title>
      <link>/zh/post/computer-science/ios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/computer-science/ios/</guid>
      <description>&lt;h1 id=&#34;ios&#34;&gt;&#xA;  ios&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ios&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/2314725&#34;&gt;一日一技：iOS抓包最简单方案&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;bark&#34;&gt;&#xA;  bark&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#bark&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Finb/Bark&#34;&gt;Finb/Bark&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Bark is a push notification tool app. It&amp;rsquo;s free, simple, and secure, leveraging APNs without draining device battery.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://bark.day.app/#/?id=bark&#34;&gt;document&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/MoshiCoCo/bark-java-sdk&#34;&gt;Bark-Java-SDK&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;day-one&#34;&gt;&#xA;  Day One&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#day-one&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;obsidian&#34;&gt;&#xA;  Obsidian&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#obsidian&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;ifttt&#34;&gt;&#xA;  IFTTT&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ifttt&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/81200&#34;&gt;3 个非常规 Day One 使用场景&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/25270&#34;&gt;触发你的智能生活：IFTTT 入门&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;rss&#34;&gt;&#xA;  RSS&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#rss&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Inoreader&lt;/li&gt;&#xA;&lt;li&gt;Feedly&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>ios</title>
      <link>/zh/zh/post/computer-science/ios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/computer-science/ios/</guid>
      <description>&lt;h1 id=&#34;ios&#34;&gt;&#xA;  ios&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ios&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/2314725&#34;&gt;一日一技：iOS抓包最简单方案&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;bark&#34;&gt;&#xA;  bark&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#bark&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Finb/Bark&#34;&gt;Finb/Bark&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Bark is a push notification tool app. It&amp;rsquo;s free, simple, and secure, leveraging APNs without draining device battery.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://bark.day.app/#/?id=bark&#34;&gt;document&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/MoshiCoCo/bark-java-sdk&#34;&gt;Bark-Java-SDK&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;day-one&#34;&gt;&#xA;  Day One&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#day-one&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;obsidian&#34;&gt;&#xA;  Obsidian&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#obsidian&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;ifttt&#34;&gt;&#xA;  IFTTT&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ifttt&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/81200&#34;&gt;3 个非常规 Day One 使用场景&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/25270&#34;&gt;触发你的智能生活：IFTTT 入门&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;rss&#34;&gt;&#xA;  RSS&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#rss&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Inoreader&lt;/li&gt;&#xA;&lt;li&gt;Feedly&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>job</title>
      <link>/zh/post/computer-science/job/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/computer-science/job/</guid>
      <description>&lt;h1 id=&#34;job&#34;&gt;&#xA;  job&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#job&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.0x08.org/posts/resume-for-graduates&#34;&gt;应届生的简历&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>job</title>
      <link>/zh/zh/post/computer-science/job/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/computer-science/job/</guid>
      <description>&lt;h1 id=&#34;job&#34;&gt;&#xA;  job&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#job&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.0x08.org/posts/resume-for-graduates&#34;&gt;应届生的简历&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>jvm</title>
      <link>/zh/post/computer-science/java/jvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/computer-science/java/jvm/</guid>
      <description>&lt;h1 id=&#34;jvm&#34;&gt;&#xA;  jvm&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#jvm&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>jvm</title>
      <link>/zh/zh/post/computer-science/java/jvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/computer-science/java/jvm/</guid>
      <description>&lt;h1 id=&#34;jvm&#34;&gt;&#xA;  jvm&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#jvm&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>life recommand</title>
      <link>/zh/post/life/life-recommend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/life/life-recommend/</guid>
      <description>&lt;h1 id=&#34;life-recommend&#34;&gt;&#xA;  life recommend&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#life-recommend&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://sspai.com&#34;&gt;sspai&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;数码相关内容，还有一些偏硬核的科普，技术文章&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;movies&#34;&gt;&#xA;  movies&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#movies&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;绝命毒师 Breaking Bad&lt;/li&gt;&#xA;&lt;li&gt;风骚律师 Better Call Saul&lt;/li&gt;&#xA;&lt;li&gt;权力的游戏&lt;/li&gt;&#xA;&lt;li&gt;灿烂人生&lt;/li&gt;&#xA;&lt;li&gt;无言的山丘&lt;/li&gt;&#xA;&lt;li&gt;人间的条件&lt;/li&gt;&#xA;&lt;li&gt;赤足小子&lt;/li&gt;&#xA;&lt;li&gt;婚姻生活&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;article&#34;&gt;&#xA;  article&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#article&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;互联网是人类历史的一段弯路吗&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/560147506/answer/2720369056?utm_psn=1841271155320811523&#34;&gt;每天通勤骑车60公里身体会不会累垮？&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;books&#34;&gt;&#xA;  books&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#books&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.douban.com/doubanapp/dispatch/book/25982198?dt_dapp=1&#34;&gt;社会心理学 戴维迈尔斯&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.douban.com/doubanapp/dispatch/book/4246032?dt_dapp=1&#34;&gt;西方哲学史讲演录 赵林&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.douban.com/doubanapp/dispatch/book/4864832?dt_dapp=1&#34;&gt;为什么学生不喜欢上学&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;送你一颗子弹 刘瑜&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;bilibili&#34;&gt;&#xA;  bilibili&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#bilibili&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;movies&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/XJ57NWi&#34;&gt;木鱼水心&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;质量很高，第一个关注的电影解说up&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/M4NgoLD&#34;&gt;电影广角镜&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;绝命毒师和风骚律师 解说的很棒&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;digital&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/eoVxkEw&#34;&gt;那岩KJMX&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/HpKb9dR&#34;&gt;科技美学&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;cycling&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/sf9PjEf&#34;&gt;道长说车&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/8htVZ72&#34;&gt;CLUB100&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/K9Mp7UB&#34;&gt;Contayu_Cycling&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;world&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/DvdVmLA&#34;&gt;Yooupi食途&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/luBswEi&#34;&gt;星球研究所&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;economy&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/Dkb1EvU&#34;&gt;小Lin说&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;software&#34;&gt;&#xA;  software&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#software&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;ios&#34;&gt;&#xA;  ios&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ios&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;a-Shell&lt;/li&gt;&#xA;&lt;li&gt;working copy&lt;/li&gt;&#xA;&lt;li&gt;Documents&lt;/li&gt;&#xA;&lt;li&gt;Shadowrocket&lt;/li&gt;&#xA;&lt;li&gt;Obsidian&lt;/li&gt;&#xA;&lt;li&gt;ServerCat&lt;/li&gt;&#xA;&lt;li&gt;Github&lt;/li&gt;&#xA;&lt;li&gt;搜狗输入法&lt;/li&gt;&#xA;&lt;li&gt;彩云天气&lt;/li&gt;&#xA;&lt;li&gt;Actions&lt;/li&gt;&#xA;&lt;li&gt;DataJar&lt;/li&gt;&#xA;&lt;li&gt;ShellFish&lt;/li&gt;&#xA;&lt;li&gt;nPlayer&lt;/li&gt;&#xA;&lt;li&gt;HashPhotos&lt;/li&gt;&#xA;&lt;li&gt;Soor&lt;/li&gt;&#xA;&lt;li&gt;Shortcuts&lt;/li&gt;&#xA;&lt;li&gt;小宇宙&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/59722&#34;&gt;让听播客回归简单——即刻团队新作「小宇宙」体验报告&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;mac&#34;&gt;&#xA;  mac&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mac&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;windows&#34;&gt;&#xA;  windows&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#windows&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;wallpaper&#34;&gt;&#xA;  wallpaper&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#wallpaper&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://4kwallpapers.com/&#34;&gt;4k wallpapers&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;philosophy&#34;&gt;&#xA;  philosophy&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#philosophy&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Philosophia 哲学社&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/8zBUQ2W6mEF4ocI7RuxCNQ&#34;&gt;2020-03-16 种族歧视错在哪儿&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;f1&#34;&gt;&#xA;  F1&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#f1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/93483&#34;&gt;指北集EP.01——简明Formula One观赛指北&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;motto&#34;&gt;&#xA;  motto&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#motto&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;you don&amp;rsquo;t give up, then there&amp;rsquo;s no limitation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>life recommand</title>
      <link>/zh/zh/post/life/life-recommend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/life/life-recommend/</guid>
      <description>&lt;h1 id=&#34;life-recommend&#34;&gt;&#xA;  life recommend&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#life-recommend&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://sspai.com&#34;&gt;sspai&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;数码相关内容，还有一些偏硬核的科普，技术文章&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;movies&#34;&gt;&#xA;  movies&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#movies&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;绝命毒师 Breaking Bad&lt;/li&gt;&#xA;&lt;li&gt;风骚律师 Better Call Saul&lt;/li&gt;&#xA;&lt;li&gt;权力的游戏&lt;/li&gt;&#xA;&lt;li&gt;灿烂人生&lt;/li&gt;&#xA;&lt;li&gt;无言的山丘&lt;/li&gt;&#xA;&lt;li&gt;人间的条件&lt;/li&gt;&#xA;&lt;li&gt;赤足小子&lt;/li&gt;&#xA;&lt;li&gt;婚姻生活&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;article&#34;&gt;&#xA;  article&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#article&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;互联网是人类历史的一段弯路吗&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/560147506/answer/2720369056?utm_psn=1841271155320811523&#34;&gt;每天通勤骑车60公里身体会不会累垮？&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;books&#34;&gt;&#xA;  books&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#books&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.douban.com/doubanapp/dispatch/book/25982198?dt_dapp=1&#34;&gt;社会心理学 戴维迈尔斯&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.douban.com/doubanapp/dispatch/book/4246032?dt_dapp=1&#34;&gt;西方哲学史讲演录 赵林&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.douban.com/doubanapp/dispatch/book/4864832?dt_dapp=1&#34;&gt;为什么学生不喜欢上学&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;送你一颗子弹 刘瑜&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;bilibili&#34;&gt;&#xA;  bilibili&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#bilibili&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;movies&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/XJ57NWi&#34;&gt;木鱼水心&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;质量很高，第一个关注的电影解说up&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/M4NgoLD&#34;&gt;电影广角镜&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;绝命毒师和风骚律师 解说的很棒&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;digital&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/eoVxkEw&#34;&gt;那岩KJMX&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/HpKb9dR&#34;&gt;科技美学&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;cycling&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/sf9PjEf&#34;&gt;道长说车&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/8htVZ72&#34;&gt;CLUB100&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/K9Mp7UB&#34;&gt;Contayu_Cycling&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;world&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/DvdVmLA&#34;&gt;Yooupi食途&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/luBswEi&#34;&gt;星球研究所&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;economy&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://b23.tv/Dkb1EvU&#34;&gt;小Lin说&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;software&#34;&gt;&#xA;  software&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#software&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;ios&#34;&gt;&#xA;  ios&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ios&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;a-Shell&lt;/li&gt;&#xA;&lt;li&gt;working copy&lt;/li&gt;&#xA;&lt;li&gt;Documents&lt;/li&gt;&#xA;&lt;li&gt;Shadowrocket&lt;/li&gt;&#xA;&lt;li&gt;Obsidian&lt;/li&gt;&#xA;&lt;li&gt;ServerCat&lt;/li&gt;&#xA;&lt;li&gt;Github&lt;/li&gt;&#xA;&lt;li&gt;搜狗输入法&lt;/li&gt;&#xA;&lt;li&gt;彩云天气&lt;/li&gt;&#xA;&lt;li&gt;Actions&lt;/li&gt;&#xA;&lt;li&gt;DataJar&lt;/li&gt;&#xA;&lt;li&gt;ShellFish&lt;/li&gt;&#xA;&lt;li&gt;nPlayer&lt;/li&gt;&#xA;&lt;li&gt;HashPhotos&lt;/li&gt;&#xA;&lt;li&gt;Soor&lt;/li&gt;&#xA;&lt;li&gt;Shortcuts&lt;/li&gt;&#xA;&lt;li&gt;小宇宙&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/59722&#34;&gt;让听播客回归简单——即刻团队新作「小宇宙」体验报告&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;mac&#34;&gt;&#xA;  mac&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mac&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;windows&#34;&gt;&#xA;  windows&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#windows&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;wallpaper&#34;&gt;&#xA;  wallpaper&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#wallpaper&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://4kwallpapers.com/&#34;&gt;4k wallpapers&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;philosophy&#34;&gt;&#xA;  philosophy&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#philosophy&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Philosophia 哲学社&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/8zBUQ2W6mEF4ocI7RuxCNQ&#34;&gt;2020-03-16 种族歧视错在哪儿&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;f1&#34;&gt;&#xA;  F1&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#f1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://sspai.com/post/93483&#34;&gt;指北集EP.01——简明Formula One观赛指北&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;motto&#34;&gt;&#xA;  motto&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#motto&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;you don&amp;rsquo;t give up, then there&amp;rsquo;s no limitation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>mac</title>
      <link>/zh/post/computer-science/mac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/computer-science/mac/</guid>
      <description>&lt;h1 id=&#34;mac&#34;&gt;&#xA;  mac&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mac&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;brew&#34;&gt;&#xA;  brew&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#brew&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;查看 brew 服务运行状态 &lt;code&gt;brew services list&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mysql&#34;&gt;&#xA;  mysql&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mysql&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;启动 &lt;code&gt;brew services start mysql@8.0&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;使用命令行连接 mysql &lt;code&gt;mysql -u root&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;reference&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/2433053&#34;&gt;Macbook通过brew安装mysql8.0&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mongodb&#34;&gt;&#xA;  mongodb&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mongodb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;mongodb 安装&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;brew tap mongodb/brew&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;brew update&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;brew install mongodb-community@8.0&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;启动 mongodb &lt;code&gt;brew services start mongodb-community@8.0&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;停止 mongodb &lt;code&gt;brew services stop mongodb-community@8.0&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;mongodb 配置文件位置 &lt;code&gt;vim /opt/homebrew/etc/mongod.conf&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;ffmpeg&#34;&gt;&#xA;  ffmpeg&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ffmpeg&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;安装 &lt;code&gt;brew install ffmpeg&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;postgresql&#34;&gt;&#xA;  postgresql&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#postgresql&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wiki.postgresql.org/wiki/Homebrew&#34;&gt;Homebrew 安装 postgresql&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;yt-dlp&#34;&gt;&#xA;  yt-dlp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#yt-dlp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;yt-dlp/yt-dlp&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;安装 &lt;code&gt;brew install yt-dlp&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp?tab=readme-ov-file#output-template&#34;&gt;output-template&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;yt-dlp -N 20 https://www.youtube.com/@xiaodaodalang --merge-output-format mp4&#xA;# 后台下载&#xA;nohup yt-dlp -N 20 https://www.youtube.com/@xiaodaodalang --merge-output-format mp4 &amp;amp;&#xA;# 加上日期前缀&#xA;yt-dlp -N 20 -o &amp;#34;%(upload_date&amp;gt;%Y-%m-%d)s-%(title)s.%(ext)s&amp;#34; https://www.youtube.com/@xiaodaodalang --merge-output-format mp4&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;player&#34;&gt;&#xA;  player&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#player&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/402743090&#34;&gt;Mac下最好的视频播放器&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://iina.io&#34;&gt;IINA&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;disk&#34;&gt;&#xA;  disk&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#disk&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.mac618.com/795.html#J_DLIPPCont&#34;&gt;DaisyDisk&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://daisydiskapp.com/manual?source=HiddenSpace&amp;amp;appVersion=4.26.1&amp;amp;lang=en&amp;amp;subtopic=StillHiddenSpace&amp;amp;osVersion=14.6.0&amp;amp;topic=HiddenSpace&amp;amp;appEdition=Standard&#34;&gt;Hidden space 隐藏空间&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;如何用命令弹出硬盘&#xA;&lt;ul&gt;&#xA;&lt;li&gt;查询硬盘挂载路径 &lt;code&gt;df -h&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;取消挂载 &lt;code&gt;diskutil unmount xxxxx&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;transmit 文件传输工具&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;把一个java程序配置为一个服务&#34;&gt;&#xA;  把一个java程序配置为一个服务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8a%8a%e4%b8%80%e4%b8%aajava%e7%a8%8b%e5%ba%8f%e9%85%8d%e7%bd%ae%e4%b8%ba%e4%b8%80%e4%b8%aa%e6%9c%8d%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;在 macOS 中将 Java 程序配置为服务，可以通过创建一个 LaunchDaemon 或 LaunchAgent 来实现。这里我们以创建一个 LaunchDaemon 为例来说明如何操作。&lt;/p&gt;</description>
    </item>
    <item>
      <title>mac</title>
      <link>/zh/zh/post/computer-science/mac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/computer-science/mac/</guid>
      <description>&lt;h1 id=&#34;mac&#34;&gt;&#xA;  mac&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mac&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;brew&#34;&gt;&#xA;  brew&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#brew&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;查看 brew 服务运行状态 &lt;code&gt;brew services list&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mysql&#34;&gt;&#xA;  mysql&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mysql&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;启动 &lt;code&gt;brew services start mysql@8.0&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;使用命令行连接 mysql &lt;code&gt;mysql -u root&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;reference&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/2433053&#34;&gt;Macbook通过brew安装mysql8.0&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mongodb&#34;&gt;&#xA;  mongodb&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mongodb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;mongodb 安装&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;brew tap mongodb/brew&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;brew update&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;brew install mongodb-community@8.0&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;启动 mongodb &lt;code&gt;brew services start mongodb-community@8.0&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;停止 mongodb &lt;code&gt;brew services stop mongodb-community@8.0&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;mongodb 配置文件位置 &lt;code&gt;vim /opt/homebrew/etc/mongod.conf&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;ffmpeg&#34;&gt;&#xA;  ffmpeg&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ffmpeg&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;安装 &lt;code&gt;brew install ffmpeg&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;postgresql&#34;&gt;&#xA;  postgresql&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#postgresql&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wiki.postgresql.org/wiki/Homebrew&#34;&gt;Homebrew 安装 postgresql&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;yt-dlp&#34;&gt;&#xA;  yt-dlp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#yt-dlp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;yt-dlp/yt-dlp&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;安装 &lt;code&gt;brew install yt-dlp&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp?tab=readme-ov-file#output-template&#34;&gt;output-template&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;yt-dlp -N 20 https://www.youtube.com/@xiaodaodalang --merge-output-format mp4&#xA;# 后台下载&#xA;nohup yt-dlp -N 20 https://www.youtube.com/@xiaodaodalang --merge-output-format mp4 &amp;amp;&#xA;# 加上日期前缀&#xA;yt-dlp -N 20 -o &amp;#34;%(upload_date&amp;gt;%Y-%m-%d)s-%(title)s.%(ext)s&amp;#34; https://www.youtube.com/@xiaodaodalang --merge-output-format mp4&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;player&#34;&gt;&#xA;  player&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#player&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/402743090&#34;&gt;Mac下最好的视频播放器&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://iina.io&#34;&gt;IINA&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;disk&#34;&gt;&#xA;  disk&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#disk&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.mac618.com/795.html#J_DLIPPCont&#34;&gt;DaisyDisk&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://daisydiskapp.com/manual?source=HiddenSpace&amp;amp;appVersion=4.26.1&amp;amp;lang=en&amp;amp;subtopic=StillHiddenSpace&amp;amp;osVersion=14.6.0&amp;amp;topic=HiddenSpace&amp;amp;appEdition=Standard&#34;&gt;Hidden space 隐藏空间&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;如何用命令弹出硬盘&#xA;&lt;ul&gt;&#xA;&lt;li&gt;查询硬盘挂载路径 &lt;code&gt;df -h&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;取消挂载 &lt;code&gt;diskutil unmount xxxxx&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;transmit 文件传输工具&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;把一个java程序配置为一个服务&#34;&gt;&#xA;  把一个java程序配置为一个服务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8a%8a%e4%b8%80%e4%b8%aajava%e7%a8%8b%e5%ba%8f%e9%85%8d%e7%bd%ae%e4%b8%ba%e4%b8%80%e4%b8%aa%e6%9c%8d%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;在 macOS 中将 Java 程序配置为服务，可以通过创建一个 LaunchDaemon 或 LaunchAgent 来实现。这里我们以创建一个 LaunchDaemon 为例来说明如何操作。&lt;/p&gt;</description>
    </item>
    <item>
      <title>other learning</title>
      <link>/zh/post/life/learning-others-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/life/learning-others-log/</guid>
      <description>&lt;h1 id=&#34;other-learning&#34;&gt;&#xA;  other learning&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#other-learning&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;2025-01-07&#34;&gt;&#xA;  2025-01-07&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-07&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;美国困局新右翼-的兴起与挑战&#34;&gt;&#xA;  美国困局：“新右翼” 的兴起与挑战&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%be%8e%e5%9b%bd%e5%9b%b0%e5%b1%80%e6%96%b0%e5%8f%b3%e7%bf%bc-%e7%9a%84%e5%85%b4%e8%b5%b7%e4%b8%8e%e6%8c%91%e6%88%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第1章 2025-01-07&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第2章&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 (2025-01-10)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 (2025-01-10)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 (2025-01-10)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 (2025-01-10)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 (2025-01-10)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第3章&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 (2025-01-11)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 (2025-01-11)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 (2025-01-11)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 (2025-01-11)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第4章&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第5章&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第6章&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第7章&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第8章&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第9章&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2025-01-04&#34;&gt;&#xA;  2025-01-04&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-04&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;清华韩秀云精品课第一季64集&#34;&gt;&#xA;  清华韩秀云精品课（第一季，64集）&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b8%85%e5%8d%8e%e9%9f%a9%e7%a7%80%e4%ba%91%e7%b2%be%e5%93%81%e8%af%be%e7%ac%ac%e4%b8%80%e5%ad%a364%e9%9b%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://appitoitaxh8625.h5.xiaoeknow.com/p/course/column/p_60122dabe4b0d0af0d905913?type=3&#34;&gt;清华韩秀云精品课（第一季，64集）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-第一期国外宏观经济形势&#34;&gt;&#xA;  ✅ 第一期：国外宏观经济形势&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e7%ac%ac%e4%b8%80%e6%9c%9f%e5%9b%bd%e5%a4%96%e5%ae%8f%e8%a7%82%e7%bb%8f%e6%b5%8e%e5%bd%a2%e5%8a%bf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 美国央行大放水 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 负债率的欧洲和日本 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 政府发钱刺激经济 2025-01-04&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-第二期通胀来了该如何配置资产&#34;&gt;&#xA;  ✅ 第二期：通胀来了，该如何配置资产&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e7%ac%ac%e4%ba%8c%e6%9c%9f%e9%80%9a%e8%83%80%e6%9d%a5%e4%ba%86%e8%af%a5%e5%a6%82%e4%bd%95%e9%85%8d%e7%bd%ae%e8%b5%84%e4%ba%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 通胀来了怎么办 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 如何配置你的资产？2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 投资房产考虑什么？2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 投资黄金有必要吗？2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 炒股要注意什么？2025-01-06&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-第三期我国宏观政策走向&#34;&gt;&#xA;  ✅ 第三期：我国宏观政策走向&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e7%ac%ac%e4%b8%89%e6%9c%9f%e6%88%91%e5%9b%bd%e5%ae%8f%e8%a7%82%e6%94%bf%e7%ad%96%e8%b5%b0%e5%90%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 政府救市与共同富裕 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 2022年政策与行业机会 2025-01-07&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-第四期黄金&#34;&gt;&#xA;  ✅ 第四期：黄金&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e7%ac%ac%e5%9b%9b%e6%9c%9f%e9%bb%84%e9%87%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11 黄金的前世今生 2025-01-07&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12 美元和黄金挂钩与脱钩 2025-01-07&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13 黄金的避险功能 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14 全世界的金库在哪里 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15 投资黄金该注意什么 2025-01-08&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-第五期石油&#34;&gt;&#xA;  ✅ 第五期：石油&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e7%ac%ac%e4%ba%94%e6%9c%9f%e7%9f%b3%e6%b2%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16 石油的前世今生 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17 洛克菲勒与标准石油 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18 美国石油反垄断 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 19 油价为何总在波动 2025-01-11&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 20 欧佩克的转变 2025-01-11&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 21 石油的用途 2025-01-11&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 22 油价为何是负的 2025-01-12&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 23 什么是石油期货的 2025-01-12&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-第六期楼市&#34;&gt;&#xA;  ✅ 第六期：楼市&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e7%ac%ac%e5%85%ad%e6%9c%9f%e6%a5%bc%e5%b8%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 24 房价的成长史的 2025-01-12&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 25 楼市中看不见的手的 2025-01-13&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 26 市场决定资源配置的 2025-01-13&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 27 买房要选稀缺的 2025-01-13&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 28 买住宅怎么选 2025-01-15&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 29 买商铺和写字楼 2025-01-15&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 30 买房看机会成本 2025-01-15&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 31 买房要注意几件事 2025-01-16&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 32 买房还是租房好 2025-01-16&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 33 政府何为要调控楼市 2025-01-16&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 34 楼市调控还会继续吗？ 2025-01-17&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 35 房地产税会退出吗？ 2025-01-17&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 36 房地产税推出后，房价会下跌吗？ 2025-01-17&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 37 买房防止变成资产 2025-01-19&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 38 警惕房地产泡沫  2025-01-19&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 39 全球楼市涨跌互见  2025-01-19&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第七期股市&#34;&gt;&#xA;  第七期：股市&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%83%e6%9c%9f%e8%82%a1%e5%b8%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 40 炒股要懂经济学 2025-01-20&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 41 股票是如何诞生的？ 2025-01-20&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 42 东印度公司的第一张股票 2025-01-20&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 43 英美为什么发股票 2025-01-21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 44 荷兰证券交易所的诞生 2025-01-21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 45 纽约证券交易所的由来 2025-01-21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 46 道琼斯指数的故事 2025-01-21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 47 股票价格与股价指数 2025-01-21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 48 股市的投资理念 2025-01-21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 49 炒股应该注意什么？2025-02-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 50 参与股市的几种方式 2025-02-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 51 郁金香泡沫 2025-02-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 52 密西西比泡沫 2025-02-10&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 53 南海泡沫 2025-02-10&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 54 美国1929年股灾 2025-02-10&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 55 中国2007年股市暴涨&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 56 中国2015年股灾&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 57 教你判断股市趋势&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第八期汇市&#34;&gt;&#xA;  第八期：汇市&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e5%85%ab%e6%9c%9f%e6%b1%87%e5%b8%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 58 汇率的基本知识&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 59 人民币汇率&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 60 美元的霸权&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 61 欧元的诞生&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 62 人民币国际化&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>other learning</title>
      <link>/zh/zh/post/life/learning-others-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/life/learning-others-log/</guid>
      <description>&lt;h1 id=&#34;other-learning&#34;&gt;&#xA;  other learning&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#other-learning&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;2025-01-07&#34;&gt;&#xA;  2025-01-07&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-07&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;美国困局新右翼-的兴起与挑战&#34;&gt;&#xA;  美国困局：“新右翼” 的兴起与挑战&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%be%8e%e5%9b%bd%e5%9b%b0%e5%b1%80%e6%96%b0%e5%8f%b3%e7%bf%bc-%e7%9a%84%e5%85%b4%e8%b5%b7%e4%b8%8e%e6%8c%91%e6%88%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第1章 2025-01-07&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第2章&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 (2025-01-10)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 (2025-01-10)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 (2025-01-10)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 (2025-01-10)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 (2025-01-10)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第3章&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 (2025-01-11)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 (2025-01-11)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 (2025-01-11)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 (2025-01-11)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第4章&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第5章&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第6章&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第7章&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第8章&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 第9章&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2025-01-04&#34;&gt;&#xA;  2025-01-04&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-04&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;清华韩秀云精品课第一季64集&#34;&gt;&#xA;  清华韩秀云精品课（第一季，64集）&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b8%85%e5%8d%8e%e9%9f%a9%e7%a7%80%e4%ba%91%e7%b2%be%e5%93%81%e8%af%be%e7%ac%ac%e4%b8%80%e5%ad%a364%e9%9b%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://appitoitaxh8625.h5.xiaoeknow.com/p/course/column/p_60122dabe4b0d0af0d905913?type=3&#34;&gt;清华韩秀云精品课（第一季，64集）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-第一期国外宏观经济形势&#34;&gt;&#xA;  ✅ 第一期：国外宏观经济形势&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e7%ac%ac%e4%b8%80%e6%9c%9f%e5%9b%bd%e5%a4%96%e5%ae%8f%e8%a7%82%e7%bb%8f%e6%b5%8e%e5%bd%a2%e5%8a%bf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1 美国央行大放水 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2 负债率的欧洲和日本 2025-01-04&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 3 政府发钱刺激经济 2025-01-04&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-第二期通胀来了该如何配置资产&#34;&gt;&#xA;  ✅ 第二期：通胀来了，该如何配置资产&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e7%ac%ac%e4%ba%8c%e6%9c%9f%e9%80%9a%e8%83%80%e6%9d%a5%e4%ba%86%e8%af%a5%e5%a6%82%e4%bd%95%e9%85%8d%e7%bd%ae%e8%b5%84%e4%ba%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 4 通胀来了怎么办 2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 5 如何配置你的资产？2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6 投资房产考虑什么？2025-01-05&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 7 投资黄金有必要吗？2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 8 炒股要注意什么？2025-01-06&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-第三期我国宏观政策走向&#34;&gt;&#xA;  ✅ 第三期：我国宏观政策走向&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e7%ac%ac%e4%b8%89%e6%9c%9f%e6%88%91%e5%9b%bd%e5%ae%8f%e8%a7%82%e6%94%bf%e7%ad%96%e8%b5%b0%e5%90%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 9 政府救市与共同富裕 2025-01-06&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 10 2022年政策与行业机会 2025-01-07&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-第四期黄金&#34;&gt;&#xA;  ✅ 第四期：黄金&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e7%ac%ac%e5%9b%9b%e6%9c%9f%e9%bb%84%e9%87%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 11 黄金的前世今生 2025-01-07&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 12 美元和黄金挂钩与脱钩 2025-01-07&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 13 黄金的避险功能 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 14 全世界的金库在哪里 2025-01-08&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 15 投资黄金该注意什么 2025-01-08&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-第五期石油&#34;&gt;&#xA;  ✅ 第五期：石油&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e7%ac%ac%e4%ba%94%e6%9c%9f%e7%9f%b3%e6%b2%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 16 石油的前世今生 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 17 洛克菲勒与标准石油 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 18 美国石油反垄断 2025-01-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 19 油价为何总在波动 2025-01-11&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 20 欧佩克的转变 2025-01-11&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 21 石油的用途 2025-01-11&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 22 油价为何是负的 2025-01-12&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 23 什么是石油期货的 2025-01-12&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-第六期楼市&#34;&gt;&#xA;  ✅ 第六期：楼市&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e7%ac%ac%e5%85%ad%e6%9c%9f%e6%a5%bc%e5%b8%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 24 房价的成长史的 2025-01-12&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 25 楼市中看不见的手的 2025-01-13&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 26 市场决定资源配置的 2025-01-13&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 27 买房要选稀缺的 2025-01-13&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 28 买住宅怎么选 2025-01-15&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 29 买商铺和写字楼 2025-01-15&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 30 买房看机会成本 2025-01-15&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 31 买房要注意几件事 2025-01-16&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 32 买房还是租房好 2025-01-16&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 33 政府何为要调控楼市 2025-01-16&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 34 楼市调控还会继续吗？ 2025-01-17&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 35 房地产税会退出吗？ 2025-01-17&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 36 房地产税推出后，房价会下跌吗？ 2025-01-17&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 37 买房防止变成资产 2025-01-19&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 38 警惕房地产泡沫  2025-01-19&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 39 全球楼市涨跌互见  2025-01-19&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第七期股市&#34;&gt;&#xA;  第七期：股市&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%83%e6%9c%9f%e8%82%a1%e5%b8%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 40 炒股要懂经济学 2025-01-20&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 41 股票是如何诞生的？ 2025-01-20&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 42 东印度公司的第一张股票 2025-01-20&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 43 英美为什么发股票 2025-01-21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 44 荷兰证券交易所的诞生 2025-01-21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 45 纽约证券交易所的由来 2025-01-21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 46 道琼斯指数的故事 2025-01-21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 47 股票价格与股价指数 2025-01-21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 48 股市的投资理念 2025-01-21&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 49 炒股应该注意什么？2025-02-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 50 参与股市的几种方式 2025-02-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 51 郁金香泡沫 2025-02-09&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 52 密西西比泡沫 2025-02-10&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 53 南海泡沫 2025-02-10&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 54 美国1929年股灾 2025-02-10&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 55 中国2007年股市暴涨&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 56 中国2015年股灾&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 57 教你判断股市趋势&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;第八期汇市&#34;&gt;&#xA;  第八期：汇市&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e5%85%ab%e6%9c%9f%e6%b1%87%e5%b8%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 58 汇率的基本知识&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 59 人民币汇率&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 60 美元的霸权&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 61 欧元的诞生&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 62 人民币国际化&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>podcast</title>
      <link>/zh/post/life/podcast/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/life/podcast/</guid>
      <description>&lt;h1 id=&#34;podcast&#34;&gt;&#xA;  podcast&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#podcast&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;小宇宙&#34;&gt;&#xA;  小宇宙&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b0%8f%e5%ae%87%e5%ae%99&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.xiaoyuzhoufm.com/podcast/65dcb1addaf4f3db3e5378d0&#34;&gt;码农姐妹&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.xiaoyuzhoufm.com/podcast/665f102b63c334a2fb548b92&#34;&gt;经济新闻每日速递&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.xiaoyuzhoufm.com/podcast/65aa24db7a25782e57f796c9&#34;&gt;纵横说&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>podcast</title>
      <link>/zh/zh/post/life/podcast/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/life/podcast/</guid>
      <description>&lt;h1 id=&#34;podcast&#34;&gt;&#xA;  podcast&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#podcast&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;小宇宙&#34;&gt;&#xA;  小宇宙&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b0%8f%e5%ae%87%e5%ae%99&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.xiaoyuzhoufm.com/podcast/65dcb1addaf4f3db3e5378d0&#34;&gt;码农姐妹&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.xiaoyuzhoufm.com/podcast/665f102b63c334a2fb548b92&#34;&gt;经济新闻每日速递&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.xiaoyuzhoufm.com/podcast/65aa24db7a25782e57f796c9&#34;&gt;纵横说&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>politics</title>
      <link>/zh/post/life/politics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/life/politics/</guid>
      <description>&lt;h1 id=&#34;politics&#34;&gt;&#xA;  politics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#politics&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;茶党&#34;&gt;&#xA;  茶党&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%8c%b6%e5%85%9a&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&amp;ldquo;茶党&amp;rdquo;（Tea Party）通常指的是美国的一个政治运动，这个运动始于2009年，主要由保守派共和党支持者组成，强调减少政府开支、降低税收、限制政府权力以及遵守美国宪法。茶党的名字来源于1773年的波士顿茶叶事件，这是一个反对英国殖民统治和高税收的历史事件，象征着对政府过度干预的抗议。&lt;/p&gt;&#xA;&lt;p&gt;茶党成员经常组织示威活动，尤其是在经济政策和财政责任方面。他们在2010年的中期选举中对美国政治产生了显著影响，支持了多位共和党候选人的当选，这些候选人随后在美国国会中代表了更加保守的立场。&lt;/p&gt;&#xA;&lt;p&gt;随着时间的发展，茶党的影响力有所减弱，但它仍然是美国政治中一个重要的保守力量。如果你有关于茶党的更具体问题，欢迎继续提问。&lt;/p&gt;&#xA;&lt;h2 id=&#34;茶党和共和党建制派的区别是什么&#34;&gt;&#xA;  茶党和共和党建制派的区别是什么&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%8c%b6%e5%85%9a%e5%92%8c%e5%85%b1%e5%92%8c%e5%85%9a%e5%bb%ba%e5%88%b6%e6%b4%be%e7%9a%84%e5%8c%ba%e5%88%ab%e6%98%af%e4%bb%80%e4%b9%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;茶党和共和党建制派是美国共和党内两个不同的政治派别，它们在政治立场、策略和目标上存在一些显著差异：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;政治立场&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;茶党&lt;/strong&gt;：茶党通常被视为共和党内的激进派，强调极端保守的经济政策，比如大幅减税、削减政府开支、反对政府干预市场、减少债务和赤字。此外，茶党成员往往强烈反对奥巴马政府时期的医疗保健改革（即“奥巴马医改”）等政策。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;共和党建制派&lt;/strong&gt;：相比之下，建制派共和党人虽然也支持保守政策，但他们的立场相对温和，愿意与民主党合作以实现政治目标。建制派更倾向于维护共和党的传统利益，包括与大企业和精英阶层的关系。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;策略和方法&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;茶党&lt;/strong&gt;：茶党成员倾向于采取更为激进的策略，包括组织大规模抗议活动、支持极端保守的候选人、反对妥协。他们通常认为现有的政治体系已经腐败，需要彻底改革。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;共和党建制派&lt;/strong&gt;：建制派共和党人更倾向于通过传统政治渠道实现目标，如立法谈判、建立联盟和政治筹款。他们更注重保持共和党的整体稳定和长期利益。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;目标&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;茶党&lt;/strong&gt;：茶党的目标是推动共和党向更加保守的方向发展，减少政府规模和干预，保护个人自由和财产权。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;共和党建制派&lt;/strong&gt;：建制派的目标是保持共和党的主流地位，通过务实的政治策略赢得选举，维护共和党的长期利益和权力。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;支持者基础&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;茶党&lt;/strong&gt;：茶党的支持者通常是中下层中产阶级，他们对经济困境和政府过度干预感到不满，希望通过政治行动表达自己的诉求。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;共和党建制派&lt;/strong&gt;：建制派的支持者更多来自大企业和精英阶层，他们希望通过共和党的政策维护自身的经济利益。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;总结来说，茶党和共和党建制派在政治立场、策略和目标上存在明显的差异，茶党更激进、更强调基层动员，而建制派则更温和、更注重政治稳定和长期利益。&lt;/p&gt;</description>
    </item>
    <item>
      <title>politics</title>
      <link>/zh/zh/post/life/politics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/life/politics/</guid>
      <description>&lt;h1 id=&#34;politics&#34;&gt;&#xA;  politics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#politics&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;茶党&#34;&gt;&#xA;  茶党&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%8c%b6%e5%85%9a&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&amp;ldquo;茶党&amp;rdquo;（Tea Party）通常指的是美国的一个政治运动，这个运动始于2009年，主要由保守派共和党支持者组成，强调减少政府开支、降低税收、限制政府权力以及遵守美国宪法。茶党的名字来源于1773年的波士顿茶叶事件，这是一个反对英国殖民统治和高税收的历史事件，象征着对政府过度干预的抗议。&lt;/p&gt;&#xA;&lt;p&gt;茶党成员经常组织示威活动，尤其是在经济政策和财政责任方面。他们在2010年的中期选举中对美国政治产生了显著影响，支持了多位共和党候选人的当选，这些候选人随后在美国国会中代表了更加保守的立场。&lt;/p&gt;&#xA;&lt;p&gt;随着时间的发展，茶党的影响力有所减弱，但它仍然是美国政治中一个重要的保守力量。如果你有关于茶党的更具体问题，欢迎继续提问。&lt;/p&gt;&#xA;&lt;h2 id=&#34;茶党和共和党建制派的区别是什么&#34;&gt;&#xA;  茶党和共和党建制派的区别是什么&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%8c%b6%e5%85%9a%e5%92%8c%e5%85%b1%e5%92%8c%e5%85%9a%e5%bb%ba%e5%88%b6%e6%b4%be%e7%9a%84%e5%8c%ba%e5%88%ab%e6%98%af%e4%bb%80%e4%b9%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;茶党和共和党建制派是美国共和党内两个不同的政治派别，它们在政治立场、策略和目标上存在一些显著差异：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;政治立场&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;茶党&lt;/strong&gt;：茶党通常被视为共和党内的激进派，强调极端保守的经济政策，比如大幅减税、削减政府开支、反对政府干预市场、减少债务和赤字。此外，茶党成员往往强烈反对奥巴马政府时期的医疗保健改革（即“奥巴马医改”）等政策。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;共和党建制派&lt;/strong&gt;：相比之下，建制派共和党人虽然也支持保守政策，但他们的立场相对温和，愿意与民主党合作以实现政治目标。建制派更倾向于维护共和党的传统利益，包括与大企业和精英阶层的关系。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;策略和方法&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;茶党&lt;/strong&gt;：茶党成员倾向于采取更为激进的策略，包括组织大规模抗议活动、支持极端保守的候选人、反对妥协。他们通常认为现有的政治体系已经腐败，需要彻底改革。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;共和党建制派&lt;/strong&gt;：建制派共和党人更倾向于通过传统政治渠道实现目标，如立法谈判、建立联盟和政治筹款。他们更注重保持共和党的整体稳定和长期利益。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;目标&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;茶党&lt;/strong&gt;：茶党的目标是推动共和党向更加保守的方向发展，减少政府规模和干预，保护个人自由和财产权。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;共和党建制派&lt;/strong&gt;：建制派的目标是保持共和党的主流地位，通过务实的政治策略赢得选举，维护共和党的长期利益和权力。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;支持者基础&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;茶党&lt;/strong&gt;：茶党的支持者通常是中下层中产阶级，他们对经济困境和政府过度干预感到不满，希望通过政治行动表达自己的诉求。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;共和党建制派&lt;/strong&gt;：建制派的支持者更多来自大企业和精英阶层，他们希望通过共和党的政策维护自身的经济利益。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;总结来说，茶党和共和党建制派在政治立场、策略和目标上存在明显的差异，茶党更激进、更强调基层动员，而建制派则更温和、更注重政治稳定和长期利益。&lt;/p&gt;</description>
    </item>
    <item>
      <title>raspberry pi</title>
      <link>/zh/post/computer-science/raspberrypi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/computer-science/raspberrypi/</guid>
      <description>&lt;h1 id=&#34;raspberry-pi&#34;&gt;&#xA;  raspberry pi&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#raspberry-pi&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;reference&#34;&gt;&#xA;  reference&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#reference&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pidoc.cn&#34;&gt;树莓派文档&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;clash&#34;&gt;&#xA;  clash&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#clash&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;reference&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.v2ex.com/t/877527&#34;&gt;为什么全局代理后， CMD 依然 Ping 不通 Google？&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://mritd.com/2022/02/06/clash-tproxy/&#34;&gt;树莓派 Clash 透明代理(TProxy)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cherysunzhang.com/2020/05/deploy-clash-as-transparent-proxy-on-raspberry-pi/&#34;&gt;在 Raspberry Pi 上运行 Clash 作为透明代理&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://atlassc.net/2023/07/01/fixing-tun-mode-in-clash-the-essential-dns-configuration-guide&#34;&gt;解决 Clash Meta 中TUN模式无法上网的问题：正确配置DNS设置&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/frdevolcqzyxynjds/article/details/120123906&#34;&gt;解决 树莓派ping: baidu.com: 域名解析暂时失败&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.panda74.fun/blog/practice/raspi/clash&#34;&gt;树莓派安装clash，实现科学上网&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cherysunzhang.com/2020/05/deploy-clash-as-transparent-proxy-on-raspberry-pi/&#34;&gt;在 Raspberry Pi 上运行 Clash 作为透明代理&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://yacd.haishan.me&#34;&gt;http://yacd.haishan.me&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;yt-dlp&#34;&gt;&#xA;  yt-dlp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#yt-dlp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;使用这个工具，可以下载 youtube 视频&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;后台下载命令&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;nohup yt-dlp -N 20 {{video_url}} --merge-output-format mp4 &amp;amp;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;实时查看后台下载进度 &lt;code&gt;tail -f nohup.out&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;停止下载&#xA;&lt;ul&gt;&#xA;&lt;li&gt;查询后台进程号 &lt;code&gt;ps -aux | grep yt-dlp&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;杀死进程 &lt;code&gt;kill -9 {{进程号}}&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;tomcat&#34;&gt;&#xA;  tomcat&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tomcat&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/aeolian/p/15306739.html&#34;&gt;树莓派安装Tomcat&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.36/bin/apache-tomcat-9.0.36.tar.gz&#xA;tar zxvf apache-tomcat-9.0.36.tar.gz&#xA;&#xA;cd ~/apache-tomcat-9.0.36/bin&#xA;sudo ./startup.sh&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;dd&#34;&gt;&#xA;  dd&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#dd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;dd&lt;/code&gt; 命令是一个非常强大的工具，可以用来复制和转换文件。通过创建一个临时文件并测量其读写速度，可以测试存储介质的性能。&lt;/p&gt;</description>
    </item>
    <item>
      <title>raspberry pi</title>
      <link>/zh/zh/post/computer-science/raspberrypi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/computer-science/raspberrypi/</guid>
      <description>&lt;h1 id=&#34;raspberry-pi&#34;&gt;&#xA;  raspberry pi&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#raspberry-pi&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;reference&#34;&gt;&#xA;  reference&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#reference&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pidoc.cn&#34;&gt;树莓派文档&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;clash&#34;&gt;&#xA;  clash&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#clash&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;reference&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.v2ex.com/t/877527&#34;&gt;为什么全局代理后， CMD 依然 Ping 不通 Google？&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://mritd.com/2022/02/06/clash-tproxy/&#34;&gt;树莓派 Clash 透明代理(TProxy)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cherysunzhang.com/2020/05/deploy-clash-as-transparent-proxy-on-raspberry-pi/&#34;&gt;在 Raspberry Pi 上运行 Clash 作为透明代理&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://atlassc.net/2023/07/01/fixing-tun-mode-in-clash-the-essential-dns-configuration-guide&#34;&gt;解决 Clash Meta 中TUN模式无法上网的问题：正确配置DNS设置&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/frdevolcqzyxynjds/article/details/120123906&#34;&gt;解决 树莓派ping: baidu.com: 域名解析暂时失败&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.panda74.fun/blog/practice/raspi/clash&#34;&gt;树莓派安装clash，实现科学上网&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cherysunzhang.com/2020/05/deploy-clash-as-transparent-proxy-on-raspberry-pi/&#34;&gt;在 Raspberry Pi 上运行 Clash 作为透明代理&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://yacd.haishan.me&#34;&gt;http://yacd.haishan.me&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;yt-dlp&#34;&gt;&#xA;  yt-dlp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#yt-dlp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;使用这个工具，可以下载 youtube 视频&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;后台下载命令&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;nohup yt-dlp -N 20 {{video_url}} --merge-output-format mp4 &amp;amp;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;实时查看后台下载进度 &lt;code&gt;tail -f nohup.out&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;停止下载&#xA;&lt;ul&gt;&#xA;&lt;li&gt;查询后台进程号 &lt;code&gt;ps -aux | grep yt-dlp&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;杀死进程 &lt;code&gt;kill -9 {{进程号}}&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;tomcat&#34;&gt;&#xA;  tomcat&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tomcat&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/aeolian/p/15306739.html&#34;&gt;树莓派安装Tomcat&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.36/bin/apache-tomcat-9.0.36.tar.gz&#xA;tar zxvf apache-tomcat-9.0.36.tar.gz&#xA;&#xA;cd ~/apache-tomcat-9.0.36/bin&#xA;sudo ./startup.sh&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;dd&#34;&gt;&#xA;  dd&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#dd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;dd&lt;/code&gt; 命令是一个非常强大的工具，可以用来复制和转换文件。通过创建一个临时文件并测量其读写速度，可以测试存储介质的性能。&lt;/p&gt;</description>
    </item>
    <item>
      <title>security</title>
      <link>/zh/post/computer-science/security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/computer-science/security/</guid>
      <description>&lt;h1 id=&#34;security&#34;&gt;&#xA;  security&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#security&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;man-in-the-middle-attack-中间人攻击&#34;&gt;&#xA;  man-in-the-middle attack 中间人攻击&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#man-in-the-middle-attack-%e4%b8%ad%e9%97%b4%e4%ba%ba%e6%94%bb%e5%87%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;SSL Pinning is a technique we use on the client side to avoid a man-in-the-middle attack by validating the server certificates. The developers embed (or pin) a list of trustful certificates in the client application during development and use them to compare against the server certificates during runtime.&lt;/p&gt;&#xA;&lt;p&gt;If there is a mismatch between the server and the local copy of certificates, the connection will be disrupted, and no further user data will be sent to that server. This enforcement ensures that user devices communicate only with dedicated, trustful servers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>security</title>
      <link>/zh/zh/post/computer-science/security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/computer-science/security/</guid>
      <description>&lt;h1 id=&#34;security&#34;&gt;&#xA;  security&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#security&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;man-in-the-middle-attack-中间人攻击&#34;&gt;&#xA;  man-in-the-middle attack 中间人攻击&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#man-in-the-middle-attack-%e4%b8%ad%e9%97%b4%e4%ba%ba%e6%94%bb%e5%87%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;SSL Pinning is a technique we use on the client side to avoid a man-in-the-middle attack by validating the server certificates. The developers embed (or pin) a list of trustful certificates in the client application during development and use them to compare against the server certificates during runtime.&lt;/p&gt;&#xA;&lt;p&gt;If there is a mismatch between the server and the local copy of certificates, the connection will be disrupted, and no further user data will be sent to that server. This enforcement ensures that user devices communicate only with dedicated, trustful servers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>vue</title>
      <link>/zh/post/computer-science/vue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/computer-science/vue/</guid>
      <description>&lt;h1 id=&#34;vue&#34;&gt;&#xA;  vue&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#vue&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vuejs.org/&#34;&gt;vuejs.org&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cn.vuejs.org/guide/quick-start&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.runoob.com/vue2/vue-tutorial.html&#34;&gt;vue2 教程&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Vue 2.0 在 2023 年 12 月 31 日停止更新&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.runoob.com/vue3/vue3-tutorial.html&#34;&gt;vue3 教程&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;快速上手&#34;&gt;&#xA;  快速上手&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bf%ab%e9%80%9f%e4%b8%8a%e6%89%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;安装 &lt;code&gt;node.js&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;使用 brew 安装 &lt;code&gt;brew install node&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;检查 node 是否安装成功&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;node -v&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;npm -v&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;创建 vue 项目 &lt;code&gt;npm create vue@latest&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;cd my-vue-project&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;修改镜像源&#xA;&lt;ul&gt;&#xA;&lt;li&gt;reference&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/shenhuanjie/p/18428209/npm-yarn-pnpm-latest-domestic-mirror-portion-source-setting-and-common-problems-solve-zyb4mp&#34;&gt;npm、yarn、pnpm 最新国内镜像源设置和常见问题解决&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;npm run dev&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Local &lt;code&gt;http://localhost:5173&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Vue DevTools &lt;code&gt;http://localhost:5173/__devtools__/&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;reference&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tutorials.tinkink.net/zh-hans/mac/install-nodejs.html&#34;&gt;如何在 macOS 上安装 Node.js&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>vue</title>
      <link>/zh/zh/post/computer-science/vue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/computer-science/vue/</guid>
      <description>&lt;h1 id=&#34;vue&#34;&gt;&#xA;  vue&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#vue&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vuejs.org/&#34;&gt;vuejs.org&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cn.vuejs.org/guide/quick-start&#34;&gt;文档&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.runoob.com/vue2/vue-tutorial.html&#34;&gt;vue2 教程&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Vue 2.0 在 2023 年 12 月 31 日停止更新&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.runoob.com/vue3/vue3-tutorial.html&#34;&gt;vue3 教程&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;快速上手&#34;&gt;&#xA;  快速上手&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bf%ab%e9%80%9f%e4%b8%8a%e6%89%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;安装 &lt;code&gt;node.js&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;使用 brew 安装 &lt;code&gt;brew install node&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;检查 node 是否安装成功&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;node -v&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;npm -v&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;创建 vue 项目 &lt;code&gt;npm create vue@latest&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;cd my-vue-project&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;修改镜像源&#xA;&lt;ul&gt;&#xA;&lt;li&gt;reference&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/shenhuanjie/p/18428209/npm-yarn-pnpm-latest-domestic-mirror-portion-source-setting-and-common-problems-solve-zyb4mp&#34;&gt;npm、yarn、pnpm 最新国内镜像源设置和常见问题解决&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;npm run dev&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Local &lt;code&gt;http://localhost:5173&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Vue DevTools &lt;code&gt;http://localhost:5173/__devtools__/&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;reference&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tutorials.tinkink.net/zh-hans/mac/install-nodejs.html&#34;&gt;如何在 macOS 上安装 Node.js&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>goal</title>
      <link>/zh/post/life/goal/</link>
      <pubDate>Thu, 14 Nov 2024 08:59:49 +0800</pubDate>
      <guid>/zh/post/life/goal/</guid>
      <description>&lt;h1 id=&#34;goal&#34;&gt;&#xA;  goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;2025-01-12&#34;&gt;&#xA;  2025-01-12&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-12&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 过年前完成(1月24日内)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试经典150题(一天完成5道题, 应该完成70道题左右)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Spring实战 第6版 Book (读完这本书)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 清华韩秀云精品课（第一季，64集）(大概应该看到56集)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 美国困局：“新右翼” 的兴起与挑战 (读完这本书)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; OAuth 2 in Action&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Microservices Security in Action&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; API Security in Action&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; ActiveMQ in Action&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; RabbitMQ in Depth（Manning，2017年）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Alvaro Videla和Jason J.W. Williams合著的RabbitMQ in Action（Manning，2012年）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Kafka in Action （Manning，2017年）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Enterprise Integration Patterns（Addison-Wesley，2003年）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Functional Programming in Java（Manning，2017年）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Grokking Functional Programming（Manning，2021年）&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>goal</title>
      <link>/zh/zh/post/life/goal/</link>
      <pubDate>Thu, 14 Nov 2024 08:59:49 +0800</pubDate>
      <guid>/zh/zh/post/life/goal/</guid>
      <description>&lt;h1 id=&#34;goal&#34;&gt;&#xA;  goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;2025-01-12&#34;&gt;&#xA;  2025-01-12&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2025-01-12&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 过年前完成(1月24日内)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 面试经典150题(一天完成5道题, 应该完成70道题左右)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Spring实战 第6版 Book (读完这本书)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 清华韩秀云精品课（第一季，64集）(大概应该看到56集)&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 美国困局：“新右翼” 的兴起与挑战 (读完这本书)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; OAuth 2 in Action&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Microservices Security in Action&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; API Security in Action&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; ActiveMQ in Action&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; RabbitMQ in Depth（Manning，2017年）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Alvaro Videla和Jason J.W. Williams合著的RabbitMQ in Action（Manning，2012年）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Kafka in Action （Manning，2017年）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Enterprise Integration Patterns（Addison-Wesley，2003年）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Functional Programming in Java（Manning，2017年）&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Grokking Functional Programming（Manning，2021年）&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>accumulation</title>
      <link>/zh/post/life/accumulation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/life/accumulation/</guid>
      <description>&lt;h1 id=&#34;accumulation&#34;&gt;&#xA;  accumulation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#accumulation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;cycling&#34;&gt;&#xA;  cycling&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#cycling&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;微信读书&#34;&gt;&#xA;  微信读书&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%be%ae%e4%bf%a1%e8%af%bb%e4%b9%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025 85 hour, 32 min&lt;/li&gt;&#xA;&lt;li&gt;2024 8 hour, 45 min&lt;/li&gt;&#xA;&lt;li&gt;2023 24 hour, 48 min&lt;/li&gt;&#xA;&lt;li&gt;2022 8 hour, 47 min&lt;/li&gt;&#xA;&lt;li&gt;2021 1 min&lt;/li&gt;&#xA;&lt;li&gt;2020 7 min&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;轻听英语&#34;&gt;&#xA;  轻听英语&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bd%bb%e5%90%ac%e8%8b%b1%e8%af%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025&lt;/li&gt;&#xA;&lt;li&gt;2024 70 hour, 55 min&lt;/li&gt;&#xA;&lt;li&gt;2023 5 hour, 36 min&lt;/li&gt;&#xA;&lt;li&gt;2022 2 hour, 6 min&lt;/li&gt;&#xA;&lt;li&gt;2021 1 hour, 3 min&lt;/li&gt;&#xA;&lt;li&gt;2020 15 hour, 39 min&lt;/li&gt;&#xA;&lt;li&gt;2019 38 hour, 42 min&lt;/li&gt;&#xA;&lt;li&gt;2018 11 hour, 16 min&lt;/li&gt;&#xA;&lt;li&gt;2017 7 hour, 57 min&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;小宇宙&#34;&gt;&#xA;  小宇宙&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b0%8f%e5%ae%87%e5%ae%99&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;accumulation&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025-01-13 10 h, 3 min&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;码农姐妹&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025-01-13 3 h, 36 min&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;经济新闻每日速递&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025-01-13 3 h, 5 min&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;纵横说&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025-01-13 2 h, 9 min&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>accumulation</title>
      <link>/zh/zh/post/life/accumulation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/life/accumulation/</guid>
      <description>&lt;h1 id=&#34;accumulation&#34;&gt;&#xA;  accumulation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#accumulation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;cycling&#34;&gt;&#xA;  cycling&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#cycling&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;微信读书&#34;&gt;&#xA;  微信读书&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%be%ae%e4%bf%a1%e8%af%bb%e4%b9%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025 85 hour, 32 min&lt;/li&gt;&#xA;&lt;li&gt;2024 8 hour, 45 min&lt;/li&gt;&#xA;&lt;li&gt;2023 24 hour, 48 min&lt;/li&gt;&#xA;&lt;li&gt;2022 8 hour, 47 min&lt;/li&gt;&#xA;&lt;li&gt;2021 1 min&lt;/li&gt;&#xA;&lt;li&gt;2020 7 min&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;轻听英语&#34;&gt;&#xA;  轻听英语&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bd%bb%e5%90%ac%e8%8b%b1%e8%af%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025&lt;/li&gt;&#xA;&lt;li&gt;2024 70 hour, 55 min&lt;/li&gt;&#xA;&lt;li&gt;2023 5 hour, 36 min&lt;/li&gt;&#xA;&lt;li&gt;2022 2 hour, 6 min&lt;/li&gt;&#xA;&lt;li&gt;2021 1 hour, 3 min&lt;/li&gt;&#xA;&lt;li&gt;2020 15 hour, 39 min&lt;/li&gt;&#xA;&lt;li&gt;2019 38 hour, 42 min&lt;/li&gt;&#xA;&lt;li&gt;2018 11 hour, 16 min&lt;/li&gt;&#xA;&lt;li&gt;2017 7 hour, 57 min&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;小宇宙&#34;&gt;&#xA;  小宇宙&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b0%8f%e5%ae%87%e5%ae%99&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;accumulation&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025-01-13 10 h, 3 min&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;码农姐妹&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025-01-13 3 h, 36 min&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;经济新闻每日速递&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025-01-13 3 h, 5 min&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;纵横说&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2025-01-13 2 h, 9 min&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>coffee</title>
      <link>/zh/post/life/coffee/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/life/coffee/</guid>
      <description>&lt;h1 id=&#34;coffee&#34;&gt;&#xA;  coffee&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#coffee&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV1j3411V7Fy&#34;&gt;咖啡碎碎念#1&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV1Ao4y1u79x&#34;&gt;一次探店2家上海“天花板”咖啡馆？！喝到一半老板直接开始上课？#上海VLOG（上）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV1hU4y1K7uA/&#34;&gt;科普丨意式咖啡傻傻分不清？10分钟带你全部看懂&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;马克西姆咖啡机&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV1W54y1H7qY/&#34;&gt;马克西姆使用评测（上）3000+价位段最值得入手半自动意式咖啡机一体机&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV1ST4y1o7WJ&#34;&gt;马克西姆咖啡机评测（下）使用成本低是最好的入手理由&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV1NY4y1c7cE&#34;&gt;马克西姆咖啡机用了一年，总结出5个使用技巧&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV17L411W7gS&#34;&gt;马克西姆半自动家用咖啡机，如何调试和定量出品，掌握核心2点，控制好粉重和粉液比&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>coffee</title>
      <link>/zh/zh/post/life/coffee/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/life/coffee/</guid>
      <description>&lt;h1 id=&#34;coffee&#34;&gt;&#xA;  coffee&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#coffee&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV1j3411V7Fy&#34;&gt;咖啡碎碎念#1&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV1Ao4y1u79x&#34;&gt;一次探店2家上海“天花板”咖啡馆？！喝到一半老板直接开始上课？#上海VLOG（上）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV1hU4y1K7uA/&#34;&gt;科普丨意式咖啡傻傻分不清？10分钟带你全部看懂&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;马克西姆咖啡机&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV1W54y1H7qY/&#34;&gt;马克西姆使用评测（上）3000+价位段最值得入手半自动意式咖啡机一体机&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV1ST4y1o7WJ&#34;&gt;马克西姆咖啡机评测（下）使用成本低是最好的入手理由&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV1NY4y1c7cE&#34;&gt;马克西姆咖啡机用了一年，总结出5个使用技巧&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV17L411W7gS&#34;&gt;马克西姆半自动家用咖啡机，如何调试和定量出品，掌握核心2点，控制好粉重和粉液比&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Algorithm</title>
      <link>/zh/post/computer-science/algorithm/</link>
      <pubDate>Thu, 14 Nov 2024 08:59:49 +0800</pubDate>
      <guid>/zh/post/computer-science/algorithm/</guid>
      <description>&lt;h1 id=&#34;algorithm&#34;&gt;&#xA;  Algorithm&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#algorithm&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.programmercarl.com/&#34;&gt;代码随想录&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;面试经典150题&#34;&gt;&#xA;  面试经典150题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e7%bb%8f%e5%85%b8150%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.cn/studyplan/top-interview-150/&#34;&gt;面试经典150题&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;数组字符串&#34;&gt;&#xA;  数组/字符串&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e7%bb%84%e5%ad%97%e7%ac%a6%e4%b8%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;移除元素&#34;&gt;&#xA;  移除元素&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%a7%bb%e9%99%a4%e5%85%83%e7%b4%a0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11 击败3.36%&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;removeElement&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; val) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Arrays.&lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;(nums);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; flagIndex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; val &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 0) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                flagIndex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                count&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; val) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                count&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (flagIndex &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; 0) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; flagIndex; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; flagIndex &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; count; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; flagIndex) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; count;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;一维动态规划&#34;&gt;&#xA;  一维动态规划&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e7%bb%b4%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;爬楼梯&#34;&gt;&#xA;  爬楼梯&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%88%ac%e6%a5%bc%e6%a2%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11 击败100%&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;climbStairs&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (n &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 0)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; 0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (n &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (n &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; 2;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; dp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;n &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dp&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dp&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dp&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 2;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 3; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            dp&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dp&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; dp&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; 2&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; dp&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;面试经典150题-1&#34;&gt;&#xA;  面试经典150题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e7%bb%8f%e5%85%b8150%e9%a2%98-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.cn/studyplan/top-interview-150/&#34;&gt;面试经典150题&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;数组字符串-1&#34;&gt;&#xA;  数组/字符串&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e7%bb%84%e5%ad%97%e7%ac%a6%e4%b8%b2-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;合并两个有序数组&#34;&gt;&#xA;  合并两个有序数组&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%90%88%e5%b9%b6%e4%b8%a4%e4%b8%aa%e6%9c%89%e5%ba%8f%e6%95%b0%e7%bb%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/merge-sorted-array/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;合并两个有序数组&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution88.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution88&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;merge&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums1, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; m, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums2, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (n &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 0) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; nIndex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; m; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; m &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            nums1&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nums2&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;nIndex&lt;span style=&#34;color:#f92672&#34;&gt;++]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Arrays.&lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;(nums1);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {1, 2, 3, 0, 0, 0};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 3;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {2, 5, 6};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 3;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        merge(nums1, m, nums2, n);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i : nums1) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(i &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;移除元素-1&#34;&gt;&#xA;  移除元素&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%a7%bb%e9%99%a4%e5%85%83%e7%b4%a0-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/remove-element/submissions/592471220/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;移除元素&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;删除有序数组中的重复项&#34;&gt;&#xA;  删除有序数组中的重复项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a0%e9%99%a4%e6%9c%89%e5%ba%8f%e6%95%b0%e7%bb%84%e4%b8%ad%e7%9a%84%e9%87%8d%e5%a4%8d%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 删除有序数组中的重复项&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11 没有做出来，看的官方题解&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution26.java&#34;&gt;2025-01-11&lt;/a&gt; 做完&lt;code&gt;删除有序数组中的重复项 II&lt;/code&gt;之后再尝试重新解题完成&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution26&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;removeDuplicates&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; 1) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; slow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; fast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (slow &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; fast &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; fast &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;slow&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                slow&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            fast&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; slow;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {0, 0, 1, 1, 1, 2, 2, 3, 3, 4};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; num : nums) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(num &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(removeDuplicates(nums));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; num : nums) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(num &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;删除有序数组中的重复项-ii&#34;&gt;&#xA;  删除有序数组中的重复项 II&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a0%e9%99%a4%e6%9c%89%e5%ba%8f%e6%95%b0%e7%bb%84%e4%b8%ad%e7%9a%84%e9%87%8d%e5%a4%8d%e9%a1%b9-ii&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 删除有序数组中的重复项 II&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution80.java&#34;&gt;2025-01-11&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution80&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;removeDuplicates&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; 2) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; slow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; fast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (slow &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; fast &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; fast &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                count&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; 2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; slow &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    slow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fast;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; 2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; slow &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;slow&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    slow&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (slow &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;slow&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    slow&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            fast&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; slow &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1 &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; : slow;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;//int[] nums = {0,0,1,1,1,1,2,3,3};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;//int[] nums = {1,2,2};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {1, 1, 1, 2, 2, 2, 3, 3};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; num : nums) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(num &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(removeDuplicates(nums));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; num : nums) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(num &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;多数元素&#34;&gt;&#xA;  多数元素&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a4%9a%e6%95%b0%e5%85%83%e7%b4%a0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/majority-element/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;多数元素&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution169.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;轮转数组&#34;&gt;&#xA;  轮转数组&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bd%ae%e8%bd%ac%e6%95%b0%e7%bb%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/rotate-array/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;轮转数组&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution189.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;进阶&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 尽可能想出更多的解决方案，至少有 三种 不同的方法可以解决这个问题。&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 你可以使用空间复杂度为 O(1) 的 原地 算法解决这个问题吗？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;买卖股票的最佳时机&#34;&gt;&#xA;  买卖股票的最佳时机&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b9%b0%e5%8d%96%e8%82%a1%e7%a5%a8%e7%9a%84%e6%9c%80%e4%bd%b3%e6%97%b6%e6%9c%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/best-time-to-buy-and-sell-stock/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;买卖股票的最佳时机&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11 看官方题解做出来的&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 review&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;买卖股票的最佳时机-ii&#34;&gt;&#xA;  买卖股票的最佳时机 II&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b9%b0%e5%8d%96%e8%82%a1%e7%a5%a8%e7%9a%84%e6%9c%80%e4%bd%b3%e6%97%b6%e6%9c%ba-ii&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;买卖股票的最佳时机 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 官方题解 理解&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 方法一：动态规划&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 方法二：贪心&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;跳跃游戏&#34;&gt;&#xA;  跳跃游戏&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%b7%b3%e8%b7%83%e6%b8%b8%e6%88%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/jump-game/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;跳跃游戏&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 官方题解理解 贪心&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution55.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;跳跃游戏-ii&#34;&gt;&#xA;  跳跃游戏 II&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%b7%b3%e8%b7%83%e6%b8%b8%e6%88%8f-ii&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/jump-game-ii/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;跳跃游戏 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution45.java&#34;&gt;2025-01-18 算法超时了&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 理解官方题解&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-18 方法一：反向查找出发位置&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Solution45.jump2&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-18 方法二：正向查找可达到的最大位置&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Solution45.jump3&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;h-指数&#34;&gt;&#xA;  H 指数&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#h-%e6%8c%87%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/h-index/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;H 指数&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Algorithm</title>
      <link>/zh/zh/post/computer-science/algorithm/</link>
      <pubDate>Thu, 14 Nov 2024 08:59:49 +0800</pubDate>
      <guid>/zh/zh/post/computer-science/algorithm/</guid>
      <description>&lt;h1 id=&#34;algorithm&#34;&gt;&#xA;  Algorithm&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#algorithm&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.programmercarl.com/&#34;&gt;代码随想录&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;面试经典150题&#34;&gt;&#xA;  面试经典150题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e7%bb%8f%e5%85%b8150%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.cn/studyplan/top-interview-150/&#34;&gt;面试经典150题&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;数组字符串&#34;&gt;&#xA;  数组/字符串&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e7%bb%84%e5%ad%97%e7%ac%a6%e4%b8%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;移除元素&#34;&gt;&#xA;  移除元素&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%a7%bb%e9%99%a4%e5%85%83%e7%b4%a0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11 击败3.36%&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;removeElement&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; val) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Arrays.&lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;(nums);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; flagIndex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; val &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 0) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                flagIndex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                count&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; val) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                count&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (flagIndex &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; 0) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; flagIndex; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; flagIndex &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; count; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; flagIndex) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; count;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;一维动态规划&#34;&gt;&#xA;  一维动态规划&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e7%bb%b4%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;爬楼梯&#34;&gt;&#xA;  爬楼梯&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%88%ac%e6%a5%bc%e6%a2%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11 击败100%&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;climbStairs&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (n &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 0)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; 0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (n &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (n &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; 2;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; dp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;n &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dp&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dp&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dp&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 2;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 3; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            dp&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dp&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; dp&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; 2&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; dp&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;面试经典150题-1&#34;&gt;&#xA;  面试经典150题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e7%bb%8f%e5%85%b8150%e9%a2%98-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.cn/studyplan/top-interview-150/&#34;&gt;面试经典150题&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;数组字符串-1&#34;&gt;&#xA;  数组/字符串&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e7%bb%84%e5%ad%97%e7%ac%a6%e4%b8%b2-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;合并两个有序数组&#34;&gt;&#xA;  合并两个有序数组&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%90%88%e5%b9%b6%e4%b8%a4%e4%b8%aa%e6%9c%89%e5%ba%8f%e6%95%b0%e7%bb%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/merge-sorted-array/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;合并两个有序数组&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution88.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution88&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;merge&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums1, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; m, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums2, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (n &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 0) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; nIndex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; m; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; m &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            nums1&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nums2&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;nIndex&lt;span style=&#34;color:#f92672&#34;&gt;++]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Arrays.&lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;(nums1);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {1, 2, 3, 0, 0, 0};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 3;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {2, 5, 6};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 3;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        merge(nums1, m, nums2, n);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i : nums1) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(i &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;移除元素-1&#34;&gt;&#xA;  移除元素&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%a7%bb%e9%99%a4%e5%85%83%e7%b4%a0-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/remove-element/submissions/592471220/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;移除元素&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;删除有序数组中的重复项&#34;&gt;&#xA;  删除有序数组中的重复项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a0%e9%99%a4%e6%9c%89%e5%ba%8f%e6%95%b0%e7%bb%84%e4%b8%ad%e7%9a%84%e9%87%8d%e5%a4%8d%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 删除有序数组中的重复项&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11 没有做出来，看的官方题解&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution26.java&#34;&gt;2025-01-11&lt;/a&gt; 做完&lt;code&gt;删除有序数组中的重复项 II&lt;/code&gt;之后再尝试重新解题完成&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution26&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;removeDuplicates&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; 1) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; slow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; fast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (slow &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; fast &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; fast &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;slow&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                slow&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            fast&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; slow;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {0, 0, 1, 1, 1, 2, 2, 3, 3, 4};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; num : nums) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(num &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(removeDuplicates(nums));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; num : nums) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(num &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;删除有序数组中的重复项-ii&#34;&gt;&#xA;  删除有序数组中的重复项 II&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a0%e9%99%a4%e6%9c%89%e5%ba%8f%e6%95%b0%e7%bb%84%e4%b8%ad%e7%9a%84%e9%87%8d%e5%a4%8d%e9%a1%b9-ii&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 删除有序数组中的重复项 II&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution80.java&#34;&gt;2025-01-11&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution80&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;removeDuplicates&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; 2) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; slow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; fast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (slow &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; fast &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; fast &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                count&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; 2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; slow &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    slow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fast;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; 2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; slow &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;slow&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    slow&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (slow &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;slow&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nums&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;fast&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    slow&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            fast&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; slow &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1 &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; nums.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; : slow;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;//int[] nums = {0,0,1,1,1,1,2,3,3};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;//int[] nums = {1,2,2};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; nums &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {1, 1, 1, 2, 2, 2, 3, 3};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; num : nums) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(num &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(removeDuplicates(nums));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; num : nums) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(num &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;多数元素&#34;&gt;&#xA;  多数元素&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a4%9a%e6%95%b0%e5%85%83%e7%b4%a0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/majority-element/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;多数元素&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution169.java&#34;&gt;2025-01-12&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;轮转数组&#34;&gt;&#xA;  轮转数组&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bd%ae%e8%bd%ac%e6%95%b0%e7%bb%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/rotate-array/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;轮转数组&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution189.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;进阶&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 尽可能想出更多的解决方案，至少有 三种 不同的方法可以解决这个问题。&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 你可以使用空间复杂度为 O(1) 的 原地 算法解决这个问题吗？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;买卖股票的最佳时机&#34;&gt;&#xA;  买卖股票的最佳时机&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b9%b0%e5%8d%96%e8%82%a1%e7%a5%a8%e7%9a%84%e6%9c%80%e4%bd%b3%e6%97%b6%e6%9c%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/best-time-to-buy-and-sell-stock/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;买卖股票的最佳时机&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-11 看官方题解做出来的&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 review&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;买卖股票的最佳时机-ii&#34;&gt;&#xA;  买卖股票的最佳时机 II&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b9%b0%e5%8d%96%e8%82%a1%e7%a5%a8%e7%9a%84%e6%9c%80%e4%bd%b3%e6%97%b6%e6%9c%ba-ii&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;买卖股票的最佳时机 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 官方题解 理解&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 方法一：动态规划&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 方法二：贪心&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;跳跃游戏&#34;&gt;&#xA;  跳跃游戏&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%b7%b3%e8%b7%83%e6%b8%b8%e6%88%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/jump-game/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;跳跃游戏&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-17 官方题解理解 贪心&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution55.java&#34;&gt;2025-01-18&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;跳跃游戏-ii&#34;&gt;&#xA;  跳跃游戏 II&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%b7%b3%e8%b7%83%e6%b8%b8%e6%88%8f-ii&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/jump-game-ii/description/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;跳跃游戏 II&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://github.com/penruins/algorithm-practice/blob/main/algorithm-practice-code/src/main/java/com/penruins/leetcode/Solution45.java&#34;&gt;2025-01-18 算法超时了&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 理解官方题解&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-18 方法一：反向查找出发位置&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Solution45.jump2&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2025-01-18 方法二：正向查找可达到的最大位置&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Solution45.jump3&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;h-指数&#34;&gt;&#xA;  H 指数&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#h-%e6%8c%87%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;https://leetcode.cn/problems/h-index/?envType=study-plan-v2&amp;amp;envId=top-interview-150&#34;&gt;H 指数&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java并发编程实战</title>
      <link>/zh/post/books/computer-science/java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/books/computer-science/java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/10484692/&#34;&gt;Java并发编程实战&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第1章-简介&#34;&gt;&#xA;  第1章 简介&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-%e7%ae%80%e4%bb%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-并发简史&#34;&gt;&#xA;  1.1 并发简史&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-%e5%b9%b6%e5%8f%91%e7%ae%80%e5%8f%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;12-线程的优势&#34;&gt;&#xA;  1.2 线程的优势&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#12-%e7%ba%bf%e7%a8%8b%e7%9a%84%e4%bc%98%e5%8a%bf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;13-线程带来的风险&#34;&gt;&#xA;  1.3 线程带来的风险&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#13-%e7%ba%bf%e7%a8%8b%e5%b8%a6%e6%9d%a5%e7%9a%84%e9%a3%8e%e9%99%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;14-线程无处不在&#34;&gt;&#xA;  1.4 线程无处不在&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#14-%e7%ba%bf%e7%a8%8b%e6%97%a0%e5%a4%84%e4%b8%8d%e5%9c%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;开发线程安全的类比开发非线程安全的类要更加谨慎和细致&lt;/li&gt;&#xA;&lt;li&gt;每个Java应用程序都会使用线程&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当JVM启动时，它将为JVM的内部任务（例如，&lt;strong&gt;垃圾收集&lt;/strong&gt;、&lt;strong&gt;终结操作&lt;/strong&gt;等）创建后台线程，并创建一个&lt;strong&gt;主线程&lt;/strong&gt;来运行main方法。&lt;/li&gt;&#xA;&lt;li&gt;AWT（Abstract Window Toolkit，抽象窗口工具库）和Swing的用户界面框架将创建线程来管理&lt;strong&gt;用户界面事件&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;Timer将创建线程来&lt;strong&gt;执行延迟任务&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;一些组件框架，例如Servlet和RMI，都会创建线程池并调用这些线程中的方法。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;当某个框架在应用程序中引入并发性时，&lt;strong&gt;通常不可能将并发性仅局限于框架代码&lt;/strong&gt;，因为框架本身会回调（Callback）应用程序的代码，而这些代码将访问应用程序的状态。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;对线程安全性的需求也不能局限于被调用的代码，而是要延伸到需要访问这些代码所访问的程序状态的所有代码路径&lt;/strong&gt;。因此，对线程安全性的需求将在程序中蔓延开来。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第2章-线程安全性&#34;&gt;&#xA;  第2章 线程安全性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-%e7%ba%bf%e7%a8%8b%e5%ae%89%e5%85%a8%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;要编写线程安全的代码，其核心在于要&lt;strong&gt;对状态访问操作进行管理&lt;/strong&gt;，特别是对&lt;strong&gt;共享的（Shared）和可变的（Mutable）状态&lt;/strong&gt;的访问。&lt;/li&gt;&#xA;&lt;li&gt;“共享”意味着变量可以由多个线程同时访问，而“可变”则意味着变量的值在其生命周期内可以发生变化。&lt;/li&gt;&#xA;&lt;li&gt;一个对象是否需要是线程安全的，取决于它是否被多个线程访问&lt;/li&gt;&#xA;&lt;li&gt;当多个线程访问某个状态变量并且其中有一个线程执行写入操作时，必须采用同步机制来协同这些线程对变量的访问。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Java中的主要同步机制是关键字&lt;strong&gt;synchronized&lt;/strong&gt;，它提供了一种独占的加锁方式，但“同步”这个术语还包括&lt;strong&gt;volatile类型的变量&lt;/strong&gt;，&lt;strong&gt;显式锁（Explicit Lock）&lt;strong&gt;以及&lt;/strong&gt;原子变量&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;21-什么是线程安全性&#34;&gt;&#xA;  2.1 什么是线程安全性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#21-%e4%bb%80%e4%b9%88%e6%98%af%e7%ba%bf%e7%a8%8b%e5%ae%89%e5%85%a8%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在线程安全性的定义中，最核心的概念就是&lt;strong&gt;正确性&lt;/strong&gt;。如果对线程安全性的定义是模糊的，那么就是因为缺乏对正确性的清晰定义。&lt;/li&gt;&#xA;&lt;li&gt;正确性的含义是，&lt;strong&gt;某个类的行为与其规范完全一致&lt;/strong&gt;。在良好的规范中通常会定义各种不变性条件（Invariant）来约束对象的状态，以及定义各种后验条件（Postcondition）来描述对象操作的结果。&lt;/li&gt;&#xA;&lt;li&gt;线程安全性：&lt;strong&gt;当多个线程访问某个类时，这个类始终都能表现出正确的行为，那么就称这个类是线程安全的&lt;/strong&gt;。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当多个线程访问某个类时，不管运行时环境&lt;strong&gt;采用何种调度方式&lt;/strong&gt;或者这些&lt;strong&gt;线程将如何交替执行&lt;/strong&gt;，并且&lt;strong&gt;在主调代码中不需要任何额外的同步或协同&lt;/strong&gt;，这个类都能表现出正确的行为，那么就称这个类是线程安全的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;在线程安全类中封装了必要的同步机制，因此客户端无须进一步采取同步措施。&lt;/li&gt;&#xA;&lt;li&gt;无状态对象一定是线程安全的&#xA;&lt;ul&gt;&#xA;&lt;li&gt;大多数Servlet都是无状态的，从而极大地降低了在实现Servlet线程安全性时的复杂性。只有当Servlet在处理请求时需要保存一些信息，线程安全性才会成为一个问题。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;22-原子性&#34;&gt;&#xA;  2.2 原子性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#22-%e5%8e%9f%e5%ad%90%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在并发编程中，这种由于不恰当的执行时序而出现不正确的结果是一种非常重要的情况，它有一个正式的名字：&lt;strong&gt;竞态条件（Race Condition）&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;221-竞态条件&#34;&gt;&#xA;  2.2.1 竞态条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#221-%e7%ab%9e%e6%80%81%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;当某个计算的正确性取决于多个线程的交替执行时序时，那么就会发生竞态条件&lt;/strong&gt;。换句话说，就是正确的结果要取决于运气&lt;/li&gt;&#xA;&lt;li&gt;“先检查后执行”：首先观察到某个条件为真（例如文件X不存在），然后根据这个观察结果采用相应的动作（创建文件X），但事实上，&lt;strong&gt;在你观察到这个结果以及开始创建文件之间，观察结果可能变得无效&lt;/strong&gt;（另一个线程在这期间创建了文件X），从而导致各种问题（未预期的异常、数据被覆盖、文件被破坏等）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;222-示例延迟初始化中的竞态条件&#34;&gt;&#xA;  2.2.2 示例：延迟初始化中的竞态条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#222-%e7%a4%ba%e4%be%8b%e5%bb%b6%e8%bf%9f%e5%88%9d%e5%a7%8b%e5%8c%96%e4%b8%ad%e7%9a%84%e7%ab%9e%e6%80%81%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;延迟初始化的目的是将对象的初始化操作推迟到实际被使用时才进行，同时要确保只被初始化一次。&lt;/li&gt;&#xA;&lt;li&gt;假定线程A和线程B同时执行getInstance。A看到instance为空，因而创建一个新的ExpensiveObject实例。B同样需要判断instance是否为空。此时的instance是否为空，要取决于不可预测的时序，包括线程的调度方式，以及A需要花多长时间来初始化ExpensiveObject并设置instance。如果当B检查时，instance为空，那么在两次调用getInstance时可能会得到不同的结果，即使getInstance通常被认为是返回相同的实例。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;223-复合操作&#34;&gt;&#xA;  2.2.3 复合操作&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#223-%e5%a4%8d%e5%90%88%e6%93%8d%e4%bd%9c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;要避免竞态条件问题，就必须在某个线程修改该变量时，通过某种方式防止其他线程使用这个变量，从而确保其他线程只能在修改操作完成之前或之后读取和修改状态，而不是在修改状态的过程中。&lt;/li&gt;&#xA;&lt;li&gt;假定有两个操作A和B，如果从执行A的线程来看，当另一个线程执行B时，要么将B全部执行完，要么完全不执行B，那么A和B对彼此来说是&lt;strong&gt;原子的&lt;/strong&gt;。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;原子操作是指，对于访问同一个状态的所有操作（包括该操作本身）来说，这个操作是一个以原子方式执行的操作。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;在&lt;strong&gt;java.util.concurrent.atomic&lt;/strong&gt;包中包含了一些原子变量类，用于实现在数值和对象引用上的原子状态转换。通过用AtomicLong来代替long类型的计数器，能够确保所有对计数器状态的访问操作都是原子的。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当在无状态的类中添加一个状态时，如果该状态完全由线程安全的对象来管理，那么这个类仍然是线程安全的&lt;/li&gt;&#xA;&lt;li&gt;当状态变量的数量由一个变为多个时，并不会像状态变量数量由零个变为一个那样简单&lt;/li&gt;&#xA;&lt;li&gt;在实际情况中，应尽可能地使用现有的线程安全对象（例如AtomicLong）来管理类的状态。与非线程安全的对象相比，判断线程安全对象的可能状态及其状态转换情况要更为容易，从而也更容易维护和验证线程安全性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;23-加锁机制&#34;&gt;&#xA;  2.3 加锁机制&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#23-%e5%8a%a0%e9%94%81%e6%9c%ba%e5%88%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;要保持状态的一致性，就需要在单个原子操作中更新所有相关的状态变量。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;231-内置锁&#34;&gt;&#xA;  2.3.1 内置锁&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#231-%e5%86%85%e7%bd%ae%e9%94%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Java提供了一种内置的锁机制来支持原子性：同步代码块（Synchronized Block）。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;以关键字synchronized来修饰的方法就是一种横跨整个方法体的同步代码块，其中该同步代码块的锁就是方法调用所在的对象。静态的synchronized方法以Class对象作为锁。&lt;/li&gt;&#xA;&lt;li&gt;每个Java对象都可以用做一个实现同步的锁，这些锁被称为内置锁（Intrinsic Lock）或监视器锁（Monitor Lock）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;232-重入&#34;&gt;&#xA;  2.3.2 重入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#232-%e9%87%8d%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当某个线程请求一个由其他线程持有的锁时，发出请求的线程就会阻塞&#xA;&lt;ul&gt;&#xA;&lt;li&gt;由于内置锁是可重入的，因此如果某个线程试图获得一个已经由它自己持有的锁，那么这个请求就会成功。“重入”意味着获取锁的操作的粒度是“线程”，而不是“调用”&lt;/li&gt;&#xA;&lt;li&gt;重入的一种实现方法是，为每个锁关联一个获取计数值和一个所有者线程。&lt;/li&gt;&#xA;&lt;li&gt;当计数值为0时，这个锁就被认为是没有被任何线程持有。当线程请求一个未被持有的锁时，JVM将记下锁的持有者，并且将获取计数值置为1。如果同一个线程再次获取这个锁，计数值将递增，而当线程退出同步代码块时，计数器会相应地递减。当计数值为0时，这个锁将被释放。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;24-用锁来保护状态&#34;&gt;&#xA;  2.4 用锁来保护状态&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#24-%e7%94%a8%e9%94%81%e6%9d%a5%e4%bf%9d%e6%8a%a4%e7%8a%b6%e6%80%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对于可能被多个线程同时访问的可变状态变量，在访问它时都需要持有同一个锁，在这种情况下，我们称状态变量是由这个锁保护的。&lt;/li&gt;&#xA;&lt;li&gt;之所以每个对象都有一个内置锁，只是为了免去显式地创建锁对象。&lt;/li&gt;&#xA;&lt;li&gt;每个共享的和可变的变量都应该只由一个锁来保护，从而使维护人员知道是哪一个锁。&lt;/li&gt;&#xA;&lt;li&gt;一种常见的加锁约定是，将所有的可变状态都封装在对象内部，并通过对象的内置锁对所有访问可变状态的代码路径进行同步，使得在该对象上不会发生并发访问。&lt;/li&gt;&#xA;&lt;li&gt;并非所有数据都需要锁的保护，只有被多个线程同时访问的可变数据才需要通过锁来保护。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;25-活跃性与性能&#34;&gt;&#xA;  2.5 活跃性与性能&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#25-%e6%b4%bb%e8%b7%83%e6%80%a7%e4%b8%8e%e6%80%a7%e8%83%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不良并发（Poor Concurrency）应用程序：可同时调用的数量，不仅受到可用处理资源的限制，还受到应用程序本身结构的限制。&lt;/li&gt;&#xA;&lt;li&gt;当实现某个同步策略时，一定不要盲目地为了性能而牺牲简单性（这可能会破坏安全性）。&lt;/li&gt;&#xA;&lt;li&gt;无论是执行计算密集的操作，还是在执行某个可能阻塞的操作，如果持有锁的时间过长，那么都会带来活跃性或性能问题。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当执行时间较长的计算或者可能无法快速完成的操作时（例如，网络I/O或控制台I/O），一定不要持有锁。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第3章-对象的共享&#34;&gt;&#xA;  第3章 对象的共享&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0-%e5%af%b9%e8%b1%a1%e7%9a%84%e5%85%b1%e4%ba%ab&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;同步还有另一个重要的方面：内存可见性（Memory Visibility）。我们不仅希望防止某个线程正在使用对象状态而另一个线程在同时修改该状态，而且希望确保当一个线程修改了对象状态后，其他线程能够看到发生的状态变化。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;31-可见性&#34;&gt;&#xA;  3.1 可见性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#31-%e5%8f%af%e8%a7%81%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在没有同步的情况下，编译器、处理器以及运行时等都可能对操作的执行顺序进行一些意想不到的调整。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;311-失效数据&#34;&gt;&#xA;  3.1.1 失效数据&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#311-%e5%a4%b1%e6%95%88%e6%95%b0%e6%8d%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;312非原子的64位操作&#34;&gt;&#xA;  3.1.2　非原子的64位操作&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#312%e9%9d%9e%e5%8e%9f%e5%ad%90%e7%9a%8464%e4%bd%8d%e6%93%8d%e4%bd%9c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当线程在没有同步的情况下读取变量时，可能会得到一个失效值，但至少这个值是由之前某个线程设置的值，而不是一个随机值。这种安全性保证也被称为最低安全性（out-of-thin-air safety）&#xA;&lt;ul&gt;&#xA;&lt;li&gt;最低安全性适用于绝大多数变量，但是存在一个例外：非volatile类型的64位数值变量（double和long，请参见3.1.4节）。Java内存模型要求，变量的读取操作和写入操作都必须是原子操作，但对于非volatile类型的long和double变量，JVM允许将64位的读操作或写操作分解为两个32位的操作。当读取一个非volatile类型的long变量时，如果对该变量的读操作和写操作在不同的线程中执行，那么很可能会读取到某个值的高32位和另一个值的低32位￼。因此，即使不考虑失效数据问题，在多线程程序中使用共享且可变的long和double等类型的变量也是不安全的，除非用关键字volatile来声明它们，或者用锁保护起来。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;313加锁与可见性&#34;&gt;&#xA;  3.1.3　加锁与可见性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#313%e5%8a%a0%e9%94%81%e4%b8%8e%e5%8f%af%e8%a7%81%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;加锁的含义不仅仅局限于互斥行为，还包括内存可见性。为了确保所有线程都能看到共享变量的最新值，所有执行读操作或者写操作的线程都必须在同一个锁上同步。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;314volatile变量&#34;&gt;&#xA;  3.1.4　Volatile变量&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#314volatile%e5%8f%98%e9%87%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Java语言提供了一种稍弱的同步机制，即volatile变量，用来确保将变量的更新操作通知到其他线程。当把变量声明为volatile类型后，编译器与运行时都会注意到这个变量是共享的，因此不会将该变量上的操作与其他内存操作一起重排序。volatile变量不会被缓存在寄存器或者对其他处理器不可见的地方，因此在读取volatile类型的变量时总会返回最新写入的值。&lt;/li&gt;&#xA;&lt;li&gt;在访问volatile变量时不会执行加锁操作，因此也就不会使执行线程阻塞，因此volatile变量是一种比sychronized关键字更轻量级的同步机制。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在当前大多数处理器架构上，读取volatile变量的开销只比读取非volatile变量的开销略高一些。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;我们并不建议过度依赖volatile变量提供的可见性。如果在代码中依赖volatile变量来控制状态的可见性，通常比使用锁的代码更脆弱，也更难以理解。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;仅当volatile变量能简化代码的实现以及对同步策略的验证时，才应该使用它们。&lt;/li&gt;&#xA;&lt;li&gt;如果在验证正确性时需要对可见性进行复杂的判断，那么就不要使用volatile变量。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;volatile的语义不足以确保递增操作（count++）的原子性，除非你能确保只有一个线程对变量执行写操作。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;加锁机制既可以确保可见性又可以确保原子性，而volatile变量只能确保可见性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;当且仅当满足以下所有条件时，才应该使用volatile变量&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对变量的写入操作不依赖变量的当前值，或者你能确保只有单个线程更新变量的值。&lt;/li&gt;&#xA;&lt;li&gt;该变量不会与其他状态变量一起纳入不变性条件中。&lt;/li&gt;&#xA;&lt;li&gt;在访问变量时不需要加锁。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;调试小提示：对于服务器应用程序，无论在开发阶段还是在测试阶段，当启动JVM时一定都要指定-server命令行选项。server模式的JVM将比client模式的JVM进行更多的优化，例如将循环中未被修改的变量提升到循环外部，因此在开发环境（client模式的JVM）中能正确运行的代码，可能会在部署环境（server模式的JVM）中运行失败。例如，如果在程序清单3-4中“忘记”把asleep变量声明为volatile类型，那么server模式的JVM会将asleep的判断条件提升到循环体外部（这将导致一个无限循环），但client模式的JVM不会这么做。在解决开发环境中出现无限循环问题时，解决这个问题的开销远小于解决在应用环境出现无限循环的开销。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;32-发布与逸出&#34;&gt;&#xA;  3.2 发布与逸出&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#32-%e5%8f%91%e5%b8%83%e4%b8%8e%e9%80%b8%e5%87%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;“发布（Publish）”一个对象的意思是指，使对象能够在当前作用域之外的代码中使用。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;将一个指向该对象的引用保存到其他代码可以访问的地方，或者在某一个非私有的方法中返回该引用，或者将引用传递到其他类的方法中。在许多情况中，我们要确保对象及其内部状态不被发布。而在某些情况下，我们又需要发布某个对象，但如果在发布时要确保线程安全性，则可能需要同步。发布内部状态可能会破坏封装性，并使得程序难以维持不变性条件。例如，如果在对象构造完成之前就发布该对象，就会破坏线程安全性。当某个不应该发布的对象被发布时，这种情况就被称为逸出（Escape）。&lt;/li&gt;&#xA;&lt;li&gt;发布对象的最简单方法是将对象的引用保存到一个公有的静态变量中，以便任何类和线程都能看见该对象&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;一般来说，如果一个已经发布的对象能够通过非私有的变量引用和方法调用到达其他的对象，那么这些对象也都会被发布。&lt;/li&gt;&#xA;&lt;li&gt;当某个对象逸出后，你必须假设有某个类或线程可能会误用该对象。这正是需要使用封装的最主要原因：封装能够使得对程序的正确性进行分析变得可能，并使得无意中破坏设计约束条件变得更难。&lt;/li&gt;&#xA;&lt;li&gt;安全的对象构造过程&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不要在构造过程中使this引用逸出&lt;/li&gt;&#xA;&lt;li&gt;在构造过程中使this引用逸出的一个常见错误是，在构造函数中启动一个线程。当对象在其构造函数中创建一个线程时，无论是显式创建（通过将它传给构造函数）还是隐式创建（由于Thread或Runnable是该对象的一个内部类），this引用都会被新创建的线程共享。在对象尚未完全构造之前，新的线程就可以看见它。&lt;/li&gt;&#xA;&lt;li&gt;在构造函数中创建线程并没有错误，但最好不要立即启动它，而是通过一个start或initialize方法来启动&lt;/li&gt;&#xA;&lt;li&gt;在构造函数中调用一个可改写的实例方法时（既不是私有方法，也不是终结方法），同样会导致this引用在构造过程中逸出。&lt;/li&gt;&#xA;&lt;li&gt;如果想在构造函数中注册一个事件监听器或启动线程，那么可以使用一个私有的构造函数和一个公共的工厂方法（Factory Method），从而避免不正确的构造过程&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;33-线程封闭&#34;&gt;&#xA;  3.3 线程封闭&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#33-%e7%ba%bf%e7%a8%8b%e5%b0%81%e9%97%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Swing应用程序的许多并发错误都是由于错误地在另一个线程中使用了这些被封闭的对象。&lt;/li&gt;&#xA;&lt;li&gt;线程封闭是在程序设计中的一个考虑因素，必须在程序中实现。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;331-ad-hoc线程封闭&#34;&gt;&#xA;  3.3.1 Ad-hoc线程封闭&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#331-ad-hoc%e7%ba%bf%e7%a8%8b%e5%b0%81%e9%97%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在volatile变量上存在一种特殊的线程封闭。只要你能确保只有单个线程对共享的volatile变量执行写入操作，那么就可以安全地在这些共享的volatile变量上执行“读取-修改-写入”的操作。在这种情况下，相当于将修改操作封闭在单个线程中以防止发生竞态条件，并且volatile变量的可见性保证还确保了其他线程能看到最新的值。&lt;/li&gt;&#xA;&lt;li&gt;由于Ad-hoc线程封闭技术的脆弱性，因此在程序中尽量少用它，在可能的情况下，应该使用更强的线程封闭技术（例如，栈封闭或ThreadLocal类）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;332-栈封闭&#34;&gt;&#xA;  3.3.2 栈封闭&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#332-%e6%a0%88%e5%b0%81%e9%97%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;栈封闭是线程封闭的一种特例，在栈封闭中，只能通过局部变量才能访问对象。&lt;/li&gt;&#xA;&lt;li&gt;由于任何方法都无法获得对基本类型的引用，因此Java语言的这种语义就确保了基本类型的局部变量始终封闭在线程内。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;333-threadlocal-类&#34;&gt;&#xA;  3.3.3 ThreadLocal 类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#333-threadlocal-%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ThreadLocal对象通常用于防止对可变的单实例变量（Singleton）或全局变量进行共享。&lt;/li&gt;&#xA;&lt;li&gt;假设你需要将一个单线程应用程序移植到多线程环境中，通过将共享的全局变量转换为ThreadLocal对象（如果全局变量的语义允许），可以维持线程安全性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;34-不变性&#34;&gt;&#xA;  3.4 不变性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#34-%e4%b8%8d%e5%8f%98%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果某个对象在被创建后其状态就不能被修改，那么这个对象就称为不可变对象。&lt;/li&gt;&#xA;&lt;li&gt;不可变对象一定是线程安全的&lt;/li&gt;&#xA;&lt;li&gt;虽然在Java语言规范和Java内存模型中都没有给出不可变性的正式定义，但不可变性并不等于将对象中所有的域都声明为final类型，即使对象中所有的域都是final类型的，这个对象也仍然是可变的，因为在final类型的域中可以保存对可变对象的引用。&lt;/li&gt;&#xA;&lt;li&gt;当满足以下条件时，对象才是不可变的：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对象创建以后其状态就不能修改。&lt;/li&gt;&#xA;&lt;li&gt;对象的所有域都是final类型。&lt;/li&gt;&#xA;&lt;li&gt;对象是正确创建的（在对象的创建期间，this引用没有逸出）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;341-final域&#34;&gt;&#xA;  3.4.1 Final域&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#341-final%e5%9f%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;关键字final可以视为C++中const机制的一种受限版本，用于构造不可变性对象。final类型的域是不能修改的（但如果final域所引用的对象是可变的，那么这些被引用的对象是可以修改的）。&lt;/li&gt;&#xA;&lt;li&gt;即使对象是可变的，通过将对象的某些域声明为final类型，仍然可以简化对状态的判断，因此限制对象的可变性也就相当于限制了该对象可能的状态集合。&lt;/li&gt;&#xA;&lt;li&gt;正如“除非需要更高的可见性，否则应将所有的域都声明为私有域”[EJ Item 12]是一个良好的编程习惯，“除非需要某个域是可变的，否则应将其声明为final域”也是一个良好的编程习惯。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;342-示例使用volatile类型来发布不可变对象&#34;&gt;&#xA;  3.4.2 示例：使用volatile类型来发布不可变对象&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#342-%e7%a4%ba%e4%be%8b%e4%bd%bf%e7%94%a8volatile%e7%b1%bb%e5%9e%8b%e6%9d%a5%e5%8f%91%e5%b8%83%e4%b8%8d%e5%8f%af%e5%8f%98%e5%af%b9%e8%b1%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过使用包含多个状态变量的容器对象来维持不变性条件，并使用一个volatile类型的引用来确保可见性，使得Volatile Cached Factorizer在没有显式地使用锁的情况下仍然是线程安全的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;35-安全发布&#34;&gt;&#xA;  3.5 安全发布&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#35-%e5%ae%89%e5%85%a8%e5%8f%91%e5%b8%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;351-不正确的发布正确的对象被破坏&#34;&gt;&#xA;  3.5.1 不正确的发布：正确的对象被破坏&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#351-%e4%b8%8d%e6%ad%a3%e7%a1%ae%e7%9a%84%e5%8f%91%e5%b8%83%e6%ad%a3%e7%a1%ae%e7%9a%84%e5%af%b9%e8%b1%a1%e8%a2%ab%e7%a0%b4%e5%9d%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你不能指望一个尚未被完全创建的对象拥有完整性。某个观察该对象的线程将看到对象处于不一致的状态，然后看到对象的状态突然发生变化，即使线程在对象发布后还没有修改过它。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;352-不可变对象与初始化安全性&#34;&gt;&#xA;  3.5.2 不可变对象与初始化安全性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#352-%e4%b8%8d%e5%8f%af%e5%8f%98%e5%af%b9%e8%b1%a1%e4%b8%8e%e5%88%9d%e5%a7%8b%e5%8c%96%e5%ae%89%e5%85%a8%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我们已经知道，即使某个对象的引用对其他线程是可见的，也并不意味着对象状态对于使用该对象的线程来说一定是可见的。为了确保对象状态能呈现出一致的视图，就必须使用同步。&lt;/li&gt;&#xA;&lt;li&gt;任何线程都可以在不需要额外同步的情况下安全地访问不可变对象，即使在发布这些对象时没有使用同步。&lt;/li&gt;&#xA;&lt;li&gt;在没有额外同步的情况下，也可以安全地访问final类型的域。然而，如果final类型的域所指向的是可变对象，那么在访问这些域所指向的对象的状态时仍然需要同步。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;353-安全发布的常用模式&#34;&gt;&#xA;  3.5.3 安全发布的常用模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#353-%e5%ae%89%e5%85%a8%e5%8f%91%e5%b8%83%e7%9a%84%e5%b8%b8%e7%94%a8%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可变对象必须通过安全的方式来发布，这通常意味着在发布和使用该对象的线程时都必须使用同步。&lt;/li&gt;&#xA;&lt;li&gt;要安全地发布一个对象，对象的引用以及对象的状态必须同时对其他线程可见&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在静态初始化函数中初始化一个对象引用。&lt;/li&gt;&#xA;&lt;li&gt;将对象的引用保存到volatile类型的域或者AtomicReferance对象中。&lt;/li&gt;&#xA;&lt;li&gt;将对象的引用保存到某个正确构造对象的final类型域中。&lt;/li&gt;&#xA;&lt;li&gt;将对象的引用保存到一个由锁保护的域中。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;在线程安全容器内部的同步意味着，在将对象放入到某个容器，例如Vector或synchronizedList时，将满足上述最后一条需求。如果线程A将对象X放入一个线程安全的容器，随后线程B读取这个对象，那么可以确保B看到A设置的X状态，即便在这段读/写X的应用程序代码中没有包含显式的同步。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;线程安全库中的容器类提供了以下的安全发布保证&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过将一个键或者值放入Hashtable、synchronizedMap或者ConcurrentMap中，可以安全地将它发布给任何从这些容器中访问它的线程（无论是直接访问还是通过迭代器访问）。&lt;/li&gt;&#xA;&lt;li&gt;通过将某个元素放入Vector、CopyOnWriteArrayList、CopyOnWriteArraySet、synchronizedList或synchronizedSet中，可以将该元素安全地发布到任何从这些容器中访问该元素的线程。&lt;/li&gt;&#xA;&lt;li&gt;通过将某个元素放入BlockingQueue或者ConcurrentLinkedQueue中，可以将该元素安全地发布到任何从这些队列中访问该元素的线程。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;要发布一个静态构造的对象，最简单和最安全的方式是使用静态的初始化器 &lt;code&gt;public static Holder holder=new Holder（42）&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;静态初始化器由JVM在类的初始化阶段执行。由于在JVM内部存在着同步机制，因此通过这种方式初始化的任何对象都可以被安全地发布&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;354-事实不可变对象&#34;&gt;&#xA;  3.5.4 事实不可变对象&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#354-%e4%ba%8b%e5%ae%9e%e4%b8%8d%e5%8f%af%e5%8f%98%e5%af%b9%e8%b1%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果对象在发布后不会被修改，那么对于其他在没有额外同步的情况下安全地访问这些对象的线程来说，安全发布是足够的。&lt;/li&gt;&#xA;&lt;li&gt;如果对象从技术上来看是可变的，但其状态在发布后不会再改变，那么把这种对象称为“事实不可变对象（Effectively Immutable Object）”&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过使用事实不可变对象，不仅可以简化开发过程，而且还能由于减少了同步而提高性能。&lt;/li&gt;&#xA;&lt;li&gt;例如，Date本身是可变的￼，但如果将它作为不可变对象来使用，那么在多个线程之间共享Date对象时，就可以省去对锁的使用&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;355-可变对象&#34;&gt;&#xA;  3.5.5 可变对象&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#355-%e5%8f%af%e5%8f%98%e5%af%b9%e8%b1%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果对象在构造后可以修改，那么安全发布只能确保“发布当时”状态的可见性。对于可变对象，不仅在发布对象时需要使用同步，而且在每次对象访问时同样需要使用同步来确保后续修改操作的可见性。&lt;/li&gt;&#xA;&lt;li&gt;在并发程序中使用和共享对象时，可以使用一些实用的策略，包括：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;线程封闭。线程封闭的对象只能由一个线程拥有，对象被封闭在该线程中，并且只能由这个线程修改。&lt;/li&gt;&#xA;&lt;li&gt;只读共享。在没有额外同步的情况下，共享的只读对象可以由多个线程并发访问，但任何线程都不能修改它。共享的只读对象包括不可变对象和事实不可变对象。&lt;/li&gt;&#xA;&lt;li&gt;线程安全共享。线程安全的对象在其内部实现同步，因此多个线程可以通过对象的公有接口来进行访问而不需要进一步的同步。&lt;/li&gt;&#xA;&lt;li&gt;保护对象。被保护的对象只能通过持有特定的锁来访问。保护对象包括封装在其他线程安全对象中的对象，以及已发布的并且由某个特定锁保护的对象。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;356-安全地共享对象&#34;&gt;&#xA;  3.5.6 安全地共享对象&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#356-%e5%ae%89%e5%85%a8%e5%9c%b0%e5%85%b1%e4%ba%ab%e5%af%b9%e8%b1%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h2 id=&#34;第4章-对象的组合&#34;&gt;&#xA;  第4章 对象的组合&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0-%e5%af%b9%e8%b1%a1%e7%9a%84%e7%bb%84%e5%90%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;41-设计线程安全的类&#34;&gt;&#xA;  4.1 设计线程安全的类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#41-%e8%ae%be%e8%ae%a1%e7%ba%bf%e7%a8%8b%e5%ae%89%e5%85%a8%e7%9a%84%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;42-实例封闭&#34;&gt;&#xA;  4.2 实例封闭&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#42-%e5%ae%9e%e4%be%8b%e5%b0%81%e9%97%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;43-线程安全性的委托&#34;&gt;&#xA;  4.3 线程安全性的委托&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#43-%e7%ba%bf%e7%a8%8b%e5%ae%89%e5%85%a8%e6%80%a7%e7%9a%84%e5%a7%94%e6%89%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;44-在现有的线程安全类中添加功能&#34;&gt;&#xA;  4.4 在现有的线程安全类中添加功能&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#44-%e5%9c%a8%e7%8e%b0%e6%9c%89%e7%9a%84%e7%ba%bf%e7%a8%8b%e5%ae%89%e5%85%a8%e7%b1%bb%e4%b8%ad%e6%b7%bb%e5%8a%a0%e5%8a%9f%e8%83%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;45-将同步策略文档化&#34;&gt;&#xA;  4.5 将同步策略文档化&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#45-%e5%b0%86%e5%90%8c%e6%ad%a5%e7%ad%96%e7%95%a5%e6%96%87%e6%a1%a3%e5%8c%96&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第5章-基础构建模块&#34;&gt;&#xA;  第5章 基础构建模块&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac5%e7%ab%a0-%e5%9f%ba%e7%a1%80%e6%9e%84%e5%bb%ba%e6%a8%a1%e5%9d%97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;51-同步容器类&#34;&gt;&#xA;  5.1 同步容器类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#51-%e5%90%8c%e6%ad%a5%e5%ae%b9%e5%99%a8%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;52-并发容器&#34;&gt;&#xA;  5.2 并发容器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#52-%e5%b9%b6%e5%8f%91%e5%ae%b9%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;53-阻塞队列和生产者-消费者模式&#34;&gt;&#xA;  5.3 阻塞队列和生产者-消费者模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#53-%e9%98%bb%e5%a1%9e%e9%98%9f%e5%88%97%e5%92%8c%e7%94%9f%e4%ba%a7%e8%80%85-%e6%b6%88%e8%b4%b9%e8%80%85%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;54-阻塞方法与中断方法&#34;&gt;&#xA;  5.4 阻塞方法与中断方法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#54-%e9%98%bb%e5%a1%9e%e6%96%b9%e6%b3%95%e4%b8%8e%e4%b8%ad%e6%96%ad%e6%96%b9%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;55-同步工具类&#34;&gt;&#xA;  5.5 同步工具类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#55-%e5%90%8c%e6%ad%a5%e5%b7%a5%e5%85%b7%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;56-构建高效且可伸缩的结果缓存&#34;&gt;&#xA;  5.6 构建高效且可伸缩的结果缓存&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#56-%e6%9e%84%e5%bb%ba%e9%ab%98%e6%95%88%e4%b8%94%e5%8f%af%e4%bc%b8%e7%bc%a9%e7%9a%84%e7%bb%93%e6%9e%9c%e7%bc%93%e5%ad%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第6章-任务执行&#34;&gt;&#xA;  第6章 任务执行&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0-%e4%bb%bb%e5%8a%a1%e6%89%a7%e8%a1%8c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;61-在线程中执行任务&#34;&gt;&#xA;  6.1 在线程中执行任务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#61-%e5%9c%a8%e7%ba%bf%e7%a8%8b%e4%b8%ad%e6%89%a7%e8%a1%8c%e4%bb%bb%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;62-executor框架&#34;&gt;&#xA;  6.2 Executor框架&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#62-executor%e6%a1%86%e6%9e%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;63-找出可利用的并行性&#34;&gt;&#xA;  6.3 找出可利用的并行性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#63-%e6%89%be%e5%87%ba%e5%8f%af%e5%88%a9%e7%94%a8%e7%9a%84%e5%b9%b6%e8%a1%8c%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第7章-取消与关闭&#34;&gt;&#xA;  第7章 取消与关闭&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac7%e7%ab%a0-%e5%8f%96%e6%b6%88%e4%b8%8e%e5%85%b3%e9%97%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;71-任务取消&#34;&gt;&#xA;  7.1 任务取消&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#71-%e4%bb%bb%e5%8a%a1%e5%8f%96%e6%b6%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;72-停止基于线程的服务&#34;&gt;&#xA;  7.2 停止基于线程的服务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#72-%e5%81%9c%e6%ad%a2%e5%9f%ba%e4%ba%8e%e7%ba%bf%e7%a8%8b%e7%9a%84%e6%9c%8d%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;73-处理非正常的线程终止&#34;&gt;&#xA;  7.3 处理非正常的线程终止&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#73-%e5%a4%84%e7%90%86%e9%9d%9e%e6%ad%a3%e5%b8%b8%e7%9a%84%e7%ba%bf%e7%a8%8b%e7%bb%88%e6%ad%a2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;74-jvm关闭&#34;&gt;&#xA;  7.4 JVM关闭&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#74-jvm%e5%85%b3%e9%97%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第8章-线程池的使用&#34;&gt;&#xA;  第8章 线程池的使用&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac8%e7%ab%a0-%e7%ba%bf%e7%a8%8b%e6%b1%a0%e7%9a%84%e4%bd%bf%e7%94%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;81-在任务与执行策略之间的隐性耦合&#34;&gt;&#xA;  8.1 在任务与执行策略之间的隐性耦合&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#81-%e5%9c%a8%e4%bb%bb%e5%8a%a1%e4%b8%8e%e6%89%a7%e8%a1%8c%e7%ad%96%e7%95%a5%e4%b9%8b%e9%97%b4%e7%9a%84%e9%9a%90%e6%80%a7%e8%80%a6%e5%90%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;82-设置线程池的大小&#34;&gt;&#xA;  8.2 设置线程池的大小&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#82-%e8%ae%be%e7%bd%ae%e7%ba%bf%e7%a8%8b%e6%b1%a0%e7%9a%84%e5%a4%a7%e5%b0%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;83-配置threadpoolexecutor&#34;&gt;&#xA;  8.3 配置ThreadPoolExecutor&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#83-%e9%85%8d%e7%bd%aethreadpoolexecutor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;84-扩展threadpoolexecutor&#34;&gt;&#xA;  8.4 扩展ThreadPoolExecutor&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#84-%e6%89%a9%e5%b1%95threadpoolexecutor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;85-递归算法的并行化&#34;&gt;&#xA;  8.5 递归算法的并行化&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#85-%e9%80%92%e5%bd%92%e7%ae%97%e6%b3%95%e7%9a%84%e5%b9%b6%e8%a1%8c%e5%8c%96&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第9章-图形用户界面应用程序&#34;&gt;&#xA;  第9章 图形用户界面应用程序&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac9%e7%ab%a0-%e5%9b%be%e5%bd%a2%e7%94%a8%e6%88%b7%e7%95%8c%e9%9d%a2%e5%ba%94%e7%94%a8%e7%a8%8b%e5%ba%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;91-为什么gui是单线程的&#34;&gt;&#xA;  9.1 为什么GUI是单线程的&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#91-%e4%b8%ba%e4%bb%80%e4%b9%88gui%e6%98%af%e5%8d%95%e7%ba%bf%e7%a8%8b%e7%9a%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;92-短时间的gui任务&#34;&gt;&#xA;  9.2 短时间的GUI任务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#92-%e7%9f%ad%e6%97%b6%e9%97%b4%e7%9a%84gui%e4%bb%bb%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;93-长时间的gui任务&#34;&gt;&#xA;  9.3 长时间的GUI任务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#93-%e9%95%bf%e6%97%b6%e9%97%b4%e7%9a%84gui%e4%bb%bb%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;94-共享数据模型&#34;&gt;&#xA;  9.4 共享数据模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#94-%e5%85%b1%e4%ba%ab%e6%95%b0%e6%8d%ae%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;95-其他形式的单线程子系统&#34;&gt;&#xA;  9.5 其他形式的单线程子系统&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#95-%e5%85%b6%e4%bb%96%e5%bd%a2%e5%bc%8f%e7%9a%84%e5%8d%95%e7%ba%bf%e7%a8%8b%e5%ad%90%e7%b3%bb%e7%bb%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第10章-避免活跃性危险&#34;&gt;&#xA;  第10章 避免活跃性危险&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac10%e7%ab%a0-%e9%81%bf%e5%85%8d%e6%b4%bb%e8%b7%83%e6%80%a7%e5%8d%b1%e9%99%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;101-死锁&#34;&gt;&#xA;  10.1 死锁&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#101-%e6%ad%bb%e9%94%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;102-死锁的避免与诊断&#34;&gt;&#xA;  10.2 死锁的避免与诊断&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#102-%e6%ad%bb%e9%94%81%e7%9a%84%e9%81%bf%e5%85%8d%e4%b8%8e%e8%af%8a%e6%96%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;103-其他活跃性危险&#34;&gt;&#xA;  10.3 其他活跃性危险&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#103-%e5%85%b6%e4%bb%96%e6%b4%bb%e8%b7%83%e6%80%a7%e5%8d%b1%e9%99%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第11章-性能与可伸缩性&#34;&gt;&#xA;  第11章 性能与可伸缩性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac11%e7%ab%a0-%e6%80%a7%e8%83%bd%e4%b8%8e%e5%8f%af%e4%bc%b8%e7%bc%a9%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;111-对性能的思考&#34;&gt;&#xA;  11.1 对性能的思考&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#111-%e5%af%b9%e6%80%a7%e8%83%bd%e7%9a%84%e6%80%9d%e8%80%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;112-amdahl定律&#34;&gt;&#xA;  11.2 Amdahl定律&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#112-amdahl%e5%ae%9a%e5%be%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;113-线程引入的开销&#34;&gt;&#xA;  11.3 线程引入的开销&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#113-%e7%ba%bf%e7%a8%8b%e5%bc%95%e5%85%a5%e7%9a%84%e5%bc%80%e9%94%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;114-减少锁的竞争&#34;&gt;&#xA;  11.4 减少锁的竞争&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#114-%e5%87%8f%e5%b0%91%e9%94%81%e7%9a%84%e7%ab%9e%e4%ba%89&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;115-示例比较map的性能&#34;&gt;&#xA;  11.5 示例：比较Map的性能&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#115-%e7%a4%ba%e4%be%8b%e6%af%94%e8%be%83map%e7%9a%84%e6%80%a7%e8%83%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;116-减少上下文切换的开销&#34;&gt;&#xA;  11.6 减少上下文切换的开销&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#116-%e5%87%8f%e5%b0%91%e4%b8%8a%e4%b8%8b%e6%96%87%e5%88%87%e6%8d%a2%e7%9a%84%e5%bc%80%e9%94%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第12章-并发程序的测试&#34;&gt;&#xA;  第12章 并发程序的测试&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac12%e7%ab%a0-%e5%b9%b6%e5%8f%91%e7%a8%8b%e5%ba%8f%e7%9a%84%e6%b5%8b%e8%af%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;121-正确性测试&#34;&gt;&#xA;  12.1 正确性测试&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#121-%e6%ad%a3%e7%a1%ae%e6%80%a7%e6%b5%8b%e8%af%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;122-性能测试&#34;&gt;&#xA;  12.2 性能测试&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#122-%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;123-避免性能测试的陷阱&#34;&gt;&#xA;  12.3 避免性能测试的陷阱&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#123-%e9%81%bf%e5%85%8d%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95%e7%9a%84%e9%99%b7%e9%98%b1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;124-其他的测试方法&#34;&gt;&#xA;  12.4 其他的测试方法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#124-%e5%85%b6%e4%bb%96%e7%9a%84%e6%b5%8b%e8%af%95%e6%96%b9%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第13章-显式锁&#34;&gt;&#xA;  第13章 显式锁&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac13%e7%ab%a0-%e6%98%be%e5%bc%8f%e9%94%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;131-lock与reentrantlock&#34;&gt;&#xA;  13.1 Lock与ReentrantLock&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#131-lock%e4%b8%8ereentrantlock&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;132-性能考虑因素&#34;&gt;&#xA;  13.2 性能考虑因素&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#132-%e6%80%a7%e8%83%bd%e8%80%83%e8%99%91%e5%9b%a0%e7%b4%a0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;133-公平性&#34;&gt;&#xA;  13.3 公平性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#133-%e5%85%ac%e5%b9%b3%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;134-在synchronized和reentrantlock之间进行选择&#34;&gt;&#xA;  13.4 在synchronized和ReentrantLock之间进行选择&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#134-%e5%9c%a8synchronized%e5%92%8creentrantlock%e4%b9%8b%e9%97%b4%e8%bf%9b%e8%a1%8c%e9%80%89%e6%8b%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;135-读-写锁&#34;&gt;&#xA;  13.5 读-写锁&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#135-%e8%af%bb-%e5%86%99%e9%94%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第14章-构建自定义的同步工具&#34;&gt;&#xA;  第14章 构建自定义的同步工具&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac14%e7%ab%a0-%e6%9e%84%e5%bb%ba%e8%87%aa%e5%ae%9a%e4%b9%89%e7%9a%84%e5%90%8c%e6%ad%a5%e5%b7%a5%e5%85%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;141-状态依赖性的管理&#34;&gt;&#xA;  14.1 状态依赖性的管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#141-%e7%8a%b6%e6%80%81%e4%be%9d%e8%b5%96%e6%80%a7%e7%9a%84%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;142-使用条件队列&#34;&gt;&#xA;  14.2 使用条件队列&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#142-%e4%bd%bf%e7%94%a8%e6%9d%a1%e4%bb%b6%e9%98%9f%e5%88%97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;143-显式的condition对象&#34;&gt;&#xA;  14.3 显式的Condition对象&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#143-%e6%98%be%e5%bc%8f%e7%9a%84condition%e5%af%b9%e8%b1%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;144-synchronizer剖析&#34;&gt;&#xA;  14.4 Synchronizer剖析&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#144-synchronizer%e5%89%96%e6%9e%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;145-abstractqueuedsynchronizer&#34;&gt;&#xA;  14.5 AbstractQueuedSynchronizer&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#145-abstractqueuedsynchronizer&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;146-javautilconcurrent同步器类中的aqs&#34;&gt;&#xA;  14.6 java.util.concurrent同步器类中的AQS&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#146-javautilconcurrent%e5%90%8c%e6%ad%a5%e5%99%a8%e7%b1%bb%e4%b8%ad%e7%9a%84aqs&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第15章-原子变量与非阻塞同步机制&#34;&gt;&#xA;  第15章 原子变量与非阻塞同步机制&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac15%e7%ab%a0-%e5%8e%9f%e5%ad%90%e5%8f%98%e9%87%8f%e4%b8%8e%e9%9d%9e%e9%98%bb%e5%a1%9e%e5%90%8c%e6%ad%a5%e6%9c%ba%e5%88%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;151-锁的劣势&#34;&gt;&#xA;  15.1 锁的劣势&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#151-%e9%94%81%e7%9a%84%e5%8a%a3%e5%8a%bf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;152-硬件对并发的支持&#34;&gt;&#xA;  15.2 硬件对并发的支持&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#152-%e7%a1%ac%e4%bb%b6%e5%af%b9%e5%b9%b6%e5%8f%91%e7%9a%84%e6%94%af%e6%8c%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;153-原子变量类&#34;&gt;&#xA;  15.3 原子变量类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#153-%e5%8e%9f%e5%ad%90%e5%8f%98%e9%87%8f%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;154-非阻塞算法&#34;&gt;&#xA;  15.4 非阻塞算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#154-%e9%9d%9e%e9%98%bb%e5%a1%9e%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第16章-java内存模型&#34;&gt;&#xA;  第16章 Java内存模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac16%e7%ab%a0-java%e5%86%85%e5%ad%98%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;161-什么是内存模型为什么需要它&#34;&gt;&#xA;  16.1 什么是内存模型，为什么需要它&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#161-%e4%bb%80%e4%b9%88%e6%98%af%e5%86%85%e5%ad%98%e6%a8%a1%e5%9e%8b%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e5%ae%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;162-发布&#34;&gt;&#xA;  16.2 发布&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#162-%e5%8f%91%e5%b8%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;163-初始化过程中的安全性&#34;&gt;&#xA;  16.3 初始化过程中的安全性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#163-%e5%88%9d%e5%a7%8b%e5%8c%96%e8%bf%87%e7%a8%8b%e4%b8%ad%e7%9a%84%e5%ae%89%e5%85%a8%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;</description>
    </item>
    <item>
      <title>Java并发编程实战</title>
      <link>/zh/zh/post/books/computer-science/java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/books/computer-science/java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/10484692/&#34;&gt;Java并发编程实战&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第1章-简介&#34;&gt;&#xA;  第1章 简介&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-%e7%ae%80%e4%bb%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-并发简史&#34;&gt;&#xA;  1.1 并发简史&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-%e5%b9%b6%e5%8f%91%e7%ae%80%e5%8f%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;12-线程的优势&#34;&gt;&#xA;  1.2 线程的优势&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#12-%e7%ba%bf%e7%a8%8b%e7%9a%84%e4%bc%98%e5%8a%bf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;13-线程带来的风险&#34;&gt;&#xA;  1.3 线程带来的风险&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#13-%e7%ba%bf%e7%a8%8b%e5%b8%a6%e6%9d%a5%e7%9a%84%e9%a3%8e%e9%99%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;14-线程无处不在&#34;&gt;&#xA;  1.4 线程无处不在&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#14-%e7%ba%bf%e7%a8%8b%e6%97%a0%e5%a4%84%e4%b8%8d%e5%9c%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;开发线程安全的类比开发非线程安全的类要更加谨慎和细致&lt;/li&gt;&#xA;&lt;li&gt;每个Java应用程序都会使用线程&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当JVM启动时，它将为JVM的内部任务（例如，&lt;strong&gt;垃圾收集&lt;/strong&gt;、&lt;strong&gt;终结操作&lt;/strong&gt;等）创建后台线程，并创建一个&lt;strong&gt;主线程&lt;/strong&gt;来运行main方法。&lt;/li&gt;&#xA;&lt;li&gt;AWT（Abstract Window Toolkit，抽象窗口工具库）和Swing的用户界面框架将创建线程来管理&lt;strong&gt;用户界面事件&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;Timer将创建线程来&lt;strong&gt;执行延迟任务&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;一些组件框架，例如Servlet和RMI，都会创建线程池并调用这些线程中的方法。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;当某个框架在应用程序中引入并发性时，&lt;strong&gt;通常不可能将并发性仅局限于框架代码&lt;/strong&gt;，因为框架本身会回调（Callback）应用程序的代码，而这些代码将访问应用程序的状态。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;对线程安全性的需求也不能局限于被调用的代码，而是要延伸到需要访问这些代码所访问的程序状态的所有代码路径&lt;/strong&gt;。因此，对线程安全性的需求将在程序中蔓延开来。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第2章-线程安全性&#34;&gt;&#xA;  第2章 线程安全性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-%e7%ba%bf%e7%a8%8b%e5%ae%89%e5%85%a8%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;要编写线程安全的代码，其核心在于要&lt;strong&gt;对状态访问操作进行管理&lt;/strong&gt;，特别是对&lt;strong&gt;共享的（Shared）和可变的（Mutable）状态&lt;/strong&gt;的访问。&lt;/li&gt;&#xA;&lt;li&gt;“共享”意味着变量可以由多个线程同时访问，而“可变”则意味着变量的值在其生命周期内可以发生变化。&lt;/li&gt;&#xA;&lt;li&gt;一个对象是否需要是线程安全的，取决于它是否被多个线程访问&lt;/li&gt;&#xA;&lt;li&gt;当多个线程访问某个状态变量并且其中有一个线程执行写入操作时，必须采用同步机制来协同这些线程对变量的访问。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Java中的主要同步机制是关键字&lt;strong&gt;synchronized&lt;/strong&gt;，它提供了一种独占的加锁方式，但“同步”这个术语还包括&lt;strong&gt;volatile类型的变量&lt;/strong&gt;，&lt;strong&gt;显式锁（Explicit Lock）&lt;strong&gt;以及&lt;/strong&gt;原子变量&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;21-什么是线程安全性&#34;&gt;&#xA;  2.1 什么是线程安全性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#21-%e4%bb%80%e4%b9%88%e6%98%af%e7%ba%bf%e7%a8%8b%e5%ae%89%e5%85%a8%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在线程安全性的定义中，最核心的概念就是&lt;strong&gt;正确性&lt;/strong&gt;。如果对线程安全性的定义是模糊的，那么就是因为缺乏对正确性的清晰定义。&lt;/li&gt;&#xA;&lt;li&gt;正确性的含义是，&lt;strong&gt;某个类的行为与其规范完全一致&lt;/strong&gt;。在良好的规范中通常会定义各种不变性条件（Invariant）来约束对象的状态，以及定义各种后验条件（Postcondition）来描述对象操作的结果。&lt;/li&gt;&#xA;&lt;li&gt;线程安全性：&lt;strong&gt;当多个线程访问某个类时，这个类始终都能表现出正确的行为，那么就称这个类是线程安全的&lt;/strong&gt;。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当多个线程访问某个类时，不管运行时环境&lt;strong&gt;采用何种调度方式&lt;/strong&gt;或者这些&lt;strong&gt;线程将如何交替执行&lt;/strong&gt;，并且&lt;strong&gt;在主调代码中不需要任何额外的同步或协同&lt;/strong&gt;，这个类都能表现出正确的行为，那么就称这个类是线程安全的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;在线程安全类中封装了必要的同步机制，因此客户端无须进一步采取同步措施。&lt;/li&gt;&#xA;&lt;li&gt;无状态对象一定是线程安全的&#xA;&lt;ul&gt;&#xA;&lt;li&gt;大多数Servlet都是无状态的，从而极大地降低了在实现Servlet线程安全性时的复杂性。只有当Servlet在处理请求时需要保存一些信息，线程安全性才会成为一个问题。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;22-原子性&#34;&gt;&#xA;  2.2 原子性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#22-%e5%8e%9f%e5%ad%90%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在并发编程中，这种由于不恰当的执行时序而出现不正确的结果是一种非常重要的情况，它有一个正式的名字：&lt;strong&gt;竞态条件（Race Condition）&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;221-竞态条件&#34;&gt;&#xA;  2.2.1 竞态条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#221-%e7%ab%9e%e6%80%81%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;当某个计算的正确性取决于多个线程的交替执行时序时，那么就会发生竞态条件&lt;/strong&gt;。换句话说，就是正确的结果要取决于运气&lt;/li&gt;&#xA;&lt;li&gt;“先检查后执行”：首先观察到某个条件为真（例如文件X不存在），然后根据这个观察结果采用相应的动作（创建文件X），但事实上，&lt;strong&gt;在你观察到这个结果以及开始创建文件之间，观察结果可能变得无效&lt;/strong&gt;（另一个线程在这期间创建了文件X），从而导致各种问题（未预期的异常、数据被覆盖、文件被破坏等）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;222-示例延迟初始化中的竞态条件&#34;&gt;&#xA;  2.2.2 示例：延迟初始化中的竞态条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#222-%e7%a4%ba%e4%be%8b%e5%bb%b6%e8%bf%9f%e5%88%9d%e5%a7%8b%e5%8c%96%e4%b8%ad%e7%9a%84%e7%ab%9e%e6%80%81%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;延迟初始化的目的是将对象的初始化操作推迟到实际被使用时才进行，同时要确保只被初始化一次。&lt;/li&gt;&#xA;&lt;li&gt;假定线程A和线程B同时执行getInstance。A看到instance为空，因而创建一个新的ExpensiveObject实例。B同样需要判断instance是否为空。此时的instance是否为空，要取决于不可预测的时序，包括线程的调度方式，以及A需要花多长时间来初始化ExpensiveObject并设置instance。如果当B检查时，instance为空，那么在两次调用getInstance时可能会得到不同的结果，即使getInstance通常被认为是返回相同的实例。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;223-复合操作&#34;&gt;&#xA;  2.2.3 复合操作&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#223-%e5%a4%8d%e5%90%88%e6%93%8d%e4%bd%9c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;要避免竞态条件问题，就必须在某个线程修改该变量时，通过某种方式防止其他线程使用这个变量，从而确保其他线程只能在修改操作完成之前或之后读取和修改状态，而不是在修改状态的过程中。&lt;/li&gt;&#xA;&lt;li&gt;假定有两个操作A和B，如果从执行A的线程来看，当另一个线程执行B时，要么将B全部执行完，要么完全不执行B，那么A和B对彼此来说是&lt;strong&gt;原子的&lt;/strong&gt;。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;原子操作是指，对于访问同一个状态的所有操作（包括该操作本身）来说，这个操作是一个以原子方式执行的操作。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;在&lt;strong&gt;java.util.concurrent.atomic&lt;/strong&gt;包中包含了一些原子变量类，用于实现在数值和对象引用上的原子状态转换。通过用AtomicLong来代替long类型的计数器，能够确保所有对计数器状态的访问操作都是原子的。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当在无状态的类中添加一个状态时，如果该状态完全由线程安全的对象来管理，那么这个类仍然是线程安全的&lt;/li&gt;&#xA;&lt;li&gt;当状态变量的数量由一个变为多个时，并不会像状态变量数量由零个变为一个那样简单&lt;/li&gt;&#xA;&lt;li&gt;在实际情况中，应尽可能地使用现有的线程安全对象（例如AtomicLong）来管理类的状态。与非线程安全的对象相比，判断线程安全对象的可能状态及其状态转换情况要更为容易，从而也更容易维护和验证线程安全性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;23-加锁机制&#34;&gt;&#xA;  2.3 加锁机制&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#23-%e5%8a%a0%e9%94%81%e6%9c%ba%e5%88%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;要保持状态的一致性，就需要在单个原子操作中更新所有相关的状态变量。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;231-内置锁&#34;&gt;&#xA;  2.3.1 内置锁&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#231-%e5%86%85%e7%bd%ae%e9%94%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Java提供了一种内置的锁机制来支持原子性：同步代码块（Synchronized Block）。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;以关键字synchronized来修饰的方法就是一种横跨整个方法体的同步代码块，其中该同步代码块的锁就是方法调用所在的对象。静态的synchronized方法以Class对象作为锁。&lt;/li&gt;&#xA;&lt;li&gt;每个Java对象都可以用做一个实现同步的锁，这些锁被称为内置锁（Intrinsic Lock）或监视器锁（Monitor Lock）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;232-重入&#34;&gt;&#xA;  2.3.2 重入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#232-%e9%87%8d%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当某个线程请求一个由其他线程持有的锁时，发出请求的线程就会阻塞&#xA;&lt;ul&gt;&#xA;&lt;li&gt;由于内置锁是可重入的，因此如果某个线程试图获得一个已经由它自己持有的锁，那么这个请求就会成功。“重入”意味着获取锁的操作的粒度是“线程”，而不是“调用”&lt;/li&gt;&#xA;&lt;li&gt;重入的一种实现方法是，为每个锁关联一个获取计数值和一个所有者线程。&lt;/li&gt;&#xA;&lt;li&gt;当计数值为0时，这个锁就被认为是没有被任何线程持有。当线程请求一个未被持有的锁时，JVM将记下锁的持有者，并且将获取计数值置为1。如果同一个线程再次获取这个锁，计数值将递增，而当线程退出同步代码块时，计数器会相应地递减。当计数值为0时，这个锁将被释放。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;24-用锁来保护状态&#34;&gt;&#xA;  2.4 用锁来保护状态&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#24-%e7%94%a8%e9%94%81%e6%9d%a5%e4%bf%9d%e6%8a%a4%e7%8a%b6%e6%80%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对于可能被多个线程同时访问的可变状态变量，在访问它时都需要持有同一个锁，在这种情况下，我们称状态变量是由这个锁保护的。&lt;/li&gt;&#xA;&lt;li&gt;之所以每个对象都有一个内置锁，只是为了免去显式地创建锁对象。&lt;/li&gt;&#xA;&lt;li&gt;每个共享的和可变的变量都应该只由一个锁来保护，从而使维护人员知道是哪一个锁。&lt;/li&gt;&#xA;&lt;li&gt;一种常见的加锁约定是，将所有的可变状态都封装在对象内部，并通过对象的内置锁对所有访问可变状态的代码路径进行同步，使得在该对象上不会发生并发访问。&lt;/li&gt;&#xA;&lt;li&gt;并非所有数据都需要锁的保护，只有被多个线程同时访问的可变数据才需要通过锁来保护。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;25-活跃性与性能&#34;&gt;&#xA;  2.5 活跃性与性能&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#25-%e6%b4%bb%e8%b7%83%e6%80%a7%e4%b8%8e%e6%80%a7%e8%83%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不良并发（Poor Concurrency）应用程序：可同时调用的数量，不仅受到可用处理资源的限制，还受到应用程序本身结构的限制。&lt;/li&gt;&#xA;&lt;li&gt;当实现某个同步策略时，一定不要盲目地为了性能而牺牲简单性（这可能会破坏安全性）。&lt;/li&gt;&#xA;&lt;li&gt;无论是执行计算密集的操作，还是在执行某个可能阻塞的操作，如果持有锁的时间过长，那么都会带来活跃性或性能问题。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当执行时间较长的计算或者可能无法快速完成的操作时（例如，网络I/O或控制台I/O），一定不要持有锁。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第3章-对象的共享&#34;&gt;&#xA;  第3章 对象的共享&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0-%e5%af%b9%e8%b1%a1%e7%9a%84%e5%85%b1%e4%ba%ab&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;同步还有另一个重要的方面：内存可见性（Memory Visibility）。我们不仅希望防止某个线程正在使用对象状态而另一个线程在同时修改该状态，而且希望确保当一个线程修改了对象状态后，其他线程能够看到发生的状态变化。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;31-可见性&#34;&gt;&#xA;  3.1 可见性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#31-%e5%8f%af%e8%a7%81%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在没有同步的情况下，编译器、处理器以及运行时等都可能对操作的执行顺序进行一些意想不到的调整。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;311-失效数据&#34;&gt;&#xA;  3.1.1 失效数据&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#311-%e5%a4%b1%e6%95%88%e6%95%b0%e6%8d%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;312非原子的64位操作&#34;&gt;&#xA;  3.1.2　非原子的64位操作&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#312%e9%9d%9e%e5%8e%9f%e5%ad%90%e7%9a%8464%e4%bd%8d%e6%93%8d%e4%bd%9c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当线程在没有同步的情况下读取变量时，可能会得到一个失效值，但至少这个值是由之前某个线程设置的值，而不是一个随机值。这种安全性保证也被称为最低安全性（out-of-thin-air safety）&#xA;&lt;ul&gt;&#xA;&lt;li&gt;最低安全性适用于绝大多数变量，但是存在一个例外：非volatile类型的64位数值变量（double和long，请参见3.1.4节）。Java内存模型要求，变量的读取操作和写入操作都必须是原子操作，但对于非volatile类型的long和double变量，JVM允许将64位的读操作或写操作分解为两个32位的操作。当读取一个非volatile类型的long变量时，如果对该变量的读操作和写操作在不同的线程中执行，那么很可能会读取到某个值的高32位和另一个值的低32位￼。因此，即使不考虑失效数据问题，在多线程程序中使用共享且可变的long和double等类型的变量也是不安全的，除非用关键字volatile来声明它们，或者用锁保护起来。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;313加锁与可见性&#34;&gt;&#xA;  3.1.3　加锁与可见性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#313%e5%8a%a0%e9%94%81%e4%b8%8e%e5%8f%af%e8%a7%81%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;加锁的含义不仅仅局限于互斥行为，还包括内存可见性。为了确保所有线程都能看到共享变量的最新值，所有执行读操作或者写操作的线程都必须在同一个锁上同步。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;314volatile变量&#34;&gt;&#xA;  3.1.4　Volatile变量&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#314volatile%e5%8f%98%e9%87%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Java语言提供了一种稍弱的同步机制，即volatile变量，用来确保将变量的更新操作通知到其他线程。当把变量声明为volatile类型后，编译器与运行时都会注意到这个变量是共享的，因此不会将该变量上的操作与其他内存操作一起重排序。volatile变量不会被缓存在寄存器或者对其他处理器不可见的地方，因此在读取volatile类型的变量时总会返回最新写入的值。&lt;/li&gt;&#xA;&lt;li&gt;在访问volatile变量时不会执行加锁操作，因此也就不会使执行线程阻塞，因此volatile变量是一种比sychronized关键字更轻量级的同步机制。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在当前大多数处理器架构上，读取volatile变量的开销只比读取非volatile变量的开销略高一些。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;我们并不建议过度依赖volatile变量提供的可见性。如果在代码中依赖volatile变量来控制状态的可见性，通常比使用锁的代码更脆弱，也更难以理解。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;仅当volatile变量能简化代码的实现以及对同步策略的验证时，才应该使用它们。&lt;/li&gt;&#xA;&lt;li&gt;如果在验证正确性时需要对可见性进行复杂的判断，那么就不要使用volatile变量。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;volatile的语义不足以确保递增操作（count++）的原子性，除非你能确保只有一个线程对变量执行写操作。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;加锁机制既可以确保可见性又可以确保原子性，而volatile变量只能确保可见性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;当且仅当满足以下所有条件时，才应该使用volatile变量&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对变量的写入操作不依赖变量的当前值，或者你能确保只有单个线程更新变量的值。&lt;/li&gt;&#xA;&lt;li&gt;该变量不会与其他状态变量一起纳入不变性条件中。&lt;/li&gt;&#xA;&lt;li&gt;在访问变量时不需要加锁。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;调试小提示：对于服务器应用程序，无论在开发阶段还是在测试阶段，当启动JVM时一定都要指定-server命令行选项。server模式的JVM将比client模式的JVM进行更多的优化，例如将循环中未被修改的变量提升到循环外部，因此在开发环境（client模式的JVM）中能正确运行的代码，可能会在部署环境（server模式的JVM）中运行失败。例如，如果在程序清单3-4中“忘记”把asleep变量声明为volatile类型，那么server模式的JVM会将asleep的判断条件提升到循环体外部（这将导致一个无限循环），但client模式的JVM不会这么做。在解决开发环境中出现无限循环问题时，解决这个问题的开销远小于解决在应用环境出现无限循环的开销。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;32-发布与逸出&#34;&gt;&#xA;  3.2 发布与逸出&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#32-%e5%8f%91%e5%b8%83%e4%b8%8e%e9%80%b8%e5%87%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;“发布（Publish）”一个对象的意思是指，使对象能够在当前作用域之外的代码中使用。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;将一个指向该对象的引用保存到其他代码可以访问的地方，或者在某一个非私有的方法中返回该引用，或者将引用传递到其他类的方法中。在许多情况中，我们要确保对象及其内部状态不被发布。而在某些情况下，我们又需要发布某个对象，但如果在发布时要确保线程安全性，则可能需要同步。发布内部状态可能会破坏封装性，并使得程序难以维持不变性条件。例如，如果在对象构造完成之前就发布该对象，就会破坏线程安全性。当某个不应该发布的对象被发布时，这种情况就被称为逸出（Escape）。&lt;/li&gt;&#xA;&lt;li&gt;发布对象的最简单方法是将对象的引用保存到一个公有的静态变量中，以便任何类和线程都能看见该对象&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;一般来说，如果一个已经发布的对象能够通过非私有的变量引用和方法调用到达其他的对象，那么这些对象也都会被发布。&lt;/li&gt;&#xA;&lt;li&gt;当某个对象逸出后，你必须假设有某个类或线程可能会误用该对象。这正是需要使用封装的最主要原因：封装能够使得对程序的正确性进行分析变得可能，并使得无意中破坏设计约束条件变得更难。&lt;/li&gt;&#xA;&lt;li&gt;安全的对象构造过程&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不要在构造过程中使this引用逸出&lt;/li&gt;&#xA;&lt;li&gt;在构造过程中使this引用逸出的一个常见错误是，在构造函数中启动一个线程。当对象在其构造函数中创建一个线程时，无论是显式创建（通过将它传给构造函数）还是隐式创建（由于Thread或Runnable是该对象的一个内部类），this引用都会被新创建的线程共享。在对象尚未完全构造之前，新的线程就可以看见它。&lt;/li&gt;&#xA;&lt;li&gt;在构造函数中创建线程并没有错误，但最好不要立即启动它，而是通过一个start或initialize方法来启动&lt;/li&gt;&#xA;&lt;li&gt;在构造函数中调用一个可改写的实例方法时（既不是私有方法，也不是终结方法），同样会导致this引用在构造过程中逸出。&lt;/li&gt;&#xA;&lt;li&gt;如果想在构造函数中注册一个事件监听器或启动线程，那么可以使用一个私有的构造函数和一个公共的工厂方法（Factory Method），从而避免不正确的构造过程&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;33-线程封闭&#34;&gt;&#xA;  3.3 线程封闭&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#33-%e7%ba%bf%e7%a8%8b%e5%b0%81%e9%97%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Swing应用程序的许多并发错误都是由于错误地在另一个线程中使用了这些被封闭的对象。&lt;/li&gt;&#xA;&lt;li&gt;线程封闭是在程序设计中的一个考虑因素，必须在程序中实现。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;331-ad-hoc线程封闭&#34;&gt;&#xA;  3.3.1 Ad-hoc线程封闭&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#331-ad-hoc%e7%ba%bf%e7%a8%8b%e5%b0%81%e9%97%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在volatile变量上存在一种特殊的线程封闭。只要你能确保只有单个线程对共享的volatile变量执行写入操作，那么就可以安全地在这些共享的volatile变量上执行“读取-修改-写入”的操作。在这种情况下，相当于将修改操作封闭在单个线程中以防止发生竞态条件，并且volatile变量的可见性保证还确保了其他线程能看到最新的值。&lt;/li&gt;&#xA;&lt;li&gt;由于Ad-hoc线程封闭技术的脆弱性，因此在程序中尽量少用它，在可能的情况下，应该使用更强的线程封闭技术（例如，栈封闭或ThreadLocal类）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;332-栈封闭&#34;&gt;&#xA;  3.3.2 栈封闭&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#332-%e6%a0%88%e5%b0%81%e9%97%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;栈封闭是线程封闭的一种特例，在栈封闭中，只能通过局部变量才能访问对象。&lt;/li&gt;&#xA;&lt;li&gt;由于任何方法都无法获得对基本类型的引用，因此Java语言的这种语义就确保了基本类型的局部变量始终封闭在线程内。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;333-threadlocal-类&#34;&gt;&#xA;  3.3.3 ThreadLocal 类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#333-threadlocal-%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ThreadLocal对象通常用于防止对可变的单实例变量（Singleton）或全局变量进行共享。&lt;/li&gt;&#xA;&lt;li&gt;假设你需要将一个单线程应用程序移植到多线程环境中，通过将共享的全局变量转换为ThreadLocal对象（如果全局变量的语义允许），可以维持线程安全性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;34-不变性&#34;&gt;&#xA;  3.4 不变性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#34-%e4%b8%8d%e5%8f%98%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果某个对象在被创建后其状态就不能被修改，那么这个对象就称为不可变对象。&lt;/li&gt;&#xA;&lt;li&gt;不可变对象一定是线程安全的&lt;/li&gt;&#xA;&lt;li&gt;虽然在Java语言规范和Java内存模型中都没有给出不可变性的正式定义，但不可变性并不等于将对象中所有的域都声明为final类型，即使对象中所有的域都是final类型的，这个对象也仍然是可变的，因为在final类型的域中可以保存对可变对象的引用。&lt;/li&gt;&#xA;&lt;li&gt;当满足以下条件时，对象才是不可变的：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对象创建以后其状态就不能修改。&lt;/li&gt;&#xA;&lt;li&gt;对象的所有域都是final类型。&lt;/li&gt;&#xA;&lt;li&gt;对象是正确创建的（在对象的创建期间，this引用没有逸出）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;341-final域&#34;&gt;&#xA;  3.4.1 Final域&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#341-final%e5%9f%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;关键字final可以视为C++中const机制的一种受限版本，用于构造不可变性对象。final类型的域是不能修改的（但如果final域所引用的对象是可变的，那么这些被引用的对象是可以修改的）。&lt;/li&gt;&#xA;&lt;li&gt;即使对象是可变的，通过将对象的某些域声明为final类型，仍然可以简化对状态的判断，因此限制对象的可变性也就相当于限制了该对象可能的状态集合。&lt;/li&gt;&#xA;&lt;li&gt;正如“除非需要更高的可见性，否则应将所有的域都声明为私有域”[EJ Item 12]是一个良好的编程习惯，“除非需要某个域是可变的，否则应将其声明为final域”也是一个良好的编程习惯。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;342-示例使用volatile类型来发布不可变对象&#34;&gt;&#xA;  3.4.2 示例：使用volatile类型来发布不可变对象&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#342-%e7%a4%ba%e4%be%8b%e4%bd%bf%e7%94%a8volatile%e7%b1%bb%e5%9e%8b%e6%9d%a5%e5%8f%91%e5%b8%83%e4%b8%8d%e5%8f%af%e5%8f%98%e5%af%b9%e8%b1%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过使用包含多个状态变量的容器对象来维持不变性条件，并使用一个volatile类型的引用来确保可见性，使得Volatile Cached Factorizer在没有显式地使用锁的情况下仍然是线程安全的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;35-安全发布&#34;&gt;&#xA;  3.5 安全发布&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#35-%e5%ae%89%e5%85%a8%e5%8f%91%e5%b8%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;351-不正确的发布正确的对象被破坏&#34;&gt;&#xA;  3.5.1 不正确的发布：正确的对象被破坏&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#351-%e4%b8%8d%e6%ad%a3%e7%a1%ae%e7%9a%84%e5%8f%91%e5%b8%83%e6%ad%a3%e7%a1%ae%e7%9a%84%e5%af%b9%e8%b1%a1%e8%a2%ab%e7%a0%b4%e5%9d%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你不能指望一个尚未被完全创建的对象拥有完整性。某个观察该对象的线程将看到对象处于不一致的状态，然后看到对象的状态突然发生变化，即使线程在对象发布后还没有修改过它。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;352-不可变对象与初始化安全性&#34;&gt;&#xA;  3.5.2 不可变对象与初始化安全性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#352-%e4%b8%8d%e5%8f%af%e5%8f%98%e5%af%b9%e8%b1%a1%e4%b8%8e%e5%88%9d%e5%a7%8b%e5%8c%96%e5%ae%89%e5%85%a8%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我们已经知道，即使某个对象的引用对其他线程是可见的，也并不意味着对象状态对于使用该对象的线程来说一定是可见的。为了确保对象状态能呈现出一致的视图，就必须使用同步。&lt;/li&gt;&#xA;&lt;li&gt;任何线程都可以在不需要额外同步的情况下安全地访问不可变对象，即使在发布这些对象时没有使用同步。&lt;/li&gt;&#xA;&lt;li&gt;在没有额外同步的情况下，也可以安全地访问final类型的域。然而，如果final类型的域所指向的是可变对象，那么在访问这些域所指向的对象的状态时仍然需要同步。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;353-安全发布的常用模式&#34;&gt;&#xA;  3.5.3 安全发布的常用模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#353-%e5%ae%89%e5%85%a8%e5%8f%91%e5%b8%83%e7%9a%84%e5%b8%b8%e7%94%a8%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可变对象必须通过安全的方式来发布，这通常意味着在发布和使用该对象的线程时都必须使用同步。&lt;/li&gt;&#xA;&lt;li&gt;要安全地发布一个对象，对象的引用以及对象的状态必须同时对其他线程可见&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在静态初始化函数中初始化一个对象引用。&lt;/li&gt;&#xA;&lt;li&gt;将对象的引用保存到volatile类型的域或者AtomicReferance对象中。&lt;/li&gt;&#xA;&lt;li&gt;将对象的引用保存到某个正确构造对象的final类型域中。&lt;/li&gt;&#xA;&lt;li&gt;将对象的引用保存到一个由锁保护的域中。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;在线程安全容器内部的同步意味着，在将对象放入到某个容器，例如Vector或synchronizedList时，将满足上述最后一条需求。如果线程A将对象X放入一个线程安全的容器，随后线程B读取这个对象，那么可以确保B看到A设置的X状态，即便在这段读/写X的应用程序代码中没有包含显式的同步。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;线程安全库中的容器类提供了以下的安全发布保证&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过将一个键或者值放入Hashtable、synchronizedMap或者ConcurrentMap中，可以安全地将它发布给任何从这些容器中访问它的线程（无论是直接访问还是通过迭代器访问）。&lt;/li&gt;&#xA;&lt;li&gt;通过将某个元素放入Vector、CopyOnWriteArrayList、CopyOnWriteArraySet、synchronizedList或synchronizedSet中，可以将该元素安全地发布到任何从这些容器中访问该元素的线程。&lt;/li&gt;&#xA;&lt;li&gt;通过将某个元素放入BlockingQueue或者ConcurrentLinkedQueue中，可以将该元素安全地发布到任何从这些队列中访问该元素的线程。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;要发布一个静态构造的对象，最简单和最安全的方式是使用静态的初始化器 &lt;code&gt;public static Holder holder=new Holder（42）&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;静态初始化器由JVM在类的初始化阶段执行。由于在JVM内部存在着同步机制，因此通过这种方式初始化的任何对象都可以被安全地发布&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;354-事实不可变对象&#34;&gt;&#xA;  3.5.4 事实不可变对象&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#354-%e4%ba%8b%e5%ae%9e%e4%b8%8d%e5%8f%af%e5%8f%98%e5%af%b9%e8%b1%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果对象在发布后不会被修改，那么对于其他在没有额外同步的情况下安全地访问这些对象的线程来说，安全发布是足够的。&lt;/li&gt;&#xA;&lt;li&gt;如果对象从技术上来看是可变的，但其状态在发布后不会再改变，那么把这种对象称为“事实不可变对象（Effectively Immutable Object）”&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过使用事实不可变对象，不仅可以简化开发过程，而且还能由于减少了同步而提高性能。&lt;/li&gt;&#xA;&lt;li&gt;例如，Date本身是可变的￼，但如果将它作为不可变对象来使用，那么在多个线程之间共享Date对象时，就可以省去对锁的使用&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;355-可变对象&#34;&gt;&#xA;  3.5.5 可变对象&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#355-%e5%8f%af%e5%8f%98%e5%af%b9%e8%b1%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果对象在构造后可以修改，那么安全发布只能确保“发布当时”状态的可见性。对于可变对象，不仅在发布对象时需要使用同步，而且在每次对象访问时同样需要使用同步来确保后续修改操作的可见性。&lt;/li&gt;&#xA;&lt;li&gt;在并发程序中使用和共享对象时，可以使用一些实用的策略，包括：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;线程封闭。线程封闭的对象只能由一个线程拥有，对象被封闭在该线程中，并且只能由这个线程修改。&lt;/li&gt;&#xA;&lt;li&gt;只读共享。在没有额外同步的情况下，共享的只读对象可以由多个线程并发访问，但任何线程都不能修改它。共享的只读对象包括不可变对象和事实不可变对象。&lt;/li&gt;&#xA;&lt;li&gt;线程安全共享。线程安全的对象在其内部实现同步，因此多个线程可以通过对象的公有接口来进行访问而不需要进一步的同步。&lt;/li&gt;&#xA;&lt;li&gt;保护对象。被保护的对象只能通过持有特定的锁来访问。保护对象包括封装在其他线程安全对象中的对象，以及已发布的并且由某个特定锁保护的对象。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;356-安全地共享对象&#34;&gt;&#xA;  3.5.6 安全地共享对象&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#356-%e5%ae%89%e5%85%a8%e5%9c%b0%e5%85%b1%e4%ba%ab%e5%af%b9%e8%b1%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h2 id=&#34;第4章-对象的组合&#34;&gt;&#xA;  第4章 对象的组合&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0-%e5%af%b9%e8%b1%a1%e7%9a%84%e7%bb%84%e5%90%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;41-设计线程安全的类&#34;&gt;&#xA;  4.1 设计线程安全的类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#41-%e8%ae%be%e8%ae%a1%e7%ba%bf%e7%a8%8b%e5%ae%89%e5%85%a8%e7%9a%84%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;42-实例封闭&#34;&gt;&#xA;  4.2 实例封闭&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#42-%e5%ae%9e%e4%be%8b%e5%b0%81%e9%97%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;43-线程安全性的委托&#34;&gt;&#xA;  4.3 线程安全性的委托&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#43-%e7%ba%bf%e7%a8%8b%e5%ae%89%e5%85%a8%e6%80%a7%e7%9a%84%e5%a7%94%e6%89%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;44-在现有的线程安全类中添加功能&#34;&gt;&#xA;  4.4 在现有的线程安全类中添加功能&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#44-%e5%9c%a8%e7%8e%b0%e6%9c%89%e7%9a%84%e7%ba%bf%e7%a8%8b%e5%ae%89%e5%85%a8%e7%b1%bb%e4%b8%ad%e6%b7%bb%e5%8a%a0%e5%8a%9f%e8%83%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;45-将同步策略文档化&#34;&gt;&#xA;  4.5 将同步策略文档化&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#45-%e5%b0%86%e5%90%8c%e6%ad%a5%e7%ad%96%e7%95%a5%e6%96%87%e6%a1%a3%e5%8c%96&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第5章-基础构建模块&#34;&gt;&#xA;  第5章 基础构建模块&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac5%e7%ab%a0-%e5%9f%ba%e7%a1%80%e6%9e%84%e5%bb%ba%e6%a8%a1%e5%9d%97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;51-同步容器类&#34;&gt;&#xA;  5.1 同步容器类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#51-%e5%90%8c%e6%ad%a5%e5%ae%b9%e5%99%a8%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;52-并发容器&#34;&gt;&#xA;  5.2 并发容器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#52-%e5%b9%b6%e5%8f%91%e5%ae%b9%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;53-阻塞队列和生产者-消费者模式&#34;&gt;&#xA;  5.3 阻塞队列和生产者-消费者模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#53-%e9%98%bb%e5%a1%9e%e9%98%9f%e5%88%97%e5%92%8c%e7%94%9f%e4%ba%a7%e8%80%85-%e6%b6%88%e8%b4%b9%e8%80%85%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;54-阻塞方法与中断方法&#34;&gt;&#xA;  5.4 阻塞方法与中断方法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#54-%e9%98%bb%e5%a1%9e%e6%96%b9%e6%b3%95%e4%b8%8e%e4%b8%ad%e6%96%ad%e6%96%b9%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;55-同步工具类&#34;&gt;&#xA;  5.5 同步工具类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#55-%e5%90%8c%e6%ad%a5%e5%b7%a5%e5%85%b7%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;56-构建高效且可伸缩的结果缓存&#34;&gt;&#xA;  5.6 构建高效且可伸缩的结果缓存&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#56-%e6%9e%84%e5%bb%ba%e9%ab%98%e6%95%88%e4%b8%94%e5%8f%af%e4%bc%b8%e7%bc%a9%e7%9a%84%e7%bb%93%e6%9e%9c%e7%bc%93%e5%ad%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第6章-任务执行&#34;&gt;&#xA;  第6章 任务执行&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0-%e4%bb%bb%e5%8a%a1%e6%89%a7%e8%a1%8c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;61-在线程中执行任务&#34;&gt;&#xA;  6.1 在线程中执行任务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#61-%e5%9c%a8%e7%ba%bf%e7%a8%8b%e4%b8%ad%e6%89%a7%e8%a1%8c%e4%bb%bb%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;62-executor框架&#34;&gt;&#xA;  6.2 Executor框架&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#62-executor%e6%a1%86%e6%9e%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;63-找出可利用的并行性&#34;&gt;&#xA;  6.3 找出可利用的并行性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#63-%e6%89%be%e5%87%ba%e5%8f%af%e5%88%a9%e7%94%a8%e7%9a%84%e5%b9%b6%e8%a1%8c%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第7章-取消与关闭&#34;&gt;&#xA;  第7章 取消与关闭&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac7%e7%ab%a0-%e5%8f%96%e6%b6%88%e4%b8%8e%e5%85%b3%e9%97%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;71-任务取消&#34;&gt;&#xA;  7.1 任务取消&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#71-%e4%bb%bb%e5%8a%a1%e5%8f%96%e6%b6%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;72-停止基于线程的服务&#34;&gt;&#xA;  7.2 停止基于线程的服务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#72-%e5%81%9c%e6%ad%a2%e5%9f%ba%e4%ba%8e%e7%ba%bf%e7%a8%8b%e7%9a%84%e6%9c%8d%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;73-处理非正常的线程终止&#34;&gt;&#xA;  7.3 处理非正常的线程终止&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#73-%e5%a4%84%e7%90%86%e9%9d%9e%e6%ad%a3%e5%b8%b8%e7%9a%84%e7%ba%bf%e7%a8%8b%e7%bb%88%e6%ad%a2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;74-jvm关闭&#34;&gt;&#xA;  7.4 JVM关闭&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#74-jvm%e5%85%b3%e9%97%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第8章-线程池的使用&#34;&gt;&#xA;  第8章 线程池的使用&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac8%e7%ab%a0-%e7%ba%bf%e7%a8%8b%e6%b1%a0%e7%9a%84%e4%bd%bf%e7%94%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;81-在任务与执行策略之间的隐性耦合&#34;&gt;&#xA;  8.1 在任务与执行策略之间的隐性耦合&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#81-%e5%9c%a8%e4%bb%bb%e5%8a%a1%e4%b8%8e%e6%89%a7%e8%a1%8c%e7%ad%96%e7%95%a5%e4%b9%8b%e9%97%b4%e7%9a%84%e9%9a%90%e6%80%a7%e8%80%a6%e5%90%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;82-设置线程池的大小&#34;&gt;&#xA;  8.2 设置线程池的大小&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#82-%e8%ae%be%e7%bd%ae%e7%ba%bf%e7%a8%8b%e6%b1%a0%e7%9a%84%e5%a4%a7%e5%b0%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;83-配置threadpoolexecutor&#34;&gt;&#xA;  8.3 配置ThreadPoolExecutor&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#83-%e9%85%8d%e7%bd%aethreadpoolexecutor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;84-扩展threadpoolexecutor&#34;&gt;&#xA;  8.4 扩展ThreadPoolExecutor&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#84-%e6%89%a9%e5%b1%95threadpoolexecutor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;85-递归算法的并行化&#34;&gt;&#xA;  8.5 递归算法的并行化&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#85-%e9%80%92%e5%bd%92%e7%ae%97%e6%b3%95%e7%9a%84%e5%b9%b6%e8%a1%8c%e5%8c%96&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第9章-图形用户界面应用程序&#34;&gt;&#xA;  第9章 图形用户界面应用程序&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac9%e7%ab%a0-%e5%9b%be%e5%bd%a2%e7%94%a8%e6%88%b7%e7%95%8c%e9%9d%a2%e5%ba%94%e7%94%a8%e7%a8%8b%e5%ba%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;91-为什么gui是单线程的&#34;&gt;&#xA;  9.1 为什么GUI是单线程的&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#91-%e4%b8%ba%e4%bb%80%e4%b9%88gui%e6%98%af%e5%8d%95%e7%ba%bf%e7%a8%8b%e7%9a%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;92-短时间的gui任务&#34;&gt;&#xA;  9.2 短时间的GUI任务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#92-%e7%9f%ad%e6%97%b6%e9%97%b4%e7%9a%84gui%e4%bb%bb%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;93-长时间的gui任务&#34;&gt;&#xA;  9.3 长时间的GUI任务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#93-%e9%95%bf%e6%97%b6%e9%97%b4%e7%9a%84gui%e4%bb%bb%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;94-共享数据模型&#34;&gt;&#xA;  9.4 共享数据模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#94-%e5%85%b1%e4%ba%ab%e6%95%b0%e6%8d%ae%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;95-其他形式的单线程子系统&#34;&gt;&#xA;  9.5 其他形式的单线程子系统&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#95-%e5%85%b6%e4%bb%96%e5%bd%a2%e5%bc%8f%e7%9a%84%e5%8d%95%e7%ba%bf%e7%a8%8b%e5%ad%90%e7%b3%bb%e7%bb%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第10章-避免活跃性危险&#34;&gt;&#xA;  第10章 避免活跃性危险&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac10%e7%ab%a0-%e9%81%bf%e5%85%8d%e6%b4%bb%e8%b7%83%e6%80%a7%e5%8d%b1%e9%99%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;101-死锁&#34;&gt;&#xA;  10.1 死锁&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#101-%e6%ad%bb%e9%94%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;102-死锁的避免与诊断&#34;&gt;&#xA;  10.2 死锁的避免与诊断&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#102-%e6%ad%bb%e9%94%81%e7%9a%84%e9%81%bf%e5%85%8d%e4%b8%8e%e8%af%8a%e6%96%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;103-其他活跃性危险&#34;&gt;&#xA;  10.3 其他活跃性危险&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#103-%e5%85%b6%e4%bb%96%e6%b4%bb%e8%b7%83%e6%80%a7%e5%8d%b1%e9%99%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第11章-性能与可伸缩性&#34;&gt;&#xA;  第11章 性能与可伸缩性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac11%e7%ab%a0-%e6%80%a7%e8%83%bd%e4%b8%8e%e5%8f%af%e4%bc%b8%e7%bc%a9%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;111-对性能的思考&#34;&gt;&#xA;  11.1 对性能的思考&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#111-%e5%af%b9%e6%80%a7%e8%83%bd%e7%9a%84%e6%80%9d%e8%80%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;112-amdahl定律&#34;&gt;&#xA;  11.2 Amdahl定律&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#112-amdahl%e5%ae%9a%e5%be%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;113-线程引入的开销&#34;&gt;&#xA;  11.3 线程引入的开销&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#113-%e7%ba%bf%e7%a8%8b%e5%bc%95%e5%85%a5%e7%9a%84%e5%bc%80%e9%94%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;114-减少锁的竞争&#34;&gt;&#xA;  11.4 减少锁的竞争&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#114-%e5%87%8f%e5%b0%91%e9%94%81%e7%9a%84%e7%ab%9e%e4%ba%89&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;115-示例比较map的性能&#34;&gt;&#xA;  11.5 示例：比较Map的性能&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#115-%e7%a4%ba%e4%be%8b%e6%af%94%e8%be%83map%e7%9a%84%e6%80%a7%e8%83%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;116-减少上下文切换的开销&#34;&gt;&#xA;  11.6 减少上下文切换的开销&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#116-%e5%87%8f%e5%b0%91%e4%b8%8a%e4%b8%8b%e6%96%87%e5%88%87%e6%8d%a2%e7%9a%84%e5%bc%80%e9%94%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第12章-并发程序的测试&#34;&gt;&#xA;  第12章 并发程序的测试&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac12%e7%ab%a0-%e5%b9%b6%e5%8f%91%e7%a8%8b%e5%ba%8f%e7%9a%84%e6%b5%8b%e8%af%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;121-正确性测试&#34;&gt;&#xA;  12.1 正确性测试&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#121-%e6%ad%a3%e7%a1%ae%e6%80%a7%e6%b5%8b%e8%af%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;122-性能测试&#34;&gt;&#xA;  12.2 性能测试&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#122-%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;123-避免性能测试的陷阱&#34;&gt;&#xA;  12.3 避免性能测试的陷阱&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#123-%e9%81%bf%e5%85%8d%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95%e7%9a%84%e9%99%b7%e9%98%b1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;124-其他的测试方法&#34;&gt;&#xA;  12.4 其他的测试方法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#124-%e5%85%b6%e4%bb%96%e7%9a%84%e6%b5%8b%e8%af%95%e6%96%b9%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第13章-显式锁&#34;&gt;&#xA;  第13章 显式锁&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac13%e7%ab%a0-%e6%98%be%e5%bc%8f%e9%94%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;131-lock与reentrantlock&#34;&gt;&#xA;  13.1 Lock与ReentrantLock&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#131-lock%e4%b8%8ereentrantlock&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;132-性能考虑因素&#34;&gt;&#xA;  13.2 性能考虑因素&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#132-%e6%80%a7%e8%83%bd%e8%80%83%e8%99%91%e5%9b%a0%e7%b4%a0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;133-公平性&#34;&gt;&#xA;  13.3 公平性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#133-%e5%85%ac%e5%b9%b3%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;134-在synchronized和reentrantlock之间进行选择&#34;&gt;&#xA;  13.4 在synchronized和ReentrantLock之间进行选择&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#134-%e5%9c%a8synchronized%e5%92%8creentrantlock%e4%b9%8b%e9%97%b4%e8%bf%9b%e8%a1%8c%e9%80%89%e6%8b%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;135-读-写锁&#34;&gt;&#xA;  13.5 读-写锁&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#135-%e8%af%bb-%e5%86%99%e9%94%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第14章-构建自定义的同步工具&#34;&gt;&#xA;  第14章 构建自定义的同步工具&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac14%e7%ab%a0-%e6%9e%84%e5%bb%ba%e8%87%aa%e5%ae%9a%e4%b9%89%e7%9a%84%e5%90%8c%e6%ad%a5%e5%b7%a5%e5%85%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;141-状态依赖性的管理&#34;&gt;&#xA;  14.1 状态依赖性的管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#141-%e7%8a%b6%e6%80%81%e4%be%9d%e8%b5%96%e6%80%a7%e7%9a%84%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;142-使用条件队列&#34;&gt;&#xA;  14.2 使用条件队列&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#142-%e4%bd%bf%e7%94%a8%e6%9d%a1%e4%bb%b6%e9%98%9f%e5%88%97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;143-显式的condition对象&#34;&gt;&#xA;  14.3 显式的Condition对象&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#143-%e6%98%be%e5%bc%8f%e7%9a%84condition%e5%af%b9%e8%b1%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;144-synchronizer剖析&#34;&gt;&#xA;  14.4 Synchronizer剖析&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#144-synchronizer%e5%89%96%e6%9e%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;145-abstractqueuedsynchronizer&#34;&gt;&#xA;  14.5 AbstractQueuedSynchronizer&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#145-abstractqueuedsynchronizer&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;146-javautilconcurrent同步器类中的aqs&#34;&gt;&#xA;  14.6 java.util.concurrent同步器类中的AQS&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#146-javautilconcurrent%e5%90%8c%e6%ad%a5%e5%99%a8%e7%b1%bb%e4%b8%ad%e7%9a%84aqs&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第15章-原子变量与非阻塞同步机制&#34;&gt;&#xA;  第15章 原子变量与非阻塞同步机制&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac15%e7%ab%a0-%e5%8e%9f%e5%ad%90%e5%8f%98%e9%87%8f%e4%b8%8e%e9%9d%9e%e9%98%bb%e5%a1%9e%e5%90%8c%e6%ad%a5%e6%9c%ba%e5%88%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;151-锁的劣势&#34;&gt;&#xA;  15.1 锁的劣势&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#151-%e9%94%81%e7%9a%84%e5%8a%a3%e5%8a%bf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;152-硬件对并发的支持&#34;&gt;&#xA;  15.2 硬件对并发的支持&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#152-%e7%a1%ac%e4%bb%b6%e5%af%b9%e5%b9%b6%e5%8f%91%e7%9a%84%e6%94%af%e6%8c%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;153-原子变量类&#34;&gt;&#xA;  15.3 原子变量类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#153-%e5%8e%9f%e5%ad%90%e5%8f%98%e9%87%8f%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;154-非阻塞算法&#34;&gt;&#xA;  15.4 非阻塞算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#154-%e9%9d%9e%e9%98%bb%e5%a1%9e%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第16章-java内存模型&#34;&gt;&#xA;  第16章 Java内存模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac16%e7%ab%a0-java%e5%86%85%e5%ad%98%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;161-什么是内存模型为什么需要它&#34;&gt;&#xA;  16.1 什么是内存模型，为什么需要它&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#161-%e4%bb%80%e4%b9%88%e6%98%af%e5%86%85%e5%ad%98%e6%a8%a1%e5%9e%8b%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e5%ae%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;162-发布&#34;&gt;&#xA;  16.2 发布&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#162-%e5%8f%91%e5%b8%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;163-初始化过程中的安全性&#34;&gt;&#xA;  16.3 初始化过程中的安全性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#163-%e5%88%9d%e5%a7%8b%e5%8c%96%e8%bf%87%e7%a8%8b%e4%b8%ad%e7%9a%84%e5%ae%89%e5%85%a8%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;</description>
    </item>
    <item>
      <title>Java实战</title>
      <link>/zh/post/books/computer-science/java%E5%AE%9E%E6%88%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/books/computer-science/java%E5%AE%9E%E6%88%98/</guid>
      <description>&lt;h1 id=&#34;java实战&#34;&gt;&#xA;  Java实战&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#java%e5%ae%9e%e6%88%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/34895968/&#34;&gt;Java实战（第2版）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第一部分-基础知识&#34;&gt;&#xA;  第一部分 基础知识&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%80%e9%83%a8%e5%88%86-%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;第1章java-8910以及11的变化2&#34;&gt;&#xA;  第1章　Java 8、9、10以及11的变化　　2&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0java-8910%e4%bb%a5%e5%8f%8a11%e7%9a%84%e5%8f%98%e5%8c%962&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;11-为什么要关心java的变化-2&#34;&gt;&#xA;  1.1 为什么要关心Java的变化 2&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e5%85%b3%e5%bf%83java%e7%9a%84%e5%8f%98%e5%8c%96-2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;12-java怎么还在变-4&#34;&gt;&#xA;  1.2 Java怎么还在变 4&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#12-java%e6%80%8e%e4%b9%88%e8%bf%98%e5%9c%a8%e5%8f%98-4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1.2.1 Java在编程语言生态系统中的位置 5&lt;/li&gt;&#xA;&lt;li&gt;1.2.2 流处理 6&lt;/li&gt;&#xA;&lt;li&gt;1.2.3 用行为参数化把代码传递给方法 7&lt;/li&gt;&#xA;&lt;li&gt;1.2.4 并行与共享的可变数据 8&lt;/li&gt;&#xA;&lt;li&gt;1.2.5 Java需要演变 9&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;13-java中的函数-9&#34;&gt;&#xA;  1.3 Java中的函数 9&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#13-java%e4%b8%ad%e7%9a%84%e5%87%bd%e6%95%b0-9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1.3.1 方法和Lambda作为一等值 10&lt;/li&gt;&#xA;&lt;li&gt;1.3.2 传递代码：一个例子 11&lt;/li&gt;&#xA;&lt;li&gt;1.3.3 从传递方法到Lambda 13&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;14-流-14&#34;&gt;&#xA;  1.4 流 14&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#14-%e6%b5%81-14&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;15-默认方法及java模块-17&#34;&gt;&#xA;  1.5 默认方法及Java模块 17&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#15-%e9%bb%98%e8%ae%a4%e6%96%b9%e6%b3%95%e5%8f%8ajava%e6%a8%a1%e5%9d%97-17&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;16-来自函数式编程的其他好思想-19&#34;&gt;&#xA;  1.6 来自函数式编程的其他好思想 19&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#16-%e6%9d%a5%e8%87%aa%e5%87%bd%e6%95%b0%e5%bc%8f%e7%bc%96%e7%a8%8b%e7%9a%84%e5%85%b6%e4%bb%96%e5%a5%bd%e6%80%9d%e6%83%b3-19&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;17-小结-20&#34;&gt;&#xA;  1.7 小结 20&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#17-%e5%b0%8f%e7%bb%93-20&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第2章通过行为参数化传递代码22&#34;&gt;&#xA;  第2章　通过行为参数化传递代码　　22&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0%e9%80%9a%e8%bf%87%e8%a1%8c%e4%b8%ba%e5%8f%82%e6%95%b0%e5%8c%96%e4%bc%a0%e9%80%92%e4%bb%a3%e7%a0%8122&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;21-应对不断变化的需求-23&#34;&gt;&#xA;  2.1 应对不断变化的需求 23&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#21-%e5%ba%94%e5%af%b9%e4%b8%8d%e6%96%ad%e5%8f%98%e5%8c%96%e7%9a%84%e9%9c%80%e6%b1%82-23&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2.1.1 初试牛刀：筛选绿苹果 23&lt;/li&gt;&#xA;&lt;li&gt;2.1.2 再展身手：把颜色作为参数 23&lt;/li&gt;&#xA;&lt;li&gt;2.1.3 第三次尝试：对你能想到的每个属性做筛选 24&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;22-行为参数化-25&#34;&gt;&#xA;  2.2 行为参数化 25&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#22-%e8%a1%8c%e4%b8%ba%e5%8f%82%e6%95%b0%e5%8c%96-25&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;23-对付啰唆-30&#34;&gt;&#xA;  2.3 对付啰唆 30&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#23-%e5%af%b9%e4%bb%98%e5%95%b0%e5%94%86-30&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2.3.1 匿名类 30&lt;/li&gt;&#xA;&lt;li&gt;2.3.2 第五次尝试：使用匿名类 31&lt;/li&gt;&#xA;&lt;li&gt;2.3.3 第六次尝试：使用Lambda表达式 32&lt;/li&gt;&#xA;&lt;li&gt;2.3.4 第七次尝试：将List类型抽象化 33&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;24-真实的例子-33&#34;&gt;&#xA;  2.4 真实的例子 33&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#24-%e7%9c%9f%e5%ae%9e%e7%9a%84%e4%be%8b%e5%ad%90-33&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2.4.1 用Comparator来排序 33&lt;/li&gt;&#xA;&lt;li&gt;2.4.2 用Runnable执行代码块 34&lt;/li&gt;&#xA;&lt;li&gt;2.4.3 通过Callable返回结果 35&lt;/li&gt;&#xA;&lt;li&gt;2.4.4 GUI事件处理 35&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;25-小结-36&#34;&gt;&#xA;  2.5 小结 36&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#25-%e5%b0%8f%e7%bb%93-36&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第3章lambda表达式37&#34;&gt;&#xA;  第3章　Lambda表达式　　37&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0lambda%e8%a1%a8%e8%be%be%e5%bc%8f37&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;31-lambda管中窥豹-37&#34;&gt;&#xA;  3.1 Lambda管中窥豹 37&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#31-lambda%e7%ae%a1%e4%b8%ad%e7%aa%a5%e8%b1%b9-37&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;32-在哪里以及如何使用lambda-40&#34;&gt;&#xA;  3.2 在哪里以及如何使用Lambda 40&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#32-%e5%9c%a8%e5%93%aa%e9%87%8c%e4%bb%a5%e5%8f%8a%e5%a6%82%e4%bd%95%e4%bd%bf%e7%94%a8lambda-40&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.2.1 函数式接口 40&lt;/li&gt;&#xA;&lt;li&gt;3.2.2 函数描述符 42&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;33-把lambda付诸实践环绕执行模式-44&#34;&gt;&#xA;  3.3 把Lambda付诸实践：环绕执行模式 44&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#33-%e6%8a%8alambda%e4%bb%98%e8%af%b8%e5%ae%9e%e8%b7%b5%e7%8e%af%e7%bb%95%e6%89%a7%e8%a1%8c%e6%a8%a1%e5%bc%8f-44&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.3.1 第1 步：记得行为参数化 44&lt;/li&gt;&#xA;&lt;li&gt;3.3.2 第2 步：使用函数式接口来传递行为 45&lt;/li&gt;&#xA;&lt;li&gt;3.3.3 第3 步：执行一个行为 45&lt;/li&gt;&#xA;&lt;li&gt;3.3.4 第4 步：传递Lambda 46&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;34-使用函数式接口-47&#34;&gt;&#xA;  3.4 使用函数式接口 47&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#34-%e4%bd%bf%e7%94%a8%e5%87%bd%e6%95%b0%e5%bc%8f%e6%8e%a5%e5%8f%a3-47&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.4.1 Predicate 47&lt;/li&gt;&#xA;&lt;li&gt;3.4.2 Consumer 47&lt;/li&gt;&#xA;&lt;li&gt;3.4.3 Function 48&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;35-类型检查类型推断以及限制-52&#34;&gt;&#xA;  3.5 类型检查、类型推断以及限制 52&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#35-%e7%b1%bb%e5%9e%8b%e6%a3%80%e6%9f%a5%e7%b1%bb%e5%9e%8b%e6%8e%a8%e6%96%ad%e4%bb%a5%e5%8f%8a%e9%99%90%e5%88%b6-52&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.5.1 类型检查 52&lt;/li&gt;&#xA;&lt;li&gt;3.5.2 同样的Lambda，不同的函数式接口 53&lt;/li&gt;&#xA;&lt;li&gt;3.5.3 类型推断 55&lt;/li&gt;&#xA;&lt;li&gt;3.5.4 使用局部变量 56&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;36-方法引用-57&#34;&gt;&#xA;  3.6 方法引用 57&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#36-%e6%96%b9%e6%b3%95%e5%bc%95%e7%94%a8-57&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.6.1 管中窥豹 57&lt;/li&gt;&#xA;&lt;li&gt;3.6.2 构造函数引用 60&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;37-lambda和方法引用实战-62&#34;&gt;&#xA;  3.7 Lambda和方法引用实战 62&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#37-lambda%e5%92%8c%e6%96%b9%e6%b3%95%e5%bc%95%e7%94%a8%e5%ae%9e%e6%88%98-62&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.7.1 第1 步：传递代码 62&lt;/li&gt;&#xA;&lt;li&gt;3.7.2 第2 步：使用匿名类 62&lt;/li&gt;&#xA;&lt;li&gt;3.7.3 第3 步：使用Lambda表达式 62&lt;/li&gt;&#xA;&lt;li&gt;3.7.4 第4 步：使用方法引用 63&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;38-复合lambda表达式的有用方法-63&#34;&gt;&#xA;  3.8 复合Lambda表达式的有用方法 63&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#38-%e5%a4%8d%e5%90%88lambda%e8%a1%a8%e8%be%be%e5%bc%8f%e7%9a%84%e6%9c%89%e7%94%a8%e6%96%b9%e6%b3%95-63&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.8.1 比较器复合 64&lt;/li&gt;&#xA;&lt;li&gt;3.8.2 谓词复合 64&lt;/li&gt;&#xA;&lt;li&gt;3.8.3 函数复合 65&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;39-数学中的类似思想-66&#34;&gt;&#xA;  3.9 数学中的类似思想 66&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#39-%e6%95%b0%e5%ad%a6%e4%b8%ad%e7%9a%84%e7%b1%bb%e4%bc%bc%e6%80%9d%e6%83%b3-66&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.9.1 积分 66&lt;/li&gt;&#xA;&lt;li&gt;3.9.2 与Java 8的Lambda联系起来 68&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;310-小结-68&#34;&gt;&#xA;  3.10 小结 68&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#310-%e5%b0%8f%e7%bb%93-68&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h2 id=&#34;第二部分-使用流进行函数式数据处理&#34;&gt;&#xA;  第二部分 使用流进行函数式数据处理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%ba%8c%e9%83%a8%e5%88%86-%e4%bd%bf%e7%94%a8%e6%b5%81%e8%bf%9b%e8%a1%8c%e5%87%bd%e6%95%b0%e5%bc%8f%e6%95%b0%e6%8d%ae%e5%a4%84%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;第4章引入流72&#34;&gt;&#xA;  第4章　引入流　　72&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0%e5%bc%95%e5%85%a5%e6%b5%8172&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;41-流是什么-72&#34;&gt;&#xA;  4.1 流是什么 72&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#41-%e6%b5%81%e6%98%af%e4%bb%80%e4%b9%88-72&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;42-流简介-76&#34;&gt;&#xA;  4.2 流简介 76&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#42-%e6%b5%81%e7%ae%80%e4%bb%8b-76&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;43-流与集合-78&#34;&gt;&#xA;  4.3 流与集合 78&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#43-%e6%b5%81%e4%b8%8e%e9%9b%86%e5%90%88-78&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;4.3.1 只能遍历一次 79&lt;/li&gt;&#xA;&lt;li&gt;4.3.2 外部迭代与内部迭代 80&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;44-流操作-82&#34;&gt;&#xA;  4.4 流操作 82&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#44-%e6%b5%81%e6%93%8d%e4%bd%9c-82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;4.4.1 中间操作 83&lt;/li&gt;&#xA;&lt;li&gt;4.4.2 终端操作 84&lt;/li&gt;&#xA;&lt;li&gt;4.4.3 使用流 84&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;45-路线图-85&#34;&gt;&#xA;  4.5 路线图 85&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#45-%e8%b7%af%e7%ba%bf%e5%9b%be-85&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;46-小结-85&#34;&gt;&#xA;  4.6 小结 85&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#46-%e5%b0%8f%e7%bb%93-85&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第5章使用流86&#34;&gt;&#xA;  第5章　使用流　　86&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac5%e7%ab%a0%e4%bd%bf%e7%94%a8%e6%b5%8186&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;51-筛选-87&#34;&gt;&#xA;  5.1 筛选 87&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#51-%e7%ad%9b%e9%80%89-87&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.1.1 用谓词筛选 87&lt;/li&gt;&#xA;&lt;li&gt;5.1.2 筛选各异的元素 87&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;52-流的切片-88&#34;&gt;&#xA;  5.2 流的切片 88&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#52-%e6%b5%81%e7%9a%84%e5%88%87%e7%89%87-88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.2.1 使用谓词对流进行切片 88&lt;/li&gt;&#xA;&lt;li&gt;5.2.2 截短流 90&lt;/li&gt;&#xA;&lt;li&gt;5.2.3 跳过元素 90&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;53-映射-91&#34;&gt;&#xA;  5.3 映射 91&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#53-%e6%98%a0%e5%b0%84-91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.3.1 对流中每一个元素应用函数 91&lt;/li&gt;&#xA;&lt;li&gt;5.3.2 流的扁平化 92&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;54-查找和匹配-95&#34;&gt;&#xA;  5.4 查找和匹配 95&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#54-%e6%9f%a5%e6%89%be%e5%92%8c%e5%8c%b9%e9%85%8d-95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.4.1 检查谓词是否至少匹配一个元素 95&lt;/li&gt;&#xA;&lt;li&gt;5.4.2 检查谓词是否匹配所有元素 96&lt;/li&gt;&#xA;&lt;li&gt;5.4.3 查找元素 96&lt;/li&gt;&#xA;&lt;li&gt;5.4.4 查找第一个元素 97&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;55-归约-98&#34;&gt;&#xA;  5.5 归约 98&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#55-%e5%bd%92%e7%ba%a6-98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.5.1 元素求和 98&lt;/li&gt;&#xA;&lt;li&gt;5.5.2 最大值和最小值 100&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;56-付诸实践-103&#34;&gt;&#xA;  5.6 付诸实践 103&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#56-%e4%bb%98%e8%af%b8%e5%ae%9e%e8%b7%b5-103&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.6.1 领域：交易员和交易 103&lt;/li&gt;&#xA;&lt;li&gt;5.6.2 解答 104&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;57-数值流-106&#34;&gt;&#xA;  5.7 数值流 106&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#57-%e6%95%b0%e5%80%bc%e6%b5%81-106&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.7.1 原始类型流特化 107&lt;/li&gt;&#xA;&lt;li&gt;5.7.2 数值范围 108&lt;/li&gt;&#xA;&lt;li&gt;5.7.3 数值流应用：勾股数 108&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;58-构建流-111&#34;&gt;&#xA;  5.8 构建流 111&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#58-%e6%9e%84%e5%bb%ba%e6%b5%81-111&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.8.1 由值创建流 111&lt;/li&gt;&#xA;&lt;li&gt;5.8.2 由可空对象创建流 111&lt;/li&gt;&#xA;&lt;li&gt;5.8.3 由数组创建流 112&lt;/li&gt;&#xA;&lt;li&gt;5.8.4 由文件生成流 112&lt;/li&gt;&#xA;&lt;li&gt;5.8.5 由函数生成流：创建无限流 113&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;59-概述-116&#34;&gt;&#xA;  5.9 概述 116&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#59-%e6%a6%82%e8%bf%b0-116&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;510-小结-116&#34;&gt;&#xA;  5.10 小结 116&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#510-%e5%b0%8f%e7%bb%93-116&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第6章用流收集数据118&#34;&gt;&#xA;  第6章　用流收集数据　　118&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0%e7%94%a8%e6%b5%81%e6%94%b6%e9%9b%86%e6%95%b0%e6%8d%ae118&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;61-收集器简介-119&#34;&gt;&#xA;  6.1 收集器简介 119&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#61-%e6%94%b6%e9%9b%86%e5%99%a8%e7%ae%80%e4%bb%8b-119&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;6.1.1 收集器用作高级归约 119&lt;/li&gt;&#xA;&lt;li&gt;6.1.2 预定义收集器 120&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;62-归约和汇总-121&#34;&gt;&#xA;  6.2 归约和汇总 121&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#62-%e5%bd%92%e7%ba%a6%e5%92%8c%e6%b1%87%e6%80%bb-121&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;6.2.1 查找流中的最大值和最小值 121&lt;/li&gt;&#xA;&lt;li&gt;6.2.2 汇总 122&lt;/li&gt;&#xA;&lt;li&gt;6.2.3 连接字符串 123&lt;/li&gt;&#xA;&lt;li&gt;6.2.4 广义的归约汇总 124&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;63-分组-127&#34;&gt;&#xA;  6.3 分组 127&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#63-%e5%88%86%e7%bb%84-127&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;6.3.1 操作分组的元素 128&lt;/li&gt;&#xA;&lt;li&gt;6.3.2 多级分组 130&lt;/li&gt;&#xA;&lt;li&gt;6.3.3 按子组收集数据 131&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;64-分区-134&#34;&gt;&#xA;  6.4 分区 134&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#64-%e5%88%86%e5%8c%ba-134&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;6.4.1 分区的优势 135&lt;/li&gt;&#xA;&lt;li&gt;6.4.2 将数字按质数和非质数分区 136&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;65-收集器接口-138&#34;&gt;&#xA;  6.5 收集器接口 138&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#65-%e6%94%b6%e9%9b%86%e5%99%a8%e6%8e%a5%e5%8f%a3-138&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;6.5.1 理解Collector接口声明的方法 139&lt;/li&gt;&#xA;&lt;li&gt;6.5.2 全部融合到一起 143&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;66-开发你自己的收集器以获得更好的性能-144&#34;&gt;&#xA;  6.6 开发你自己的收集器以获得更好的性能 144&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#66-%e5%bc%80%e5%8f%91%e4%bd%a0%e8%87%aa%e5%b7%b1%e7%9a%84%e6%94%b6%e9%9b%86%e5%99%a8%e4%bb%a5%e8%8e%b7%e5%be%97%e6%9b%b4%e5%a5%bd%e7%9a%84%e6%80%a7%e8%83%bd-144&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;6.6.1 仅用质数做除数 145&lt;/li&gt;&#xA;&lt;li&gt;6.6.2 比较收集器的性能 148&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;67-小结-150&#34;&gt;&#xA;  6.7 小结 150&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#67-%e5%b0%8f%e7%bb%93-150&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第7章并行数据处理与性能151&#34;&gt;&#xA;  第7章　并行数据处理与性能　　151&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac7%e7%ab%a0%e5%b9%b6%e8%a1%8c%e6%95%b0%e6%8d%ae%e5%a4%84%e7%90%86%e4%b8%8e%e6%80%a7%e8%83%bd151&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;71-并行流-152&#34;&gt;&#xA;  7.1 并行流 152&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#71-%e5%b9%b6%e8%a1%8c%e6%b5%81-152&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;7.1.1 将顺序流转换为并行流 52&lt;/li&gt;&#xA;&lt;li&gt;7.1.2 测量流性能 154&lt;/li&gt;&#xA;&lt;li&gt;7.1.3 正确使用并行流 158&lt;/li&gt;&#xA;&lt;li&gt;7.1.4 高效使用并行流 159&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;72-分支合并框架-161&#34;&gt;&#xA;  7.2 分支/合并框架 161&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#72-%e5%88%86%e6%94%af%e5%90%88%e5%b9%b6%e6%a1%86%e6%9e%b6-161&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;7.2.1 使用RecursiveTask 161&lt;/li&gt;&#xA;&lt;li&gt;7.2.2 使用分支/合并框架的最佳做法 164&lt;/li&gt;&#xA;&lt;li&gt;7.2.3 工作窃取 165&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;73-spliterator-166&#34;&gt;&#xA;  7.3 Spliterator 166&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#73-spliterator-166&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;7.3.1 拆分过程 167&lt;/li&gt;&#xA;&lt;li&gt;7.3.2 实现你自己的Spliterator 168&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;74-小结-173&#34;&gt;&#xA;  7.4 小结 173&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#74-%e5%b0%8f%e7%bb%93-173&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h2 id=&#34;第三部分-使用流和lambda进行高效编程&#34;&gt;&#xA;  第三部分 使用流和Lambda进行高效编程&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%89%e9%83%a8%e5%88%86-%e4%bd%bf%e7%94%a8%e6%b5%81%e5%92%8clambda%e8%bf%9b%e8%a1%8c%e9%ab%98%e6%95%88%e7%bc%96%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;第8章collection-api的增强功能176&#34;&gt;&#xA;  第8章　Collection API的增强功能　　176&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac8%e7%ab%a0collection-api%e7%9a%84%e5%a2%9e%e5%bc%ba%e5%8a%9f%e8%83%bd176&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;81-集合工厂-176&#34;&gt;&#xA;  8.1 集合工厂 176&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#81-%e9%9b%86%e5%90%88%e5%b7%a5%e5%8e%82-176&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;8.1.1 List工厂 177&lt;/li&gt;&#xA;&lt;li&gt;8.1.2 Set工厂 178&lt;/li&gt;&#xA;&lt;li&gt;8.1.3 Map工厂 179&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;82-使用list和set-180&#34;&gt;&#xA;  8.2 使用List和Set 180&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#82-%e4%bd%bf%e7%94%a8list%e5%92%8cset-180&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;8.2.1 removeIf方法 180&lt;/li&gt;&#xA;&lt;li&gt;8.2.2 replaceAll方法 181&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;83-使用map-181&#34;&gt;&#xA;  8.3 使用Map 181&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#83-%e4%bd%bf%e7%94%a8map-181&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;8.3.1 forEach方法 182&lt;/li&gt;&#xA;&lt;li&gt;8.3.2 排序 182&lt;/li&gt;&#xA;&lt;li&gt;8.3.3 getOrDefault方法 183&lt;/li&gt;&#xA;&lt;li&gt;8.3.4 计算模式 183&lt;/li&gt;&#xA;&lt;li&gt;8.3.5 删除模式 184&lt;/li&gt;&#xA;&lt;li&gt;8.3.6 替换模式 185&lt;/li&gt;&#xA;&lt;li&gt;8.3.7 merge方法 185&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;84-改进的concurrenthashmap-187&#34;&gt;&#xA;  8.4 改进的ConcurrentHashMap 187&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#84-%e6%94%b9%e8%bf%9b%e7%9a%84concurrenthashmap-187&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;8.4.1 归约和搜索 187&lt;/li&gt;&#xA;&lt;li&gt;8.4.2 计数 188&lt;/li&gt;&#xA;&lt;li&gt;8.4.3 Set视图 188&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;85-小结-188&#34;&gt;&#xA;  8.5 小结 188&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#85-%e5%b0%8f%e7%bb%93-188&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第9章重构测试和调试189&#34;&gt;&#xA;  第9章　重构、测试和调试　　189&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac9%e7%ab%a0%e9%87%8d%e6%9e%84%e6%b5%8b%e8%af%95%e5%92%8c%e8%b0%83%e8%af%95189&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;91-为改善可读性和灵活性重构代码-189&#34;&gt;&#xA;  9.1 为改善可读性和灵活性重构代码 189&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#91-%e4%b8%ba%e6%94%b9%e5%96%84%e5%8f%af%e8%af%bb%e6%80%a7%e5%92%8c%e7%81%b5%e6%b4%bb%e6%80%a7%e9%87%8d%e6%9e%84%e4%bb%a3%e7%a0%81-189&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;9.1.1 改善代码的可读性 190&lt;/li&gt;&#xA;&lt;li&gt;9.1.2 从匿名类到Lambda表达式的转换 190&lt;/li&gt;&#xA;&lt;li&gt;9.1.3 从Lambda表达式到方法引用的转换 191&lt;/li&gt;&#xA;&lt;li&gt;9.1.4 从命令式的数据处理切换到Stream 193&lt;/li&gt;&#xA;&lt;li&gt;9.1.5 增加代码的灵活性 193&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;92-使用lambda重构面向对象的设计模式-195&#34;&gt;&#xA;  9.2 使用Lambda重构面向对象的设计模式 195&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#92-%e4%bd%bf%e7%94%a8lambda%e9%87%8d%e6%9e%84%e9%9d%a2%e5%90%91%e5%af%b9%e8%b1%a1%e7%9a%84%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f-195&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;9.2.1 策略模式 196&lt;/li&gt;&#xA;&lt;li&gt;9.2.2 模板方法 197&lt;/li&gt;&#xA;&lt;li&gt;9.2.3 观察者模式 198&lt;/li&gt;&#xA;&lt;li&gt;9.2.4 责任链模式 201&lt;/li&gt;&#xA;&lt;li&gt;9.2.5 工厂模式 202&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;93-测试lambda表达式-204&#34;&gt;&#xA;  9.3 测试Lambda表达式 204&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#93-%e6%b5%8b%e8%af%95lambda%e8%a1%a8%e8%be%be%e5%bc%8f-204&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;9.3.1 测试可见Lambda函数的行为 204&lt;/li&gt;&#xA;&lt;li&gt;9.3.2 测试使用Lambda的方法的行为 205&lt;/li&gt;&#xA;&lt;li&gt;9.3.3 将复杂的Lambda表达式分为不同的方法 205&lt;/li&gt;&#xA;&lt;li&gt;9.3.4 高阶函数的测试 206&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;94-调试-206&#34;&gt;&#xA;  9.4 调试 206&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#94-%e8%b0%83%e8%af%95-206&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;9.4.1 查看栈跟踪 206&lt;/li&gt;&#xA;&lt;li&gt;9.4.2 使用日志调试 208&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;95-小结-209&#34;&gt;&#xA;  9.5 小结 209&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#95-%e5%b0%8f%e7%bb%93-209&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第10章基于lambda的领域特定语言210&#34;&gt;&#xA;  第10章　基于Lambda的领域特定语言　　210&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac10%e7%ab%a0%e5%9f%ba%e4%ba%8elambda%e7%9a%84%e9%a2%86%e5%9f%9f%e7%89%b9%e5%ae%9a%e8%af%ad%e8%a8%80210&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;101-领域特定语言-212&#34;&gt;&#xA;  10.1 领域特定语言 212&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#101-%e9%a2%86%e5%9f%9f%e7%89%b9%e5%ae%9a%e8%af%ad%e8%a8%80-212&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;10.1.1 DSL的优点和弊端 212&lt;/li&gt;&#xA;&lt;li&gt;10.1.2 JVM中已提供的DSL解决方案 214&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;102-现代java-api中的小型dsl-217&#34;&gt;&#xA;  10.2 现代Java API中的小型DSL 217&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#102-%e7%8e%b0%e4%bb%a3java-api%e4%b8%ad%e7%9a%84%e5%b0%8f%e5%9e%8bdsl-217&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;10.2.1 把Stream API当成DSL去操作集合 219&lt;/li&gt;&#xA;&lt;li&gt;10.2.2 将Collectors作为DSL汇总数据 220&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;103-使用java创建dsl的模式与技巧-221&#34;&gt;&#xA;  10.3 使用Java创建DSL的模式与技巧 221&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#103-%e4%bd%bf%e7%94%a8java%e5%88%9b%e5%bb%badsl%e7%9a%84%e6%a8%a1%e5%bc%8f%e4%b8%8e%e6%8a%80%e5%b7%a7-221&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;10.3.1 方法链接 224&lt;/li&gt;&#xA;&lt;li&gt;10.3.2 使用嵌套函数 226&lt;/li&gt;&#xA;&lt;li&gt;10.3.3 使用Lambda表达式的函数序列 228&lt;/li&gt;&#xA;&lt;li&gt;10.3.4 把它们都放到一起 230&lt;/li&gt;&#xA;&lt;li&gt;10.3.5 在DSL中使用方法引用 232&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;104-java-8-dsl的实际应用-234&#34;&gt;&#xA;  10.4 Java 8 DSL的实际应用 234&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#104-java-8-dsl%e7%9a%84%e5%ae%9e%e9%99%85%e5%ba%94%e7%94%a8-234&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;10.4.1 jOOQ 235&lt;/li&gt;&#xA;&lt;li&gt;10.4.2 Cucumber 236&lt;/li&gt;&#xA;&lt;li&gt;10.4.3 Spring Integration 238&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;105-小结-239&#34;&gt;&#xA;  10.5 小结 239&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#105-%e5%b0%8f%e7%bb%93-239&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h2 id=&#34;第四部分-无所不在的java&#34;&gt;&#xA;  第四部分 无所不在的Java&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e5%9b%9b%e9%83%a8%e5%88%86-%e6%97%a0%e6%89%80%e4%b8%8d%e5%9c%a8%e7%9a%84java&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;第11章用optional取代null242&#34;&gt;&#xA;  第11章　用Optional取代null　　242&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac11%e7%ab%a0%e7%94%a8optional%e5%8f%96%e4%bb%a3null242&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;111-如何为缺失的值建模-243&#34;&gt;&#xA;  11.1 如何为缺失的值建模 243&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#111-%e5%a6%82%e4%bd%95%e4%b8%ba%e7%bc%ba%e5%a4%b1%e7%9a%84%e5%80%bc%e5%bb%ba%e6%a8%a1-243&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;11.1.1 采用防御式检查减少NullPointerException 243&lt;/li&gt;&#xA;&lt;li&gt;11.1.2 null带来的种种问题 245&lt;/li&gt;&#xA;&lt;li&gt;11.1.3 其他语言中null的替代品 245&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;112-optional类入门-246&#34;&gt;&#xA;  11.2 Optional类入门 246&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#112-optional%e7%b1%bb%e5%85%a5%e9%97%a8-246&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;113-应用optional的几种模式-248&#34;&gt;&#xA;  11.3 应用Optional的几种模式 248&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#113-%e5%ba%94%e7%94%a8optional%e7%9a%84%e5%87%a0%e7%a7%8d%e6%a8%a1%e5%bc%8f-248&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;11.3.1 创建Optional对象 248&lt;/li&gt;&#xA;&lt;li&gt;11.3.2 使用map从Optional对象中提取和转换值 248&lt;/li&gt;&#xA;&lt;li&gt;11.3.3 使用flatMap链接Optional对象 249&lt;/li&gt;&#xA;&lt;li&gt;11.3.4 操纵由Optional对象构成的Stream 253&lt;/li&gt;&#xA;&lt;li&gt;11.3.5 默认行为及解引用Optional对象 254&lt;/li&gt;&#xA;&lt;li&gt;11.3.6 两个Optional对象的组合 255&lt;/li&gt;&#xA;&lt;li&gt;11.3.7 使用filter剔除特定的值 257&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;114-使用optional的实战示例-258&#34;&gt;&#xA;  11.4 使用Optional的实战示例 258&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#114-%e4%bd%bf%e7%94%a8optional%e7%9a%84%e5%ae%9e%e6%88%98%e7%a4%ba%e4%be%8b-258&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;11.4.1 用Optional 封装可能为null的值 259&lt;/li&gt;&#xA;&lt;li&gt;11.4.2 异常与Optional的对比 259&lt;/li&gt;&#xA;&lt;li&gt;11.4.3 基础类型的Optional对象，以及为什么应该避免使用它们 260&lt;/li&gt;&#xA;&lt;li&gt;11.4.4 把所有内容整合起来 260&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;115-小结-262&#34;&gt;&#xA;  11.5 小结 262&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#115-%e5%b0%8f%e7%bb%93-262&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第12章新的日期和时间api263&#34;&gt;&#xA;  第12章　新的日期和时间API　　263&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac12%e7%ab%a0%e6%96%b0%e7%9a%84%e6%97%a5%e6%9c%9f%e5%92%8c%e6%97%b6%e9%97%b4api263&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;121-localdatelocaltimelocaldatetimeinstantduration以及period-264&#34;&gt;&#xA;  12.1 LocalDate、LocalTime、LocalDateTime、Instant、Duration以及Period 264&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#121-localdatelocaltimelocaldatetimeinstantduration%e4%bb%a5%e5%8f%8aperiod-264&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;12.1.1 使用LocalDate和LocalTime 264&lt;/li&gt;&#xA;&lt;li&gt;12.1.2 合并日期和时间 265&lt;/li&gt;&#xA;&lt;li&gt;12.1.3 机器的日期和时间格式 266&lt;/li&gt;&#xA;&lt;li&gt;12.1.4 定义Duration或Period 267&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;122-操纵解析和格式化日期-268&#34;&gt;&#xA;  12.2 操纵、解析和格式化日期 268&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#122-%e6%93%8d%e7%ba%b5%e8%a7%a3%e6%9e%90%e5%92%8c%e6%a0%bc%e5%bc%8f%e5%8c%96%e6%97%a5%e6%9c%9f-268&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;12.2.1 使用TemporalAdjuster 270&lt;/li&gt;&#xA;&lt;li&gt;12.2.2 打印输出及解析日期–时间对象 272&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;123-处理不同的时区和历法-274&#34;&gt;&#xA;  12.3 处理不同的时区和历法 274&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#123-%e5%a4%84%e7%90%86%e4%b8%8d%e5%90%8c%e7%9a%84%e6%97%b6%e5%8c%ba%e5%92%8c%e5%8e%86%e6%b3%95-274&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;12.3.1 使用时区 274&lt;/li&gt;&#xA;&lt;li&gt;12.3.2 利用和UTC/格林尼治时间的固定偏差计算时区 275&lt;/li&gt;&#xA;&lt;li&gt;12.3.3 使用别的日历系统 276&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;124-小结-277&#34;&gt;&#xA;  12.4 小结 277&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#124-%e5%b0%8f%e7%bb%93-277&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第13章默认方法278&#34;&gt;&#xA;  第13章　默认方法　　278&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac13%e7%ab%a0%e9%bb%98%e8%ae%a4%e6%96%b9%e6%b3%95278&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;131-不断演进的api-280&#34;&gt;&#xA;  13.1 不断演进的API 280&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#131-%e4%b8%8d%e6%96%ad%e6%bc%94%e8%bf%9b%e7%9a%84api-280&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;13.1.1 初始版本的API 281&lt;/li&gt;&#xA;&lt;li&gt;13.1.2 第二版API 281&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;132-概述默认方法-283&#34;&gt;&#xA;  13.2 概述默认方法 283&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#132-%e6%a6%82%e8%bf%b0%e9%bb%98%e8%ae%a4%e6%96%b9%e6%b3%95-283&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;133-默认方法的使用模式-285&#34;&gt;&#xA;  13.3 默认方法的使用模式 285&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#133-%e9%bb%98%e8%ae%a4%e6%96%b9%e6%b3%95%e7%9a%84%e4%bd%bf%e7%94%a8%e6%a8%a1%e5%bc%8f-285&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;13.3.1 可选方法 285&lt;/li&gt;&#xA;&lt;li&gt;13.3.2 行为的多继承 286&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;134-解决冲突的规则-289&#34;&gt;&#xA;  13.4 解决冲突的规则 289&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#134-%e8%a7%a3%e5%86%b3%e5%86%b2%e7%aa%81%e7%9a%84%e8%a7%84%e5%88%99-289&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;13.4.1 解决问题的三条规则 289&lt;/li&gt;&#xA;&lt;li&gt;13.4.2 选择提供了最具体实现的默认方法的接口 290&lt;/li&gt;&#xA;&lt;li&gt;13.4.3 冲突及如何显式地消除歧义 291&lt;/li&gt;&#xA;&lt;li&gt;13.4.4 菱形继承问题 293&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;135-小结-294&#34;&gt;&#xA;  13.5 小结 294&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#135-%e5%b0%8f%e7%bb%93-294&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第14章java模块系统295&#34;&gt;&#xA;  第14章　Java模块系统　　295&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac14%e7%ab%a0java%e6%a8%a1%e5%9d%97%e7%b3%bb%e7%bb%9f295&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;141-模块化的驱动力软件的推理-295&#34;&gt;&#xA;  14.1 模块化的驱动力：软件的推理 295&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#141-%e6%a8%a1%e5%9d%97%e5%8c%96%e7%9a%84%e9%a9%b1%e5%8a%a8%e5%8a%9b%e8%bd%af%e4%bb%b6%e7%9a%84%e6%8e%a8%e7%90%86-295&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;14.1.1 关注点分离 295&lt;/li&gt;&#xA;&lt;li&gt;14.1.2 信息隐藏 296&lt;/li&gt;&#xA;&lt;li&gt;14.1.3 Java软件 296&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;142-为什么要设计java模块系统-297&#34;&gt;&#xA;  14.2 为什么要设计Java模块系统 297&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#142-%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e8%ae%be%e8%ae%a1java%e6%a8%a1%e5%9d%97%e7%b3%bb%e7%bb%9f-297&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;14.2.1 模块化的局限性 297&lt;/li&gt;&#xA;&lt;li&gt;14.2.2 单体型的JDK 298&lt;/li&gt;&#xA;&lt;li&gt;14.2.3 与OSGi的比较 299&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;143-java模块全局视图-300&#34;&gt;&#xA;  14.3 Java模块：全局视图 300&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#143-java%e6%a8%a1%e5%9d%97%e5%85%a8%e5%b1%80%e8%a7%86%e5%9b%be-300&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;144-使用java模块系统开发应用-301&#34;&gt;&#xA;  14.4 使用Java模块系统开发应用 301&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#144-%e4%bd%bf%e7%94%a8java%e6%a8%a1%e5%9d%97%e7%b3%bb%e7%bb%9f%e5%bc%80%e5%8f%91%e5%ba%94%e7%94%a8-301&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;14.4.1 从头开始搭建一个应用 302&lt;/li&gt;&#xA;&lt;li&gt;14.4.2 细粒度和粗粒度的模块化 303&lt;/li&gt;&#xA;&lt;li&gt;14.4.3 Java模块系统基础 303&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;145-使用多个模块-304&#34;&gt;&#xA;  14.5 使用多个模块 304&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#145-%e4%bd%bf%e7%94%a8%e5%a4%9a%e4%b8%aa%e6%a8%a1%e5%9d%97-304&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;14.5.1 exports子句 304&lt;/li&gt;&#xA;&lt;li&gt;14.5.2 requires子句 305&lt;/li&gt;&#xA;&lt;li&gt;14.5.3 命名 306&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;146-编译及打包-306&#34;&gt;&#xA;  14.6 编译及打包 306&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#146-%e7%bc%96%e8%af%91%e5%8f%8a%e6%89%93%e5%8c%85-306&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;147-自动模块-310&#34;&gt;&#xA;  14.7 自动模块 310&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#147-%e8%87%aa%e5%8a%a8%e6%a8%a1%e5%9d%97-310&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;148-模块声明及子句-311&#34;&gt;&#xA;  14.8 模块声明及子句 311&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#148-%e6%a8%a1%e5%9d%97%e5%a3%b0%e6%98%8e%e5%8f%8a%e5%ad%90%e5%8f%a5-311&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;14.8.1 requires 311&lt;/li&gt;&#xA;&lt;li&gt;14.8.2 exports 311&lt;/li&gt;&#xA;&lt;li&gt;14.8.3 requires的传递 311&lt;/li&gt;&#xA;&lt;li&gt;14.8.4 exports to 312&lt;/li&gt;&#xA;&lt;li&gt;14.8.5 open和opens 312&lt;/li&gt;&#xA;&lt;li&gt;14.8.6 uses和provides 313&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;149-通过一个更复杂的例子了解更多-313&#34;&gt;&#xA;  14.9 通过一个更复杂的例子了解更多 313&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#149-%e9%80%9a%e8%bf%87%e4%b8%80%e4%b8%aa%e6%9b%b4%e5%a4%8d%e6%9d%82%e7%9a%84%e4%be%8b%e5%ad%90%e4%ba%86%e8%a7%a3%e6%9b%b4%e5%a4%9a-313&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;1410-小结-314&#34;&gt;&#xA;  14.10 小结 314&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1410-%e5%b0%8f%e7%bb%93-314&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h2 id=&#34;第五部分-提升java的并发性&#34;&gt;&#xA;  第五部分 提升Java的并发性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%ba%94%e9%83%a8%e5%88%86-%e6%8f%90%e5%8d%87java%e7%9a%84%e5%b9%b6%e5%8f%91%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;第15章completablefuture及反应式编程背后的概念316&#34;&gt;&#xA;  第15章　CompletableFuture及反应式编程背后的概念　　316&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac15%e7%ab%a0completablefuture%e5%8f%8a%e5%8f%8d%e5%ba%94%e5%bc%8f%e7%bc%96%e7%a8%8b%e8%83%8c%e5%90%8e%e7%9a%84%e6%a6%82%e5%bf%b5316&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;151-为支持并发而不断演进的java-318&#34;&gt;&#xA;  15.1 为支持并发而不断演进的Java 318&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#151-%e4%b8%ba%e6%94%af%e6%8c%81%e5%b9%b6%e5%8f%91%e8%80%8c%e4%b8%8d%e6%96%ad%e6%bc%94%e8%bf%9b%e7%9a%84java-318&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;15.1.1 线程以及更高层的抽象 319&lt;/li&gt;&#xA;&lt;li&gt;15.1.2 执行器和线程池 320&lt;/li&gt;&#xA;&lt;li&gt;15.1.3 其他的线程抽象：非嵌套方法调用 322&lt;/li&gt;&#xA;&lt;li&gt;15.1.4 你希望线程为你带来什么 324&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;152-同步及异步api-324&#34;&gt;&#xA;  15.2 同步及异步API 324&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#152-%e5%90%8c%e6%ad%a5%e5%8f%8a%e5%bc%82%e6%ad%a5api-324&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;15.2.1 Future风格的API 326&lt;/li&gt;&#xA;&lt;li&gt;15.2.2 反应式风格的API 327&lt;/li&gt;&#xA;&lt;li&gt;15.2.3 有害的睡眠及其他阻塞式操作 328&lt;/li&gt;&#xA;&lt;li&gt;15.2.4 实战验证 329&lt;/li&gt;&#xA;&lt;li&gt;15.2.5 如何使用异步API进行异常处理 330&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;153-线框管道模型-331&#34;&gt;&#xA;  15.3 “线框–管道”模型 331&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#153-%e7%ba%bf%e6%a1%86%e7%ae%a1%e9%81%93%e6%a8%a1%e5%9e%8b-331&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;154-为并发而生的completablefuture和结合器-332&#34;&gt;&#xA;  15.4 为并发而生的CompletableFuture和结合器 332&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#154-%e4%b8%ba%e5%b9%b6%e5%8f%91%e8%80%8c%e7%94%9f%e7%9a%84completablefuture%e5%92%8c%e7%bb%93%e5%90%88%e5%99%a8-332&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;155-发布订阅以及反应式编程-335&#34;&gt;&#xA;  15.5 “发布–订阅”以及反应式编程 335&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#155-%e5%8f%91%e5%b8%83%e8%ae%a2%e9%98%85%e4%bb%a5%e5%8f%8a%e5%8f%8d%e5%ba%94%e5%bc%8f%e7%bc%96%e7%a8%8b-335&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;15.5.1 示例：对两个流求和 337&lt;/li&gt;&#xA;&lt;li&gt;15.5.2 背压 341&lt;/li&gt;&#xA;&lt;li&gt;15.5.3 一种简单的真实背压 341&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;156-反应式系统和反应式编程-342&#34;&gt;&#xA;  15.6 反应式系统和反应式编程 342&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#156-%e5%8f%8d%e5%ba%94%e5%bc%8f%e7%b3%bb%e7%bb%9f%e5%92%8c%e5%8f%8d%e5%ba%94%e5%bc%8f%e7%bc%96%e7%a8%8b-342&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;157-路线图-342&#34;&gt;&#xA;  15.7 路线图 342&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#157-%e8%b7%af%e7%ba%bf%e5%9b%be-342&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;158-小结-343&#34;&gt;&#xA;  15.8 小结 343&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#158-%e5%b0%8f%e7%bb%93-343&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第16章completablefuture组合式异步编程344&#34;&gt;&#xA;  第16章　CompletableFuture：组合式异步编程　　344&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac16%e7%ab%a0completablefuture%e7%bb%84%e5%90%88%e5%bc%8f%e5%bc%82%e6%ad%a5%e7%bc%96%e7%a8%8b344&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;161-future接口-344&#34;&gt;&#xA;  16.1 Future接口 344&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#161-future%e6%8e%a5%e5%8f%a3-344&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;16.1.1 Future接口的局限性 346&lt;/li&gt;&#xA;&lt;li&gt;16.1.2 使用CompletableFuture构建异步应用 346&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;162-实现异步api-347&#34;&gt;&#xA;  16.2 实现异步API 347&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#162-%e5%ae%9e%e7%8e%b0%e5%bc%82%e6%ad%a5api-347&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;16.2.1 将同步方法转换为异步方法 348&lt;/li&gt;&#xA;&lt;li&gt;16.2.2 错误处理 350&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;163-让你的代码免受阻塞之苦-352&#34;&gt;&#xA;  16.3 让你的代码免受阻塞之苦 352&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#163-%e8%ae%a9%e4%bd%a0%e7%9a%84%e4%bb%a3%e7%a0%81%e5%85%8d%e5%8f%97%e9%98%bb%e5%a1%9e%e4%b9%8b%e8%8b%a6-352&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;16.3.1 使用并行流对请求进行并行操作 353&lt;/li&gt;&#xA;&lt;li&gt;16.3.2 使用CompletableFuture发起异步请求 353&lt;/li&gt;&#xA;&lt;li&gt;16.3.3 寻找更好的方案 355&lt;/li&gt;&#xA;&lt;li&gt;16.3.4 使用定制的执行器 356&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;164-对多个异步任务进行流水线操作-358&#34;&gt;&#xA;  16.4 对多个异步任务进行流水线操作 358&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#164-%e5%af%b9%e5%a4%9a%e4%b8%aa%e5%bc%82%e6%ad%a5%e4%bb%bb%e5%8a%a1%e8%bf%9b%e8%a1%8c%e6%b5%81%e6%b0%b4%e7%ba%bf%e6%93%8d%e4%bd%9c-358&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;16.4.1 实现折扣服务 358&lt;/li&gt;&#xA;&lt;li&gt;16.4.2 使用Discount服务 359&lt;/li&gt;&#xA;&lt;li&gt;16.4.3 构造同步和异步操作 360&lt;/li&gt;&#xA;&lt;li&gt;16.4.4 将两个CompletableFuture对象整合起来，无论它们是否存在依赖 363&lt;/li&gt;&#xA;&lt;li&gt;16.4.5 对Future和Completable-Future 的回顾 364&lt;/li&gt;&#xA;&lt;li&gt;16.4.6 高效地使用超时机制 365&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;165-响应completablefuture的completion事件-366&#34;&gt;&#xA;  16.5 响应CompletableFuture的completion事件 366&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#165-%e5%93%8d%e5%ba%94completablefuture%e7%9a%84completion%e4%ba%8b%e4%bb%b6-366&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;16.5.1 对最佳价格查询器应用的优化 367&lt;/li&gt;&#xA;&lt;li&gt;16.5.2 付诸实践 368&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;166-路线图-369&#34;&gt;&#xA;  16.6 路线图 369&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#166-%e8%b7%af%e7%ba%bf%e5%9b%be-369&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;167-小结-369&#34;&gt;&#xA;  16.7 小结 369&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#167-%e5%b0%8f%e7%bb%93-369&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第17章反应式编程370&#34;&gt;&#xA;  第17章　反应式编程　　370&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac17%e7%ab%a0%e5%8f%8d%e5%ba%94%e5%bc%8f%e7%bc%96%e7%a8%8b370&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;171-反应式宣言-371&#34;&gt;&#xA;  17.1 反应式宣言 371&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#171-%e5%8f%8d%e5%ba%94%e5%bc%8f%e5%ae%a3%e8%a8%80-371&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;17.1.1 应用层的反应式编程 371&lt;/li&gt;&#xA;&lt;li&gt;17.1.2 反应式系统 373&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;172-反应式流以及flow-api-373&#34;&gt;&#xA;  17.2 反应式流以及Flow API 373&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#172-%e5%8f%8d%e5%ba%94%e5%bc%8f%e6%b5%81%e4%bb%a5%e5%8f%8aflow-api-373&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;17.2.1 Flow类 374&lt;/li&gt;&#xA;&lt;li&gt;17.2.2 创建你的第一个反应式应用 377&lt;/li&gt;&#xA;&lt;li&gt;17.2.3 使用Processor转换数据 381&lt;/li&gt;&#xA;&lt;li&gt;17.2.4 为什么Java并未提供Flow API的实现 383&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;173-使用反应式库rxjava-384&#34;&gt;&#xA;  17.3 使用反应式库RxJava 384&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#173-%e4%bd%bf%e7%94%a8%e5%8f%8d%e5%ba%94%e5%bc%8f%e5%ba%93rxjava-384&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;17.3.1 创建和使用Observable 385&lt;/li&gt;&#xA;&lt;li&gt;17.3.2 转换及整合多个Observable 392&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第六部分-函数式编程以及java未来的演进&#34;&gt;&#xA;  第六部分 函数式编程以及Java未来的演进&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e5%85%ad%e9%83%a8%e5%88%86-%e5%87%bd%e6%95%b0%e5%bc%8f%e7%bc%96%e7%a8%8b%e4%bb%a5%e5%8f%8ajava%e6%9c%aa%e6%9d%a5%e7%9a%84%e6%bc%94%e8%bf%9b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;第18章函数式的思考396&#34;&gt;&#xA;  第18章　函数式的思考　　396&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac18%e7%ab%a0%e5%87%bd%e6%95%b0%e5%bc%8f%e7%9a%84%e6%80%9d%e8%80%83396&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;181-实现和维护系统-396&#34;&gt;&#xA;  18.1 实现和维护系统 396&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#181-%e5%ae%9e%e7%8e%b0%e5%92%8c%e7%bb%b4%e6%8a%a4%e7%b3%bb%e7%bb%9f-396&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;18.1.1 共享的可变数据 397&lt;/li&gt;&#xA;&lt;li&gt;18.1.2 声明式编程 398&lt;/li&gt;&#xA;&lt;li&gt;18.1.3 为什么要采用函数式编程 399&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;182-什么是函数式编程-399&#34;&gt;&#xA;  18.2 什么是函数式编程 399&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#182-%e4%bb%80%e4%b9%88%e6%98%af%e5%87%bd%e6%95%b0%e5%bc%8f%e7%bc%96%e7%a8%8b-399&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;18.2.1 函数式Java编程 400&lt;/li&gt;&#xA;&lt;li&gt;18.2.2 引用透明性 402&lt;/li&gt;&#xA;&lt;li&gt;18.2.3 面向对象的编程和函数式编程的对比 402&lt;/li&gt;&#xA;&lt;li&gt;18.2.4 函数式编程实战 403&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;183-递归和迭代-405&#34;&gt;&#xA;  18.3 递归和迭代 405&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#183-%e9%80%92%e5%bd%92%e5%92%8c%e8%bf%ad%e4%bb%a3-405&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;184-小结-408&#34;&gt;&#xA;  18.4 小结 408&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#184-%e5%b0%8f%e7%bb%93-408&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第19章函数式编程的技巧409&#34;&gt;&#xA;  第19章　函数式编程的技巧　　409&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac19%e7%ab%a0%e5%87%bd%e6%95%b0%e5%bc%8f%e7%bc%96%e7%a8%8b%e7%9a%84%e6%8a%80%e5%b7%a7409&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;191-无处不在的函数-409&#34;&gt;&#xA;  19.1 无处不在的函数 409&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#191-%e6%97%a0%e5%a4%84%e4%b8%8d%e5%9c%a8%e7%9a%84%e5%87%bd%e6%95%b0-409&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;19.1.1 高阶函数 410&lt;/li&gt;&#xA;&lt;li&gt;19.1.2 柯里化 411&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;192-持久化数据结构-412&#34;&gt;&#xA;  19.2 持久化数据结构 412&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#192-%e6%8c%81%e4%b9%85%e5%8c%96%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84-412&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;19.2.1 破坏式更新和函数式更新的比较 413&lt;/li&gt;&#xA;&lt;li&gt;19.2.2 另一个使用Tree的例子 415&lt;/li&gt;&#xA;&lt;li&gt;19.2.3 采用函数式的方法 416&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;193-stream的延迟计算-418&#34;&gt;&#xA;  19.3 Stream的延迟计算 418&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#193-stream%e7%9a%84%e5%bb%b6%e8%bf%9f%e8%ae%a1%e7%ae%97-418&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;19.3.1 自定义的Stream 418&lt;/li&gt;&#xA;&lt;li&gt;19.3.2 创建你自己的延迟列表 420&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;194-模式匹配-425&#34;&gt;&#xA;  19.4 模式匹配 425&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#194-%e6%a8%a1%e5%bc%8f%e5%8c%b9%e9%85%8d-425&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;19.4.1 访问者模式 425&lt;/li&gt;&#xA;&lt;li&gt;19.4.2 用模式匹配力挽狂澜 426&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;195-杂项-429&#34;&gt;&#xA;  19.5 杂项 429&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#195-%e6%9d%82%e9%a1%b9-429&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;19.5.1 缓存或记忆表 429&lt;/li&gt;&#xA;&lt;li&gt;19.5.2 “返回同样的对象”意味着什么 430&lt;/li&gt;&#xA;&lt;li&gt;19.5.3 结合器 431&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;196-小结-432&#34;&gt;&#xA;  19.6 小结 432&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#196-%e5%b0%8f%e7%bb%93-432&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第20章面向对象和函数式编程的混合java和scala的比较433&#34;&gt;&#xA;  第20章　面向对象和函数式编程的混合：Java和Scala的比较　　433&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac20%e7%ab%a0%e9%9d%a2%e5%90%91%e5%af%b9%e8%b1%a1%e5%92%8c%e5%87%bd%e6%95%b0%e5%bc%8f%e7%bc%96%e7%a8%8b%e7%9a%84%e6%b7%b7%e5%90%88java%e5%92%8cscala%e7%9a%84%e6%af%94%e8%be%83433&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;201-scala简介-434&#34;&gt;&#xA;  20.1 Scala简介 434&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#201-scala%e7%ae%80%e4%bb%8b-434&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;20.1.1 你好，啤酒 434&lt;/li&gt;&#xA;&lt;li&gt;20.1.2 基础数据结构：List、Set、Map、Tuple、Stream以及Option 436&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;202-函数-440&#34;&gt;&#xA;  20.2 函数 440&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#202-%e5%87%bd%e6%95%b0-440&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;20.2.1 Scala中的一等函数 441&lt;/li&gt;&#xA;&lt;li&gt;20.2.2 匿名函数和闭包 442&lt;/li&gt;&#xA;&lt;li&gt;20.2.3 柯里化 443&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;203-类和trait-444&#34;&gt;&#xA;  20.3 类和trait 444&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#203-%e7%b1%bb%e5%92%8ctrait-444&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;20.3.1 更加简洁的Scala类 445&lt;/li&gt;&#xA;&lt;li&gt;20.3.2 Scala的trait与Java 8的接口对比 446&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;204-小结-447&#34;&gt;&#xA;  20.4 小结 447&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#204-%e5%b0%8f%e7%bb%93-447&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第21章结论以及java的未来448&#34;&gt;&#xA;  第21章　结论以及Java的未来　　448&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac21%e7%ab%a0%e7%bb%93%e8%ae%ba%e4%bb%a5%e5%8f%8ajava%e7%9a%84%e6%9c%aa%e6%9d%a5448&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;211-回顾java-8的语言特性-448&#34;&gt;&#xA;  21.1 回顾Java 8的语言特性 448&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#211-%e5%9b%9e%e9%a1%bejava-8%e7%9a%84%e8%af%ad%e8%a8%80%e7%89%b9%e6%80%a7-448&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;21.1.1 行为参数化（Lambda以及方法引用） 449&lt;/li&gt;&#xA;&lt;li&gt;21.1.2 流 449&lt;/li&gt;&#xA;&lt;li&gt;21.1.3 CompletableFuture 450&lt;/li&gt;&#xA;&lt;li&gt;21.1.4 Optional 450&lt;/li&gt;&#xA;&lt;li&gt;21.1.5 Flow API 451&lt;/li&gt;&#xA;&lt;li&gt;21.1.6 默认方法 451&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;212-java-9的模块系统-451&#34;&gt;&#xA;  21.2 Java 9的模块系统 451&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#212-java-9%e7%9a%84%e6%a8%a1%e5%9d%97%e7%b3%bb%e7%bb%9f-451&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;213-java-10的局部变量类型推断-453&#34;&gt;&#xA;  21.3 Java 10的局部变量类型推断 453&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#213-java-10%e7%9a%84%e5%b1%80%e9%83%a8%e5%8f%98%e9%87%8f%e7%b1%bb%e5%9e%8b%e6%8e%a8%e6%96%ad-453&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;214-java的未来-454&#34;&gt;&#xA;  21.4 Java的未来 454&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#214-java%e7%9a%84%e6%9c%aa%e6%9d%a5-454&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;21.4.1 声明处型变 454&lt;/li&gt;&#xA;&lt;li&gt;21.4.2 模式匹配 454&lt;/li&gt;&#xA;&lt;li&gt;21.4.3 更加丰富的泛型形式 455&lt;/li&gt;&#xA;&lt;li&gt;21.4.4 对不变性的更深层支持 457&lt;/li&gt;&#xA;&lt;li&gt;21.4.5 值类型 458&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;215-让java发展得更快-461&#34;&gt;&#xA;  21.5 让Java发展得更快 461&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#215-%e8%ae%a9java%e5%8f%91%e5%b1%95%e5%be%97%e6%9b%b4%e5%bf%ab-461&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;216-写在最后的话-462&#34;&gt;&#xA;  21.6 写在最后的话 462&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#216-%e5%86%99%e5%9c%a8%e6%9c%80%e5%90%8e%e7%9a%84%e8%af%9d-462&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;附录A 其他语言特性的更新 463&lt;/li&gt;&#xA;&lt;li&gt;附录B 其他类库的更新 467&lt;/li&gt;&#xA;&lt;li&gt;附录C 如何以并发方式在同一个流上执行多种操作 475&lt;/li&gt;&#xA;&lt;li&gt;附录D Lambda表达式和JVM字节码 483&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Java实战</title>
      <link>/zh/zh/post/books/computer-science/java%E5%AE%9E%E6%88%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/books/computer-science/java%E5%AE%9E%E6%88%98/</guid>
      <description>&lt;h1 id=&#34;java实战&#34;&gt;&#xA;  Java实战&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#java%e5%ae%9e%e6%88%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/34895968/&#34;&gt;Java实战（第2版）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第一部分-基础知识&#34;&gt;&#xA;  第一部分 基础知识&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%80%e9%83%a8%e5%88%86-%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;第1章java-8910以及11的变化2&#34;&gt;&#xA;  第1章　Java 8、9、10以及11的变化　　2&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0java-8910%e4%bb%a5%e5%8f%8a11%e7%9a%84%e5%8f%98%e5%8c%962&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;11-为什么要关心java的变化-2&#34;&gt;&#xA;  1.1 为什么要关心Java的变化 2&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e5%85%b3%e5%bf%83java%e7%9a%84%e5%8f%98%e5%8c%96-2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;12-java怎么还在变-4&#34;&gt;&#xA;  1.2 Java怎么还在变 4&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#12-java%e6%80%8e%e4%b9%88%e8%bf%98%e5%9c%a8%e5%8f%98-4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1.2.1 Java在编程语言生态系统中的位置 5&lt;/li&gt;&#xA;&lt;li&gt;1.2.2 流处理 6&lt;/li&gt;&#xA;&lt;li&gt;1.2.3 用行为参数化把代码传递给方法 7&lt;/li&gt;&#xA;&lt;li&gt;1.2.4 并行与共享的可变数据 8&lt;/li&gt;&#xA;&lt;li&gt;1.2.5 Java需要演变 9&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;13-java中的函数-9&#34;&gt;&#xA;  1.3 Java中的函数 9&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#13-java%e4%b8%ad%e7%9a%84%e5%87%bd%e6%95%b0-9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1.3.1 方法和Lambda作为一等值 10&lt;/li&gt;&#xA;&lt;li&gt;1.3.2 传递代码：一个例子 11&lt;/li&gt;&#xA;&lt;li&gt;1.3.3 从传递方法到Lambda 13&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;14-流-14&#34;&gt;&#xA;  1.4 流 14&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#14-%e6%b5%81-14&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;15-默认方法及java模块-17&#34;&gt;&#xA;  1.5 默认方法及Java模块 17&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#15-%e9%bb%98%e8%ae%a4%e6%96%b9%e6%b3%95%e5%8f%8ajava%e6%a8%a1%e5%9d%97-17&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;16-来自函数式编程的其他好思想-19&#34;&gt;&#xA;  1.6 来自函数式编程的其他好思想 19&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#16-%e6%9d%a5%e8%87%aa%e5%87%bd%e6%95%b0%e5%bc%8f%e7%bc%96%e7%a8%8b%e7%9a%84%e5%85%b6%e4%bb%96%e5%a5%bd%e6%80%9d%e6%83%b3-19&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;17-小结-20&#34;&gt;&#xA;  1.7 小结 20&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#17-%e5%b0%8f%e7%bb%93-20&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第2章通过行为参数化传递代码22&#34;&gt;&#xA;  第2章　通过行为参数化传递代码　　22&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0%e9%80%9a%e8%bf%87%e8%a1%8c%e4%b8%ba%e5%8f%82%e6%95%b0%e5%8c%96%e4%bc%a0%e9%80%92%e4%bb%a3%e7%a0%8122&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;21-应对不断变化的需求-23&#34;&gt;&#xA;  2.1 应对不断变化的需求 23&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#21-%e5%ba%94%e5%af%b9%e4%b8%8d%e6%96%ad%e5%8f%98%e5%8c%96%e7%9a%84%e9%9c%80%e6%b1%82-23&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2.1.1 初试牛刀：筛选绿苹果 23&lt;/li&gt;&#xA;&lt;li&gt;2.1.2 再展身手：把颜色作为参数 23&lt;/li&gt;&#xA;&lt;li&gt;2.1.3 第三次尝试：对你能想到的每个属性做筛选 24&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;22-行为参数化-25&#34;&gt;&#xA;  2.2 行为参数化 25&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#22-%e8%a1%8c%e4%b8%ba%e5%8f%82%e6%95%b0%e5%8c%96-25&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;23-对付啰唆-30&#34;&gt;&#xA;  2.3 对付啰唆 30&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#23-%e5%af%b9%e4%bb%98%e5%95%b0%e5%94%86-30&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2.3.1 匿名类 30&lt;/li&gt;&#xA;&lt;li&gt;2.3.2 第五次尝试：使用匿名类 31&lt;/li&gt;&#xA;&lt;li&gt;2.3.3 第六次尝试：使用Lambda表达式 32&lt;/li&gt;&#xA;&lt;li&gt;2.3.4 第七次尝试：将List类型抽象化 33&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;24-真实的例子-33&#34;&gt;&#xA;  2.4 真实的例子 33&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#24-%e7%9c%9f%e5%ae%9e%e7%9a%84%e4%be%8b%e5%ad%90-33&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2.4.1 用Comparator来排序 33&lt;/li&gt;&#xA;&lt;li&gt;2.4.2 用Runnable执行代码块 34&lt;/li&gt;&#xA;&lt;li&gt;2.4.3 通过Callable返回结果 35&lt;/li&gt;&#xA;&lt;li&gt;2.4.4 GUI事件处理 35&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;25-小结-36&#34;&gt;&#xA;  2.5 小结 36&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#25-%e5%b0%8f%e7%bb%93-36&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第3章lambda表达式37&#34;&gt;&#xA;  第3章　Lambda表达式　　37&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0lambda%e8%a1%a8%e8%be%be%e5%bc%8f37&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;31-lambda管中窥豹-37&#34;&gt;&#xA;  3.1 Lambda管中窥豹 37&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#31-lambda%e7%ae%a1%e4%b8%ad%e7%aa%a5%e8%b1%b9-37&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;32-在哪里以及如何使用lambda-40&#34;&gt;&#xA;  3.2 在哪里以及如何使用Lambda 40&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#32-%e5%9c%a8%e5%93%aa%e9%87%8c%e4%bb%a5%e5%8f%8a%e5%a6%82%e4%bd%95%e4%bd%bf%e7%94%a8lambda-40&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.2.1 函数式接口 40&lt;/li&gt;&#xA;&lt;li&gt;3.2.2 函数描述符 42&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;33-把lambda付诸实践环绕执行模式-44&#34;&gt;&#xA;  3.3 把Lambda付诸实践：环绕执行模式 44&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#33-%e6%8a%8alambda%e4%bb%98%e8%af%b8%e5%ae%9e%e8%b7%b5%e7%8e%af%e7%bb%95%e6%89%a7%e8%a1%8c%e6%a8%a1%e5%bc%8f-44&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.3.1 第1 步：记得行为参数化 44&lt;/li&gt;&#xA;&lt;li&gt;3.3.2 第2 步：使用函数式接口来传递行为 45&lt;/li&gt;&#xA;&lt;li&gt;3.3.3 第3 步：执行一个行为 45&lt;/li&gt;&#xA;&lt;li&gt;3.3.4 第4 步：传递Lambda 46&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;34-使用函数式接口-47&#34;&gt;&#xA;  3.4 使用函数式接口 47&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#34-%e4%bd%bf%e7%94%a8%e5%87%bd%e6%95%b0%e5%bc%8f%e6%8e%a5%e5%8f%a3-47&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.4.1 Predicate 47&lt;/li&gt;&#xA;&lt;li&gt;3.4.2 Consumer 47&lt;/li&gt;&#xA;&lt;li&gt;3.4.3 Function 48&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;35-类型检查类型推断以及限制-52&#34;&gt;&#xA;  3.5 类型检查、类型推断以及限制 52&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#35-%e7%b1%bb%e5%9e%8b%e6%a3%80%e6%9f%a5%e7%b1%bb%e5%9e%8b%e6%8e%a8%e6%96%ad%e4%bb%a5%e5%8f%8a%e9%99%90%e5%88%b6-52&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.5.1 类型检查 52&lt;/li&gt;&#xA;&lt;li&gt;3.5.2 同样的Lambda，不同的函数式接口 53&lt;/li&gt;&#xA;&lt;li&gt;3.5.3 类型推断 55&lt;/li&gt;&#xA;&lt;li&gt;3.5.4 使用局部变量 56&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;36-方法引用-57&#34;&gt;&#xA;  3.6 方法引用 57&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#36-%e6%96%b9%e6%b3%95%e5%bc%95%e7%94%a8-57&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.6.1 管中窥豹 57&lt;/li&gt;&#xA;&lt;li&gt;3.6.2 构造函数引用 60&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;37-lambda和方法引用实战-62&#34;&gt;&#xA;  3.7 Lambda和方法引用实战 62&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#37-lambda%e5%92%8c%e6%96%b9%e6%b3%95%e5%bc%95%e7%94%a8%e5%ae%9e%e6%88%98-62&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.7.1 第1 步：传递代码 62&lt;/li&gt;&#xA;&lt;li&gt;3.7.2 第2 步：使用匿名类 62&lt;/li&gt;&#xA;&lt;li&gt;3.7.3 第3 步：使用Lambda表达式 62&lt;/li&gt;&#xA;&lt;li&gt;3.7.4 第4 步：使用方法引用 63&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;38-复合lambda表达式的有用方法-63&#34;&gt;&#xA;  3.8 复合Lambda表达式的有用方法 63&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#38-%e5%a4%8d%e5%90%88lambda%e8%a1%a8%e8%be%be%e5%bc%8f%e7%9a%84%e6%9c%89%e7%94%a8%e6%96%b9%e6%b3%95-63&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.8.1 比较器复合 64&lt;/li&gt;&#xA;&lt;li&gt;3.8.2 谓词复合 64&lt;/li&gt;&#xA;&lt;li&gt;3.8.3 函数复合 65&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;39-数学中的类似思想-66&#34;&gt;&#xA;  3.9 数学中的类似思想 66&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#39-%e6%95%b0%e5%ad%a6%e4%b8%ad%e7%9a%84%e7%b1%bb%e4%bc%bc%e6%80%9d%e6%83%b3-66&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.9.1 积分 66&lt;/li&gt;&#xA;&lt;li&gt;3.9.2 与Java 8的Lambda联系起来 68&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;310-小结-68&#34;&gt;&#xA;  3.10 小结 68&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#310-%e5%b0%8f%e7%bb%93-68&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h2 id=&#34;第二部分-使用流进行函数式数据处理&#34;&gt;&#xA;  第二部分 使用流进行函数式数据处理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%ba%8c%e9%83%a8%e5%88%86-%e4%bd%bf%e7%94%a8%e6%b5%81%e8%bf%9b%e8%a1%8c%e5%87%bd%e6%95%b0%e5%bc%8f%e6%95%b0%e6%8d%ae%e5%a4%84%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;第4章引入流72&#34;&gt;&#xA;  第4章　引入流　　72&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0%e5%bc%95%e5%85%a5%e6%b5%8172&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;41-流是什么-72&#34;&gt;&#xA;  4.1 流是什么 72&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#41-%e6%b5%81%e6%98%af%e4%bb%80%e4%b9%88-72&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;42-流简介-76&#34;&gt;&#xA;  4.2 流简介 76&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#42-%e6%b5%81%e7%ae%80%e4%bb%8b-76&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;43-流与集合-78&#34;&gt;&#xA;  4.3 流与集合 78&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#43-%e6%b5%81%e4%b8%8e%e9%9b%86%e5%90%88-78&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;4.3.1 只能遍历一次 79&lt;/li&gt;&#xA;&lt;li&gt;4.3.2 外部迭代与内部迭代 80&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;44-流操作-82&#34;&gt;&#xA;  4.4 流操作 82&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#44-%e6%b5%81%e6%93%8d%e4%bd%9c-82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;4.4.1 中间操作 83&lt;/li&gt;&#xA;&lt;li&gt;4.4.2 终端操作 84&lt;/li&gt;&#xA;&lt;li&gt;4.4.3 使用流 84&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;45-路线图-85&#34;&gt;&#xA;  4.5 路线图 85&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#45-%e8%b7%af%e7%ba%bf%e5%9b%be-85&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;46-小结-85&#34;&gt;&#xA;  4.6 小结 85&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#46-%e5%b0%8f%e7%bb%93-85&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第5章使用流86&#34;&gt;&#xA;  第5章　使用流　　86&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac5%e7%ab%a0%e4%bd%bf%e7%94%a8%e6%b5%8186&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;51-筛选-87&#34;&gt;&#xA;  5.1 筛选 87&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#51-%e7%ad%9b%e9%80%89-87&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.1.1 用谓词筛选 87&lt;/li&gt;&#xA;&lt;li&gt;5.1.2 筛选各异的元素 87&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;52-流的切片-88&#34;&gt;&#xA;  5.2 流的切片 88&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#52-%e6%b5%81%e7%9a%84%e5%88%87%e7%89%87-88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.2.1 使用谓词对流进行切片 88&lt;/li&gt;&#xA;&lt;li&gt;5.2.2 截短流 90&lt;/li&gt;&#xA;&lt;li&gt;5.2.3 跳过元素 90&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;53-映射-91&#34;&gt;&#xA;  5.3 映射 91&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#53-%e6%98%a0%e5%b0%84-91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.3.1 对流中每一个元素应用函数 91&lt;/li&gt;&#xA;&lt;li&gt;5.3.2 流的扁平化 92&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;54-查找和匹配-95&#34;&gt;&#xA;  5.4 查找和匹配 95&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#54-%e6%9f%a5%e6%89%be%e5%92%8c%e5%8c%b9%e9%85%8d-95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.4.1 检查谓词是否至少匹配一个元素 95&lt;/li&gt;&#xA;&lt;li&gt;5.4.2 检查谓词是否匹配所有元素 96&lt;/li&gt;&#xA;&lt;li&gt;5.4.3 查找元素 96&lt;/li&gt;&#xA;&lt;li&gt;5.4.4 查找第一个元素 97&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;55-归约-98&#34;&gt;&#xA;  5.5 归约 98&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#55-%e5%bd%92%e7%ba%a6-98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.5.1 元素求和 98&lt;/li&gt;&#xA;&lt;li&gt;5.5.2 最大值和最小值 100&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;56-付诸实践-103&#34;&gt;&#xA;  5.6 付诸实践 103&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#56-%e4%bb%98%e8%af%b8%e5%ae%9e%e8%b7%b5-103&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.6.1 领域：交易员和交易 103&lt;/li&gt;&#xA;&lt;li&gt;5.6.2 解答 104&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;57-数值流-106&#34;&gt;&#xA;  5.7 数值流 106&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#57-%e6%95%b0%e5%80%bc%e6%b5%81-106&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.7.1 原始类型流特化 107&lt;/li&gt;&#xA;&lt;li&gt;5.7.2 数值范围 108&lt;/li&gt;&#xA;&lt;li&gt;5.7.3 数值流应用：勾股数 108&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;58-构建流-111&#34;&gt;&#xA;  5.8 构建流 111&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#58-%e6%9e%84%e5%bb%ba%e6%b5%81-111&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5.8.1 由值创建流 111&lt;/li&gt;&#xA;&lt;li&gt;5.8.2 由可空对象创建流 111&lt;/li&gt;&#xA;&lt;li&gt;5.8.3 由数组创建流 112&lt;/li&gt;&#xA;&lt;li&gt;5.8.4 由文件生成流 112&lt;/li&gt;&#xA;&lt;li&gt;5.8.5 由函数生成流：创建无限流 113&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;59-概述-116&#34;&gt;&#xA;  5.9 概述 116&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#59-%e6%a6%82%e8%bf%b0-116&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;510-小结-116&#34;&gt;&#xA;  5.10 小结 116&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#510-%e5%b0%8f%e7%bb%93-116&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第6章用流收集数据118&#34;&gt;&#xA;  第6章　用流收集数据　　118&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0%e7%94%a8%e6%b5%81%e6%94%b6%e9%9b%86%e6%95%b0%e6%8d%ae118&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;61-收集器简介-119&#34;&gt;&#xA;  6.1 收集器简介 119&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#61-%e6%94%b6%e9%9b%86%e5%99%a8%e7%ae%80%e4%bb%8b-119&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;6.1.1 收集器用作高级归约 119&lt;/li&gt;&#xA;&lt;li&gt;6.1.2 预定义收集器 120&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;62-归约和汇总-121&#34;&gt;&#xA;  6.2 归约和汇总 121&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#62-%e5%bd%92%e7%ba%a6%e5%92%8c%e6%b1%87%e6%80%bb-121&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;6.2.1 查找流中的最大值和最小值 121&lt;/li&gt;&#xA;&lt;li&gt;6.2.2 汇总 122&lt;/li&gt;&#xA;&lt;li&gt;6.2.3 连接字符串 123&lt;/li&gt;&#xA;&lt;li&gt;6.2.4 广义的归约汇总 124&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;63-分组-127&#34;&gt;&#xA;  6.3 分组 127&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#63-%e5%88%86%e7%bb%84-127&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;6.3.1 操作分组的元素 128&lt;/li&gt;&#xA;&lt;li&gt;6.3.2 多级分组 130&lt;/li&gt;&#xA;&lt;li&gt;6.3.3 按子组收集数据 131&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;64-分区-134&#34;&gt;&#xA;  6.4 分区 134&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#64-%e5%88%86%e5%8c%ba-134&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;6.4.1 分区的优势 135&lt;/li&gt;&#xA;&lt;li&gt;6.4.2 将数字按质数和非质数分区 136&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;65-收集器接口-138&#34;&gt;&#xA;  6.5 收集器接口 138&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#65-%e6%94%b6%e9%9b%86%e5%99%a8%e6%8e%a5%e5%8f%a3-138&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;6.5.1 理解Collector接口声明的方法 139&lt;/li&gt;&#xA;&lt;li&gt;6.5.2 全部融合到一起 143&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;66-开发你自己的收集器以获得更好的性能-144&#34;&gt;&#xA;  6.6 开发你自己的收集器以获得更好的性能 144&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#66-%e5%bc%80%e5%8f%91%e4%bd%a0%e8%87%aa%e5%b7%b1%e7%9a%84%e6%94%b6%e9%9b%86%e5%99%a8%e4%bb%a5%e8%8e%b7%e5%be%97%e6%9b%b4%e5%a5%bd%e7%9a%84%e6%80%a7%e8%83%bd-144&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;6.6.1 仅用质数做除数 145&lt;/li&gt;&#xA;&lt;li&gt;6.6.2 比较收集器的性能 148&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;67-小结-150&#34;&gt;&#xA;  6.7 小结 150&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#67-%e5%b0%8f%e7%bb%93-150&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第7章并行数据处理与性能151&#34;&gt;&#xA;  第7章　并行数据处理与性能　　151&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac7%e7%ab%a0%e5%b9%b6%e8%a1%8c%e6%95%b0%e6%8d%ae%e5%a4%84%e7%90%86%e4%b8%8e%e6%80%a7%e8%83%bd151&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;71-并行流-152&#34;&gt;&#xA;  7.1 并行流 152&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#71-%e5%b9%b6%e8%a1%8c%e6%b5%81-152&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;7.1.1 将顺序流转换为并行流 52&lt;/li&gt;&#xA;&lt;li&gt;7.1.2 测量流性能 154&lt;/li&gt;&#xA;&lt;li&gt;7.1.3 正确使用并行流 158&lt;/li&gt;&#xA;&lt;li&gt;7.1.4 高效使用并行流 159&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;72-分支合并框架-161&#34;&gt;&#xA;  7.2 分支/合并框架 161&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#72-%e5%88%86%e6%94%af%e5%90%88%e5%b9%b6%e6%a1%86%e6%9e%b6-161&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;7.2.1 使用RecursiveTask 161&lt;/li&gt;&#xA;&lt;li&gt;7.2.2 使用分支/合并框架的最佳做法 164&lt;/li&gt;&#xA;&lt;li&gt;7.2.3 工作窃取 165&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;73-spliterator-166&#34;&gt;&#xA;  7.3 Spliterator 166&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#73-spliterator-166&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;7.3.1 拆分过程 167&lt;/li&gt;&#xA;&lt;li&gt;7.3.2 实现你自己的Spliterator 168&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;74-小结-173&#34;&gt;&#xA;  7.4 小结 173&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#74-%e5%b0%8f%e7%bb%93-173&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h2 id=&#34;第三部分-使用流和lambda进行高效编程&#34;&gt;&#xA;  第三部分 使用流和Lambda进行高效编程&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%89%e9%83%a8%e5%88%86-%e4%bd%bf%e7%94%a8%e6%b5%81%e5%92%8clambda%e8%bf%9b%e8%a1%8c%e9%ab%98%e6%95%88%e7%bc%96%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;第8章collection-api的增强功能176&#34;&gt;&#xA;  第8章　Collection API的增强功能　　176&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac8%e7%ab%a0collection-api%e7%9a%84%e5%a2%9e%e5%bc%ba%e5%8a%9f%e8%83%bd176&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;81-集合工厂-176&#34;&gt;&#xA;  8.1 集合工厂 176&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#81-%e9%9b%86%e5%90%88%e5%b7%a5%e5%8e%82-176&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;8.1.1 List工厂 177&lt;/li&gt;&#xA;&lt;li&gt;8.1.2 Set工厂 178&lt;/li&gt;&#xA;&lt;li&gt;8.1.3 Map工厂 179&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;82-使用list和set-180&#34;&gt;&#xA;  8.2 使用List和Set 180&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#82-%e4%bd%bf%e7%94%a8list%e5%92%8cset-180&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;8.2.1 removeIf方法 180&lt;/li&gt;&#xA;&lt;li&gt;8.2.2 replaceAll方法 181&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;83-使用map-181&#34;&gt;&#xA;  8.3 使用Map 181&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#83-%e4%bd%bf%e7%94%a8map-181&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;8.3.1 forEach方法 182&lt;/li&gt;&#xA;&lt;li&gt;8.3.2 排序 182&lt;/li&gt;&#xA;&lt;li&gt;8.3.3 getOrDefault方法 183&lt;/li&gt;&#xA;&lt;li&gt;8.3.4 计算模式 183&lt;/li&gt;&#xA;&lt;li&gt;8.3.5 删除模式 184&lt;/li&gt;&#xA;&lt;li&gt;8.3.6 替换模式 185&lt;/li&gt;&#xA;&lt;li&gt;8.3.7 merge方法 185&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;84-改进的concurrenthashmap-187&#34;&gt;&#xA;  8.4 改进的ConcurrentHashMap 187&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#84-%e6%94%b9%e8%bf%9b%e7%9a%84concurrenthashmap-187&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;8.4.1 归约和搜索 187&lt;/li&gt;&#xA;&lt;li&gt;8.4.2 计数 188&lt;/li&gt;&#xA;&lt;li&gt;8.4.3 Set视图 188&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;85-小结-188&#34;&gt;&#xA;  8.5 小结 188&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#85-%e5%b0%8f%e7%bb%93-188&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第9章重构测试和调试189&#34;&gt;&#xA;  第9章　重构、测试和调试　　189&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac9%e7%ab%a0%e9%87%8d%e6%9e%84%e6%b5%8b%e8%af%95%e5%92%8c%e8%b0%83%e8%af%95189&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;91-为改善可读性和灵活性重构代码-189&#34;&gt;&#xA;  9.1 为改善可读性和灵活性重构代码 189&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#91-%e4%b8%ba%e6%94%b9%e5%96%84%e5%8f%af%e8%af%bb%e6%80%a7%e5%92%8c%e7%81%b5%e6%b4%bb%e6%80%a7%e9%87%8d%e6%9e%84%e4%bb%a3%e7%a0%81-189&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;9.1.1 改善代码的可读性 190&lt;/li&gt;&#xA;&lt;li&gt;9.1.2 从匿名类到Lambda表达式的转换 190&lt;/li&gt;&#xA;&lt;li&gt;9.1.3 从Lambda表达式到方法引用的转换 191&lt;/li&gt;&#xA;&lt;li&gt;9.1.4 从命令式的数据处理切换到Stream 193&lt;/li&gt;&#xA;&lt;li&gt;9.1.5 增加代码的灵活性 193&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;92-使用lambda重构面向对象的设计模式-195&#34;&gt;&#xA;  9.2 使用Lambda重构面向对象的设计模式 195&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#92-%e4%bd%bf%e7%94%a8lambda%e9%87%8d%e6%9e%84%e9%9d%a2%e5%90%91%e5%af%b9%e8%b1%a1%e7%9a%84%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f-195&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;9.2.1 策略模式 196&lt;/li&gt;&#xA;&lt;li&gt;9.2.2 模板方法 197&lt;/li&gt;&#xA;&lt;li&gt;9.2.3 观察者模式 198&lt;/li&gt;&#xA;&lt;li&gt;9.2.4 责任链模式 201&lt;/li&gt;&#xA;&lt;li&gt;9.2.5 工厂模式 202&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;93-测试lambda表达式-204&#34;&gt;&#xA;  9.3 测试Lambda表达式 204&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#93-%e6%b5%8b%e8%af%95lambda%e8%a1%a8%e8%be%be%e5%bc%8f-204&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;9.3.1 测试可见Lambda函数的行为 204&lt;/li&gt;&#xA;&lt;li&gt;9.3.2 测试使用Lambda的方法的行为 205&lt;/li&gt;&#xA;&lt;li&gt;9.3.3 将复杂的Lambda表达式分为不同的方法 205&lt;/li&gt;&#xA;&lt;li&gt;9.3.4 高阶函数的测试 206&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;94-调试-206&#34;&gt;&#xA;  9.4 调试 206&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#94-%e8%b0%83%e8%af%95-206&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;9.4.1 查看栈跟踪 206&lt;/li&gt;&#xA;&lt;li&gt;9.4.2 使用日志调试 208&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;95-小结-209&#34;&gt;&#xA;  9.5 小结 209&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#95-%e5%b0%8f%e7%bb%93-209&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第10章基于lambda的领域特定语言210&#34;&gt;&#xA;  第10章　基于Lambda的领域特定语言　　210&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac10%e7%ab%a0%e5%9f%ba%e4%ba%8elambda%e7%9a%84%e9%a2%86%e5%9f%9f%e7%89%b9%e5%ae%9a%e8%af%ad%e8%a8%80210&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;101-领域特定语言-212&#34;&gt;&#xA;  10.1 领域特定语言 212&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#101-%e9%a2%86%e5%9f%9f%e7%89%b9%e5%ae%9a%e8%af%ad%e8%a8%80-212&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;10.1.1 DSL的优点和弊端 212&lt;/li&gt;&#xA;&lt;li&gt;10.1.2 JVM中已提供的DSL解决方案 214&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;102-现代java-api中的小型dsl-217&#34;&gt;&#xA;  10.2 现代Java API中的小型DSL 217&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#102-%e7%8e%b0%e4%bb%a3java-api%e4%b8%ad%e7%9a%84%e5%b0%8f%e5%9e%8bdsl-217&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;10.2.1 把Stream API当成DSL去操作集合 219&lt;/li&gt;&#xA;&lt;li&gt;10.2.2 将Collectors作为DSL汇总数据 220&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;103-使用java创建dsl的模式与技巧-221&#34;&gt;&#xA;  10.3 使用Java创建DSL的模式与技巧 221&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#103-%e4%bd%bf%e7%94%a8java%e5%88%9b%e5%bb%badsl%e7%9a%84%e6%a8%a1%e5%bc%8f%e4%b8%8e%e6%8a%80%e5%b7%a7-221&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;10.3.1 方法链接 224&lt;/li&gt;&#xA;&lt;li&gt;10.3.2 使用嵌套函数 226&lt;/li&gt;&#xA;&lt;li&gt;10.3.3 使用Lambda表达式的函数序列 228&lt;/li&gt;&#xA;&lt;li&gt;10.3.4 把它们都放到一起 230&lt;/li&gt;&#xA;&lt;li&gt;10.3.5 在DSL中使用方法引用 232&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;104-java-8-dsl的实际应用-234&#34;&gt;&#xA;  10.4 Java 8 DSL的实际应用 234&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#104-java-8-dsl%e7%9a%84%e5%ae%9e%e9%99%85%e5%ba%94%e7%94%a8-234&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;10.4.1 jOOQ 235&lt;/li&gt;&#xA;&lt;li&gt;10.4.2 Cucumber 236&lt;/li&gt;&#xA;&lt;li&gt;10.4.3 Spring Integration 238&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;105-小结-239&#34;&gt;&#xA;  10.5 小结 239&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#105-%e5%b0%8f%e7%bb%93-239&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h2 id=&#34;第四部分-无所不在的java&#34;&gt;&#xA;  第四部分 无所不在的Java&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e5%9b%9b%e9%83%a8%e5%88%86-%e6%97%a0%e6%89%80%e4%b8%8d%e5%9c%a8%e7%9a%84java&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;第11章用optional取代null242&#34;&gt;&#xA;  第11章　用Optional取代null　　242&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac11%e7%ab%a0%e7%94%a8optional%e5%8f%96%e4%bb%a3null242&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;111-如何为缺失的值建模-243&#34;&gt;&#xA;  11.1 如何为缺失的值建模 243&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#111-%e5%a6%82%e4%bd%95%e4%b8%ba%e7%bc%ba%e5%a4%b1%e7%9a%84%e5%80%bc%e5%bb%ba%e6%a8%a1-243&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;11.1.1 采用防御式检查减少NullPointerException 243&lt;/li&gt;&#xA;&lt;li&gt;11.1.2 null带来的种种问题 245&lt;/li&gt;&#xA;&lt;li&gt;11.1.3 其他语言中null的替代品 245&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;112-optional类入门-246&#34;&gt;&#xA;  11.2 Optional类入门 246&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#112-optional%e7%b1%bb%e5%85%a5%e9%97%a8-246&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;113-应用optional的几种模式-248&#34;&gt;&#xA;  11.3 应用Optional的几种模式 248&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#113-%e5%ba%94%e7%94%a8optional%e7%9a%84%e5%87%a0%e7%a7%8d%e6%a8%a1%e5%bc%8f-248&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;11.3.1 创建Optional对象 248&lt;/li&gt;&#xA;&lt;li&gt;11.3.2 使用map从Optional对象中提取和转换值 248&lt;/li&gt;&#xA;&lt;li&gt;11.3.3 使用flatMap链接Optional对象 249&lt;/li&gt;&#xA;&lt;li&gt;11.3.4 操纵由Optional对象构成的Stream 253&lt;/li&gt;&#xA;&lt;li&gt;11.3.5 默认行为及解引用Optional对象 254&lt;/li&gt;&#xA;&lt;li&gt;11.3.6 两个Optional对象的组合 255&lt;/li&gt;&#xA;&lt;li&gt;11.3.7 使用filter剔除特定的值 257&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;114-使用optional的实战示例-258&#34;&gt;&#xA;  11.4 使用Optional的实战示例 258&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#114-%e4%bd%bf%e7%94%a8optional%e7%9a%84%e5%ae%9e%e6%88%98%e7%a4%ba%e4%be%8b-258&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;11.4.1 用Optional 封装可能为null的值 259&lt;/li&gt;&#xA;&lt;li&gt;11.4.2 异常与Optional的对比 259&lt;/li&gt;&#xA;&lt;li&gt;11.4.3 基础类型的Optional对象，以及为什么应该避免使用它们 260&lt;/li&gt;&#xA;&lt;li&gt;11.4.4 把所有内容整合起来 260&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;115-小结-262&#34;&gt;&#xA;  11.5 小结 262&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#115-%e5%b0%8f%e7%bb%93-262&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第12章新的日期和时间api263&#34;&gt;&#xA;  第12章　新的日期和时间API　　263&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac12%e7%ab%a0%e6%96%b0%e7%9a%84%e6%97%a5%e6%9c%9f%e5%92%8c%e6%97%b6%e9%97%b4api263&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;121-localdatelocaltimelocaldatetimeinstantduration以及period-264&#34;&gt;&#xA;  12.1 LocalDate、LocalTime、LocalDateTime、Instant、Duration以及Period 264&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#121-localdatelocaltimelocaldatetimeinstantduration%e4%bb%a5%e5%8f%8aperiod-264&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;12.1.1 使用LocalDate和LocalTime 264&lt;/li&gt;&#xA;&lt;li&gt;12.1.2 合并日期和时间 265&lt;/li&gt;&#xA;&lt;li&gt;12.1.3 机器的日期和时间格式 266&lt;/li&gt;&#xA;&lt;li&gt;12.1.4 定义Duration或Period 267&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;122-操纵解析和格式化日期-268&#34;&gt;&#xA;  12.2 操纵、解析和格式化日期 268&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#122-%e6%93%8d%e7%ba%b5%e8%a7%a3%e6%9e%90%e5%92%8c%e6%a0%bc%e5%bc%8f%e5%8c%96%e6%97%a5%e6%9c%9f-268&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;12.2.1 使用TemporalAdjuster 270&lt;/li&gt;&#xA;&lt;li&gt;12.2.2 打印输出及解析日期–时间对象 272&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;123-处理不同的时区和历法-274&#34;&gt;&#xA;  12.3 处理不同的时区和历法 274&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#123-%e5%a4%84%e7%90%86%e4%b8%8d%e5%90%8c%e7%9a%84%e6%97%b6%e5%8c%ba%e5%92%8c%e5%8e%86%e6%b3%95-274&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;12.3.1 使用时区 274&lt;/li&gt;&#xA;&lt;li&gt;12.3.2 利用和UTC/格林尼治时间的固定偏差计算时区 275&lt;/li&gt;&#xA;&lt;li&gt;12.3.3 使用别的日历系统 276&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;124-小结-277&#34;&gt;&#xA;  12.4 小结 277&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#124-%e5%b0%8f%e7%bb%93-277&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第13章默认方法278&#34;&gt;&#xA;  第13章　默认方法　　278&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac13%e7%ab%a0%e9%bb%98%e8%ae%a4%e6%96%b9%e6%b3%95278&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;131-不断演进的api-280&#34;&gt;&#xA;  13.1 不断演进的API 280&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#131-%e4%b8%8d%e6%96%ad%e6%bc%94%e8%bf%9b%e7%9a%84api-280&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;13.1.1 初始版本的API 281&lt;/li&gt;&#xA;&lt;li&gt;13.1.2 第二版API 281&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;132-概述默认方法-283&#34;&gt;&#xA;  13.2 概述默认方法 283&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#132-%e6%a6%82%e8%bf%b0%e9%bb%98%e8%ae%a4%e6%96%b9%e6%b3%95-283&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;133-默认方法的使用模式-285&#34;&gt;&#xA;  13.3 默认方法的使用模式 285&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#133-%e9%bb%98%e8%ae%a4%e6%96%b9%e6%b3%95%e7%9a%84%e4%bd%bf%e7%94%a8%e6%a8%a1%e5%bc%8f-285&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;13.3.1 可选方法 285&lt;/li&gt;&#xA;&lt;li&gt;13.3.2 行为的多继承 286&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;134-解决冲突的规则-289&#34;&gt;&#xA;  13.4 解决冲突的规则 289&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#134-%e8%a7%a3%e5%86%b3%e5%86%b2%e7%aa%81%e7%9a%84%e8%a7%84%e5%88%99-289&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;13.4.1 解决问题的三条规则 289&lt;/li&gt;&#xA;&lt;li&gt;13.4.2 选择提供了最具体实现的默认方法的接口 290&lt;/li&gt;&#xA;&lt;li&gt;13.4.3 冲突及如何显式地消除歧义 291&lt;/li&gt;&#xA;&lt;li&gt;13.4.4 菱形继承问题 293&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;135-小结-294&#34;&gt;&#xA;  13.5 小结 294&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#135-%e5%b0%8f%e7%bb%93-294&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第14章java模块系统295&#34;&gt;&#xA;  第14章　Java模块系统　　295&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac14%e7%ab%a0java%e6%a8%a1%e5%9d%97%e7%b3%bb%e7%bb%9f295&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;141-模块化的驱动力软件的推理-295&#34;&gt;&#xA;  14.1 模块化的驱动力：软件的推理 295&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#141-%e6%a8%a1%e5%9d%97%e5%8c%96%e7%9a%84%e9%a9%b1%e5%8a%a8%e5%8a%9b%e8%bd%af%e4%bb%b6%e7%9a%84%e6%8e%a8%e7%90%86-295&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;14.1.1 关注点分离 295&lt;/li&gt;&#xA;&lt;li&gt;14.1.2 信息隐藏 296&lt;/li&gt;&#xA;&lt;li&gt;14.1.3 Java软件 296&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;142-为什么要设计java模块系统-297&#34;&gt;&#xA;  14.2 为什么要设计Java模块系统 297&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#142-%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e8%ae%be%e8%ae%a1java%e6%a8%a1%e5%9d%97%e7%b3%bb%e7%bb%9f-297&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;14.2.1 模块化的局限性 297&lt;/li&gt;&#xA;&lt;li&gt;14.2.2 单体型的JDK 298&lt;/li&gt;&#xA;&lt;li&gt;14.2.3 与OSGi的比较 299&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;143-java模块全局视图-300&#34;&gt;&#xA;  14.3 Java模块：全局视图 300&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#143-java%e6%a8%a1%e5%9d%97%e5%85%a8%e5%b1%80%e8%a7%86%e5%9b%be-300&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;144-使用java模块系统开发应用-301&#34;&gt;&#xA;  14.4 使用Java模块系统开发应用 301&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#144-%e4%bd%bf%e7%94%a8java%e6%a8%a1%e5%9d%97%e7%b3%bb%e7%bb%9f%e5%bc%80%e5%8f%91%e5%ba%94%e7%94%a8-301&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;14.4.1 从头开始搭建一个应用 302&lt;/li&gt;&#xA;&lt;li&gt;14.4.2 细粒度和粗粒度的模块化 303&lt;/li&gt;&#xA;&lt;li&gt;14.4.3 Java模块系统基础 303&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;145-使用多个模块-304&#34;&gt;&#xA;  14.5 使用多个模块 304&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#145-%e4%bd%bf%e7%94%a8%e5%a4%9a%e4%b8%aa%e6%a8%a1%e5%9d%97-304&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;14.5.1 exports子句 304&lt;/li&gt;&#xA;&lt;li&gt;14.5.2 requires子句 305&lt;/li&gt;&#xA;&lt;li&gt;14.5.3 命名 306&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;146-编译及打包-306&#34;&gt;&#xA;  14.6 编译及打包 306&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#146-%e7%bc%96%e8%af%91%e5%8f%8a%e6%89%93%e5%8c%85-306&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;147-自动模块-310&#34;&gt;&#xA;  14.7 自动模块 310&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#147-%e8%87%aa%e5%8a%a8%e6%a8%a1%e5%9d%97-310&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;148-模块声明及子句-311&#34;&gt;&#xA;  14.8 模块声明及子句 311&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#148-%e6%a8%a1%e5%9d%97%e5%a3%b0%e6%98%8e%e5%8f%8a%e5%ad%90%e5%8f%a5-311&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;14.8.1 requires 311&lt;/li&gt;&#xA;&lt;li&gt;14.8.2 exports 311&lt;/li&gt;&#xA;&lt;li&gt;14.8.3 requires的传递 311&lt;/li&gt;&#xA;&lt;li&gt;14.8.4 exports to 312&lt;/li&gt;&#xA;&lt;li&gt;14.8.5 open和opens 312&lt;/li&gt;&#xA;&lt;li&gt;14.8.6 uses和provides 313&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;149-通过一个更复杂的例子了解更多-313&#34;&gt;&#xA;  14.9 通过一个更复杂的例子了解更多 313&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#149-%e9%80%9a%e8%bf%87%e4%b8%80%e4%b8%aa%e6%9b%b4%e5%a4%8d%e6%9d%82%e7%9a%84%e4%be%8b%e5%ad%90%e4%ba%86%e8%a7%a3%e6%9b%b4%e5%a4%9a-313&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;1410-小结-314&#34;&gt;&#xA;  14.10 小结 314&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1410-%e5%b0%8f%e7%bb%93-314&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h2 id=&#34;第五部分-提升java的并发性&#34;&gt;&#xA;  第五部分 提升Java的并发性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%ba%94%e9%83%a8%e5%88%86-%e6%8f%90%e5%8d%87java%e7%9a%84%e5%b9%b6%e5%8f%91%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;第15章completablefuture及反应式编程背后的概念316&#34;&gt;&#xA;  第15章　CompletableFuture及反应式编程背后的概念　　316&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac15%e7%ab%a0completablefuture%e5%8f%8a%e5%8f%8d%e5%ba%94%e5%bc%8f%e7%bc%96%e7%a8%8b%e8%83%8c%e5%90%8e%e7%9a%84%e6%a6%82%e5%bf%b5316&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;151-为支持并发而不断演进的java-318&#34;&gt;&#xA;  15.1 为支持并发而不断演进的Java 318&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#151-%e4%b8%ba%e6%94%af%e6%8c%81%e5%b9%b6%e5%8f%91%e8%80%8c%e4%b8%8d%e6%96%ad%e6%bc%94%e8%bf%9b%e7%9a%84java-318&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;15.1.1 线程以及更高层的抽象 319&lt;/li&gt;&#xA;&lt;li&gt;15.1.2 执行器和线程池 320&lt;/li&gt;&#xA;&lt;li&gt;15.1.3 其他的线程抽象：非嵌套方法调用 322&lt;/li&gt;&#xA;&lt;li&gt;15.1.4 你希望线程为你带来什么 324&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;152-同步及异步api-324&#34;&gt;&#xA;  15.2 同步及异步API 324&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#152-%e5%90%8c%e6%ad%a5%e5%8f%8a%e5%bc%82%e6%ad%a5api-324&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;15.2.1 Future风格的API 326&lt;/li&gt;&#xA;&lt;li&gt;15.2.2 反应式风格的API 327&lt;/li&gt;&#xA;&lt;li&gt;15.2.3 有害的睡眠及其他阻塞式操作 328&lt;/li&gt;&#xA;&lt;li&gt;15.2.4 实战验证 329&lt;/li&gt;&#xA;&lt;li&gt;15.2.5 如何使用异步API进行异常处理 330&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;153-线框管道模型-331&#34;&gt;&#xA;  15.3 “线框–管道”模型 331&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#153-%e7%ba%bf%e6%a1%86%e7%ae%a1%e9%81%93%e6%a8%a1%e5%9e%8b-331&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;154-为并发而生的completablefuture和结合器-332&#34;&gt;&#xA;  15.4 为并发而生的CompletableFuture和结合器 332&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#154-%e4%b8%ba%e5%b9%b6%e5%8f%91%e8%80%8c%e7%94%9f%e7%9a%84completablefuture%e5%92%8c%e7%bb%93%e5%90%88%e5%99%a8-332&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;155-发布订阅以及反应式编程-335&#34;&gt;&#xA;  15.5 “发布–订阅”以及反应式编程 335&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#155-%e5%8f%91%e5%b8%83%e8%ae%a2%e9%98%85%e4%bb%a5%e5%8f%8a%e5%8f%8d%e5%ba%94%e5%bc%8f%e7%bc%96%e7%a8%8b-335&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;15.5.1 示例：对两个流求和 337&lt;/li&gt;&#xA;&lt;li&gt;15.5.2 背压 341&lt;/li&gt;&#xA;&lt;li&gt;15.5.3 一种简单的真实背压 341&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;156-反应式系统和反应式编程-342&#34;&gt;&#xA;  15.6 反应式系统和反应式编程 342&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#156-%e5%8f%8d%e5%ba%94%e5%bc%8f%e7%b3%bb%e7%bb%9f%e5%92%8c%e5%8f%8d%e5%ba%94%e5%bc%8f%e7%bc%96%e7%a8%8b-342&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;157-路线图-342&#34;&gt;&#xA;  15.7 路线图 342&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#157-%e8%b7%af%e7%ba%bf%e5%9b%be-342&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;158-小结-343&#34;&gt;&#xA;  15.8 小结 343&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#158-%e5%b0%8f%e7%bb%93-343&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第16章completablefuture组合式异步编程344&#34;&gt;&#xA;  第16章　CompletableFuture：组合式异步编程　　344&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac16%e7%ab%a0completablefuture%e7%bb%84%e5%90%88%e5%bc%8f%e5%bc%82%e6%ad%a5%e7%bc%96%e7%a8%8b344&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;161-future接口-344&#34;&gt;&#xA;  16.1 Future接口 344&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#161-future%e6%8e%a5%e5%8f%a3-344&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;16.1.1 Future接口的局限性 346&lt;/li&gt;&#xA;&lt;li&gt;16.1.2 使用CompletableFuture构建异步应用 346&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;162-实现异步api-347&#34;&gt;&#xA;  16.2 实现异步API 347&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#162-%e5%ae%9e%e7%8e%b0%e5%bc%82%e6%ad%a5api-347&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;16.2.1 将同步方法转换为异步方法 348&lt;/li&gt;&#xA;&lt;li&gt;16.2.2 错误处理 350&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;163-让你的代码免受阻塞之苦-352&#34;&gt;&#xA;  16.3 让你的代码免受阻塞之苦 352&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#163-%e8%ae%a9%e4%bd%a0%e7%9a%84%e4%bb%a3%e7%a0%81%e5%85%8d%e5%8f%97%e9%98%bb%e5%a1%9e%e4%b9%8b%e8%8b%a6-352&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;16.3.1 使用并行流对请求进行并行操作 353&lt;/li&gt;&#xA;&lt;li&gt;16.3.2 使用CompletableFuture发起异步请求 353&lt;/li&gt;&#xA;&lt;li&gt;16.3.3 寻找更好的方案 355&lt;/li&gt;&#xA;&lt;li&gt;16.3.4 使用定制的执行器 356&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;164-对多个异步任务进行流水线操作-358&#34;&gt;&#xA;  16.4 对多个异步任务进行流水线操作 358&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#164-%e5%af%b9%e5%a4%9a%e4%b8%aa%e5%bc%82%e6%ad%a5%e4%bb%bb%e5%8a%a1%e8%bf%9b%e8%a1%8c%e6%b5%81%e6%b0%b4%e7%ba%bf%e6%93%8d%e4%bd%9c-358&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;16.4.1 实现折扣服务 358&lt;/li&gt;&#xA;&lt;li&gt;16.4.2 使用Discount服务 359&lt;/li&gt;&#xA;&lt;li&gt;16.4.3 构造同步和异步操作 360&lt;/li&gt;&#xA;&lt;li&gt;16.4.4 将两个CompletableFuture对象整合起来，无论它们是否存在依赖 363&lt;/li&gt;&#xA;&lt;li&gt;16.4.5 对Future和Completable-Future 的回顾 364&lt;/li&gt;&#xA;&lt;li&gt;16.4.6 高效地使用超时机制 365&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;165-响应completablefuture的completion事件-366&#34;&gt;&#xA;  16.5 响应CompletableFuture的completion事件 366&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#165-%e5%93%8d%e5%ba%94completablefuture%e7%9a%84completion%e4%ba%8b%e4%bb%b6-366&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;16.5.1 对最佳价格查询器应用的优化 367&lt;/li&gt;&#xA;&lt;li&gt;16.5.2 付诸实践 368&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;166-路线图-369&#34;&gt;&#xA;  16.6 路线图 369&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#166-%e8%b7%af%e7%ba%bf%e5%9b%be-369&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;167-小结-369&#34;&gt;&#xA;  16.7 小结 369&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#167-%e5%b0%8f%e7%bb%93-369&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第17章反应式编程370&#34;&gt;&#xA;  第17章　反应式编程　　370&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac17%e7%ab%a0%e5%8f%8d%e5%ba%94%e5%bc%8f%e7%bc%96%e7%a8%8b370&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;171-反应式宣言-371&#34;&gt;&#xA;  17.1 反应式宣言 371&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#171-%e5%8f%8d%e5%ba%94%e5%bc%8f%e5%ae%a3%e8%a8%80-371&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;17.1.1 应用层的反应式编程 371&lt;/li&gt;&#xA;&lt;li&gt;17.1.2 反应式系统 373&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;172-反应式流以及flow-api-373&#34;&gt;&#xA;  17.2 反应式流以及Flow API 373&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#172-%e5%8f%8d%e5%ba%94%e5%bc%8f%e6%b5%81%e4%bb%a5%e5%8f%8aflow-api-373&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;17.2.1 Flow类 374&lt;/li&gt;&#xA;&lt;li&gt;17.2.2 创建你的第一个反应式应用 377&lt;/li&gt;&#xA;&lt;li&gt;17.2.3 使用Processor转换数据 381&lt;/li&gt;&#xA;&lt;li&gt;17.2.4 为什么Java并未提供Flow API的实现 383&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;173-使用反应式库rxjava-384&#34;&gt;&#xA;  17.3 使用反应式库RxJava 384&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#173-%e4%bd%bf%e7%94%a8%e5%8f%8d%e5%ba%94%e5%bc%8f%e5%ba%93rxjava-384&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;17.3.1 创建和使用Observable 385&lt;/li&gt;&#xA;&lt;li&gt;17.3.2 转换及整合多个Observable 392&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第六部分-函数式编程以及java未来的演进&#34;&gt;&#xA;  第六部分 函数式编程以及Java未来的演进&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e5%85%ad%e9%83%a8%e5%88%86-%e5%87%bd%e6%95%b0%e5%bc%8f%e7%bc%96%e7%a8%8b%e4%bb%a5%e5%8f%8ajava%e6%9c%aa%e6%9d%a5%e7%9a%84%e6%bc%94%e8%bf%9b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;第18章函数式的思考396&#34;&gt;&#xA;  第18章　函数式的思考　　396&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac18%e7%ab%a0%e5%87%bd%e6%95%b0%e5%bc%8f%e7%9a%84%e6%80%9d%e8%80%83396&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;181-实现和维护系统-396&#34;&gt;&#xA;  18.1 实现和维护系统 396&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#181-%e5%ae%9e%e7%8e%b0%e5%92%8c%e7%bb%b4%e6%8a%a4%e7%b3%bb%e7%bb%9f-396&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;18.1.1 共享的可变数据 397&lt;/li&gt;&#xA;&lt;li&gt;18.1.2 声明式编程 398&lt;/li&gt;&#xA;&lt;li&gt;18.1.3 为什么要采用函数式编程 399&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;182-什么是函数式编程-399&#34;&gt;&#xA;  18.2 什么是函数式编程 399&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#182-%e4%bb%80%e4%b9%88%e6%98%af%e5%87%bd%e6%95%b0%e5%bc%8f%e7%bc%96%e7%a8%8b-399&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;18.2.1 函数式Java编程 400&lt;/li&gt;&#xA;&lt;li&gt;18.2.2 引用透明性 402&lt;/li&gt;&#xA;&lt;li&gt;18.2.3 面向对象的编程和函数式编程的对比 402&lt;/li&gt;&#xA;&lt;li&gt;18.2.4 函数式编程实战 403&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;183-递归和迭代-405&#34;&gt;&#xA;  18.3 递归和迭代 405&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#183-%e9%80%92%e5%bd%92%e5%92%8c%e8%bf%ad%e4%bb%a3-405&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;184-小结-408&#34;&gt;&#xA;  18.4 小结 408&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#184-%e5%b0%8f%e7%bb%93-408&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第19章函数式编程的技巧409&#34;&gt;&#xA;  第19章　函数式编程的技巧　　409&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac19%e7%ab%a0%e5%87%bd%e6%95%b0%e5%bc%8f%e7%bc%96%e7%a8%8b%e7%9a%84%e6%8a%80%e5%b7%a7409&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;191-无处不在的函数-409&#34;&gt;&#xA;  19.1 无处不在的函数 409&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#191-%e6%97%a0%e5%a4%84%e4%b8%8d%e5%9c%a8%e7%9a%84%e5%87%bd%e6%95%b0-409&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;19.1.1 高阶函数 410&lt;/li&gt;&#xA;&lt;li&gt;19.1.2 柯里化 411&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;192-持久化数据结构-412&#34;&gt;&#xA;  19.2 持久化数据结构 412&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#192-%e6%8c%81%e4%b9%85%e5%8c%96%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84-412&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;19.2.1 破坏式更新和函数式更新的比较 413&lt;/li&gt;&#xA;&lt;li&gt;19.2.2 另一个使用Tree的例子 415&lt;/li&gt;&#xA;&lt;li&gt;19.2.3 采用函数式的方法 416&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;193-stream的延迟计算-418&#34;&gt;&#xA;  19.3 Stream的延迟计算 418&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#193-stream%e7%9a%84%e5%bb%b6%e8%bf%9f%e8%ae%a1%e7%ae%97-418&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;19.3.1 自定义的Stream 418&lt;/li&gt;&#xA;&lt;li&gt;19.3.2 创建你自己的延迟列表 420&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;194-模式匹配-425&#34;&gt;&#xA;  19.4 模式匹配 425&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#194-%e6%a8%a1%e5%bc%8f%e5%8c%b9%e9%85%8d-425&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;19.4.1 访问者模式 425&lt;/li&gt;&#xA;&lt;li&gt;19.4.2 用模式匹配力挽狂澜 426&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;195-杂项-429&#34;&gt;&#xA;  19.5 杂项 429&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#195-%e6%9d%82%e9%a1%b9-429&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;19.5.1 缓存或记忆表 429&lt;/li&gt;&#xA;&lt;li&gt;19.5.2 “返回同样的对象”意味着什么 430&lt;/li&gt;&#xA;&lt;li&gt;19.5.3 结合器 431&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;196-小结-432&#34;&gt;&#xA;  19.6 小结 432&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#196-%e5%b0%8f%e7%bb%93-432&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第20章面向对象和函数式编程的混合java和scala的比较433&#34;&gt;&#xA;  第20章　面向对象和函数式编程的混合：Java和Scala的比较　　433&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac20%e7%ab%a0%e9%9d%a2%e5%90%91%e5%af%b9%e8%b1%a1%e5%92%8c%e5%87%bd%e6%95%b0%e5%bc%8f%e7%bc%96%e7%a8%8b%e7%9a%84%e6%b7%b7%e5%90%88java%e5%92%8cscala%e7%9a%84%e6%af%94%e8%be%83433&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;201-scala简介-434&#34;&gt;&#xA;  20.1 Scala简介 434&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#201-scala%e7%ae%80%e4%bb%8b-434&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;20.1.1 你好，啤酒 434&lt;/li&gt;&#xA;&lt;li&gt;20.1.2 基础数据结构：List、Set、Map、Tuple、Stream以及Option 436&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;202-函数-440&#34;&gt;&#xA;  20.2 函数 440&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#202-%e5%87%bd%e6%95%b0-440&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;20.2.1 Scala中的一等函数 441&lt;/li&gt;&#xA;&lt;li&gt;20.2.2 匿名函数和闭包 442&lt;/li&gt;&#xA;&lt;li&gt;20.2.3 柯里化 443&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;203-类和trait-444&#34;&gt;&#xA;  20.3 类和trait 444&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#203-%e7%b1%bb%e5%92%8ctrait-444&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;20.3.1 更加简洁的Scala类 445&lt;/li&gt;&#xA;&lt;li&gt;20.3.2 Scala的trait与Java 8的接口对比 446&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;204-小结-447&#34;&gt;&#xA;  20.4 小结 447&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#204-%e5%b0%8f%e7%bb%93-447&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;第21章结论以及java的未来448&#34;&gt;&#xA;  第21章　结论以及Java的未来　　448&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac21%e7%ab%a0%e7%bb%93%e8%ae%ba%e4%bb%a5%e5%8f%8ajava%e7%9a%84%e6%9c%aa%e6%9d%a5448&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;211-回顾java-8的语言特性-448&#34;&gt;&#xA;  21.1 回顾Java 8的语言特性 448&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#211-%e5%9b%9e%e9%a1%bejava-8%e7%9a%84%e8%af%ad%e8%a8%80%e7%89%b9%e6%80%a7-448&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;21.1.1 行为参数化（Lambda以及方法引用） 449&lt;/li&gt;&#xA;&lt;li&gt;21.1.2 流 449&lt;/li&gt;&#xA;&lt;li&gt;21.1.3 CompletableFuture 450&lt;/li&gt;&#xA;&lt;li&gt;21.1.4 Optional 450&lt;/li&gt;&#xA;&lt;li&gt;21.1.5 Flow API 451&lt;/li&gt;&#xA;&lt;li&gt;21.1.6 默认方法 451&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;212-java-9的模块系统-451&#34;&gt;&#xA;  21.2 Java 9的模块系统 451&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#212-java-9%e7%9a%84%e6%a8%a1%e5%9d%97%e7%b3%bb%e7%bb%9f-451&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;213-java-10的局部变量类型推断-453&#34;&gt;&#xA;  21.3 Java 10的局部变量类型推断 453&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#213-java-10%e7%9a%84%e5%b1%80%e9%83%a8%e5%8f%98%e9%87%8f%e7%b1%bb%e5%9e%8b%e6%8e%a8%e6%96%ad-453&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;214-java的未来-454&#34;&gt;&#xA;  21.4 Java的未来 454&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#214-java%e7%9a%84%e6%9c%aa%e6%9d%a5-454&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;21.4.1 声明处型变 454&lt;/li&gt;&#xA;&lt;li&gt;21.4.2 模式匹配 454&lt;/li&gt;&#xA;&lt;li&gt;21.4.3 更加丰富的泛型形式 455&lt;/li&gt;&#xA;&lt;li&gt;21.4.4 对不变性的更深层支持 457&lt;/li&gt;&#xA;&lt;li&gt;21.4.5 值类型 458&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;215-让java发展得更快-461&#34;&gt;&#xA;  21.5 让Java发展得更快 461&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#215-%e8%ae%a9java%e5%8f%91%e5%b1%95%e5%be%97%e6%9b%b4%e5%bf%ab-461&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;216-写在最后的话-462&#34;&gt;&#xA;  21.6 写在最后的话 462&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#216-%e5%86%99%e5%9c%a8%e6%9c%80%e5%90%8e%e7%9a%84%e8%af%9d-462&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;附录A 其他语言特性的更新 463&lt;/li&gt;&#xA;&lt;li&gt;附录B 其他类库的更新 467&lt;/li&gt;&#xA;&lt;li&gt;附录C 如何以并发方式在同一个流上执行多种操作 475&lt;/li&gt;&#xA;&lt;li&gt;附录D Lambda表达式和JVM字节码 483&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>linux</title>
      <link>/zh/post/computer-science/linux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/computer-science/linux/</guid>
      <description>&lt;h1 id=&#34;linux&#34;&gt;&#xA;  linux&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#linux&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;resources&#34;&gt;&#xA;  resources&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#resources&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/index.html&#34;&gt;鸟哥的Linux私房菜：基础学习篇 第四版&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;tail&#34;&gt;&#xA;  tail&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tail&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tail -f xxxx&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>linux</title>
      <link>/zh/zh/post/computer-science/linux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/computer-science/linux/</guid>
      <description>&lt;h1 id=&#34;linux&#34;&gt;&#xA;  linux&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#linux&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;resources&#34;&gt;&#xA;  resources&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#resources&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/index.html&#34;&gt;鸟哥的Linux私房菜：基础学习篇 第四版&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;tail&#34;&gt;&#xA;  tail&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tail&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tail -f xxxx&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Python神经网络编程</title>
      <link>/zh/post/books/computer-science/python%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/books/computer-science/python%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</guid>
      <description>&lt;h2 id=&#34;第1章-神经网络如何工作&#34;&gt;&#xA;  第1章 神经网络如何工作&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-%e7%a5%9e%e7%bb%8f%e7%bd%91%e7%bb%9c%e5%a6%82%e4%bd%95%e5%b7%a5%e4%bd%9c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Python神经网络编程</title>
      <link>/zh/zh/post/books/computer-science/python%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/books/computer-science/python%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</guid>
      <description>&lt;h2 id=&#34;第1章-神经网络如何工作&#34;&gt;&#xA;  第1章 神经网络如何工作&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-%e7%a5%9e%e7%bb%8f%e7%bd%91%e7%bb%9c%e5%a6%82%e4%bd%95%e5%b7%a5%e4%bd%9c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Redis设计与实现</title>
      <link>/zh/post/books/computer-science/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/books/computer-science/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;h2 id=&#34;第2章-简单动态字符串&#34;&gt;&#xA;  第2章 简单动态字符串&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-%e7%ae%80%e5%8d%95%e5%8a%a8%e6%80%81%e5%ad%97%e7%ac%a6%e4%b8%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Redis只会使用C字符串作为字面量，在大多数情况下，Redis使用SDS（Simple Dynamic String，简单动态字符串）作为字符串表示。&lt;/li&gt;&#xA;&lt;li&gt;比起C字符串，SDS具有以下优点：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1）常数复杂度获取字符串长度。&lt;/li&gt;&#xA;&lt;li&gt;2）杜绝缓冲区溢出。&lt;/li&gt;&#xA;&lt;li&gt;3）减少修改字符串长度时所需的内存重分配次数。&lt;/li&gt;&#xA;&lt;li&gt;4）二进制安全。&lt;/li&gt;&#xA;&lt;li&gt;5）兼容部分C字符串函数&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第3章-链表&#34;&gt;&#xA;  第3章 链表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0-%e9%93%be%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;链表被广泛用于实现Redis的各种功能，比如列表键、发布与订阅、慢查询、监视器等。&lt;/li&gt;&#xA;&lt;li&gt;每个链表节点由一个listNode结构来表示，每个节点都有一个指向前置节点和后置节点的指针，所以Redis的链表实现是&lt;strong&gt;双端链表&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;每个链表使用一个list结构来表示，这个结构带有&lt;strong&gt;表头节点指针&lt;/strong&gt;、&lt;strong&gt;表尾节点指针&lt;/strong&gt;，以及&lt;strong&gt;链表长度&lt;/strong&gt;等信息。&lt;/li&gt;&#xA;&lt;li&gt;因为链表表头节点的前置节点和表尾节点的后置节点都指向NULL，所以Redis的链表实现是&lt;strong&gt;无环链表&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;通过为链表设置不同的类型特定函数，Redis的链表可以用于&lt;strong&gt;保存各种不同类型的值&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第4章-字典&#34;&gt;&#xA;  第4章 字典&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0-%e5%ad%97%e5%85%b8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;字典被广泛用于实现Redis的各种功能，其中包括数据库和哈希键。&lt;/li&gt;&#xA;&lt;li&gt;Redis中的字典使用哈希表作为底层实现，每个字典带有两个哈希表，一个平时使用，另一个仅在进行rehash时使用。&lt;/li&gt;&#xA;&lt;li&gt;当字典被用作数据库的底层实现，或者哈希键的底层实现时，Redis使用&lt;strong&gt;MurmurHash2&lt;/strong&gt;算法来计算键的哈希值。&lt;/li&gt;&#xA;&lt;li&gt;哈希表使用&lt;strong&gt;链地址法&lt;/strong&gt;来解决键冲突，被分配到同一个索引上的多个键值对会连接成一个单向链表。&lt;/li&gt;&#xA;&lt;li&gt;在对哈希表进行扩展或者收缩操作时，程序需要将现有哈希表包含的所有键值对rehash到新哈希表里面，并且这个rehash过程并不是一次性地完成的，而是&lt;strong&gt;渐进式&lt;/strong&gt;地完成的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第5章-跳跃表&#34;&gt;&#xA;  第5章 跳跃表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac5%e7%ab%a0-%e8%b7%b3%e8%b7%83%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;跳跃表是有序集合的底层实现之一。&lt;/li&gt;&#xA;&lt;li&gt;Redis的跳跃表实现由&lt;code&gt;zskiplist&lt;/code&gt;和&lt;code&gt;zskiplistNode&lt;/code&gt;两个结构组成，其中&lt;code&gt;zskiplist&lt;/code&gt;用于保存跳跃表信息（比如表头节点、表尾节点、长度），而&lt;code&gt;zskiplistNode&lt;/code&gt;则用于表示跳跃表节点。&lt;/li&gt;&#xA;&lt;li&gt;每个跳跃表节点的层高都是1至32之间的随机数。&lt;/li&gt;&#xA;&lt;li&gt;在同一个跳跃表中，多个节点可以包含相同的&lt;code&gt;分值&lt;/code&gt;，但每个节点的&lt;code&gt;成员对象&lt;/code&gt;必须是唯一的。&lt;/li&gt;&#xA;&lt;li&gt;跳跃表中的节点按照分值大小进行排序，当分值相同时，节点按照成员对象的大小进行排序。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第6章-整数集合&#34;&gt;&#xA;  第6章 整数集合&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0-%e6%95%b4%e6%95%b0%e9%9b%86%e5%90%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;整数集合是集合键的底层实现之一&lt;/li&gt;&#xA;&lt;li&gt;整数集合的底层实现为数组，这个数组以有序、无重复的方式保存集合元素，在有需要时，程序会根据新添加元素的类型，改变这个数组的类型&lt;/li&gt;&#xA;&lt;li&gt;升级操作为整数集合带来了操作上的灵活性，并且尽可能地节约了内存&lt;/li&gt;&#xA;&lt;li&gt;整数集合只支持升级操作，不支持降级操作&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第7章-压缩列表&#34;&gt;&#xA;  第7章 压缩列表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac7%e7%ab%a0-%e5%8e%8b%e7%bc%a9%e5%88%97%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;压缩列表是一种为&lt;strong&gt;节约内存&lt;/strong&gt;而开发的顺序型数据结构&lt;/li&gt;&#xA;&lt;li&gt;压缩列表被用作列表键和哈希键的底层实现之一&lt;/li&gt;&#xA;&lt;li&gt;压缩列表可以包含多个节点，每个节点可以保存一个&lt;strong&gt;字节数组&lt;/strong&gt;或者&lt;strong&gt;整数值&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;添加新节点到压缩列表，或者从压缩列表中删除节点，可能会引发&lt;strong&gt;连锁更新&lt;/strong&gt;操作，但这种操作出现的几率并不高&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第8章-对象&#34;&gt;&#xA;  第8章 对象&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac8%e7%ab%a0-%e5%af%b9%e8%b1%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Redis使用对象来表示数据库中的键和值，每次当我们在Redis的数据库中新创建一个键值对时，我们至少会创建两个对象，一个对象用作键值对的键（键对象），另一个对象用作键值对的值（值对象）&lt;/li&gt;&#xA;&lt;li&gt;对象的类型&#xA;&lt;ul&gt;&#xA;&lt;li&gt;字符串对象 &lt;code&gt;REDIS_STRING&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;列表对象 &lt;code&gt;REDIS_LIST&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;哈希对象 &lt;code&gt;REDIS_HASH&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;集合对象 &lt;code&gt;REDIS_SET&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;有序集合对象 &lt;code&gt;REDIS_ZSET&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;对于Redis数据库保存的键值对来说，键总是一个字符串对象，而值则可以是字符串对象、列表对象、哈希对象、集合对象或者有序集合对象的其中一种&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当我们称呼一个数据库键为“字符串键”时，我们指的是“这个数据库键所对应的值为字符串对象”&lt;/li&gt;&#xA;&lt;li&gt;当我们称呼一个键为“列表键”时，我们指的是“这个数据库键所对应的值为列表对象”&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;TYPE命令的实现方式也与此类似，当我们对一个数据库键执行TYPE命令时，命令返回的结果为数据库键对应的值对象的类型，而不是键对象的类型&#xA;&lt;ul&gt;&#xA;&lt;li&gt;因为键的类型始终为字符串&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Redis设计与实现</title>
      <link>/zh/zh/post/books/computer-science/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/books/computer-science/redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;h2 id=&#34;第2章-简单动态字符串&#34;&gt;&#xA;  第2章 简单动态字符串&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-%e7%ae%80%e5%8d%95%e5%8a%a8%e6%80%81%e5%ad%97%e7%ac%a6%e4%b8%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Redis只会使用C字符串作为字面量，在大多数情况下，Redis使用SDS（Simple Dynamic String，简单动态字符串）作为字符串表示。&lt;/li&gt;&#xA;&lt;li&gt;比起C字符串，SDS具有以下优点：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1）常数复杂度获取字符串长度。&lt;/li&gt;&#xA;&lt;li&gt;2）杜绝缓冲区溢出。&lt;/li&gt;&#xA;&lt;li&gt;3）减少修改字符串长度时所需的内存重分配次数。&lt;/li&gt;&#xA;&lt;li&gt;4）二进制安全。&lt;/li&gt;&#xA;&lt;li&gt;5）兼容部分C字符串函数&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第3章-链表&#34;&gt;&#xA;  第3章 链表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0-%e9%93%be%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;链表被广泛用于实现Redis的各种功能，比如列表键、发布与订阅、慢查询、监视器等。&lt;/li&gt;&#xA;&lt;li&gt;每个链表节点由一个listNode结构来表示，每个节点都有一个指向前置节点和后置节点的指针，所以Redis的链表实现是&lt;strong&gt;双端链表&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;每个链表使用一个list结构来表示，这个结构带有&lt;strong&gt;表头节点指针&lt;/strong&gt;、&lt;strong&gt;表尾节点指针&lt;/strong&gt;，以及&lt;strong&gt;链表长度&lt;/strong&gt;等信息。&lt;/li&gt;&#xA;&lt;li&gt;因为链表表头节点的前置节点和表尾节点的后置节点都指向NULL，所以Redis的链表实现是&lt;strong&gt;无环链表&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;通过为链表设置不同的类型特定函数，Redis的链表可以用于&lt;strong&gt;保存各种不同类型的值&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第4章-字典&#34;&gt;&#xA;  第4章 字典&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0-%e5%ad%97%e5%85%b8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;字典被广泛用于实现Redis的各种功能，其中包括数据库和哈希键。&lt;/li&gt;&#xA;&lt;li&gt;Redis中的字典使用哈希表作为底层实现，每个字典带有两个哈希表，一个平时使用，另一个仅在进行rehash时使用。&lt;/li&gt;&#xA;&lt;li&gt;当字典被用作数据库的底层实现，或者哈希键的底层实现时，Redis使用&lt;strong&gt;MurmurHash2&lt;/strong&gt;算法来计算键的哈希值。&lt;/li&gt;&#xA;&lt;li&gt;哈希表使用&lt;strong&gt;链地址法&lt;/strong&gt;来解决键冲突，被分配到同一个索引上的多个键值对会连接成一个单向链表。&lt;/li&gt;&#xA;&lt;li&gt;在对哈希表进行扩展或者收缩操作时，程序需要将现有哈希表包含的所有键值对rehash到新哈希表里面，并且这个rehash过程并不是一次性地完成的，而是&lt;strong&gt;渐进式&lt;/strong&gt;地完成的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第5章-跳跃表&#34;&gt;&#xA;  第5章 跳跃表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac5%e7%ab%a0-%e8%b7%b3%e8%b7%83%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;跳跃表是有序集合的底层实现之一。&lt;/li&gt;&#xA;&lt;li&gt;Redis的跳跃表实现由&lt;code&gt;zskiplist&lt;/code&gt;和&lt;code&gt;zskiplistNode&lt;/code&gt;两个结构组成，其中&lt;code&gt;zskiplist&lt;/code&gt;用于保存跳跃表信息（比如表头节点、表尾节点、长度），而&lt;code&gt;zskiplistNode&lt;/code&gt;则用于表示跳跃表节点。&lt;/li&gt;&#xA;&lt;li&gt;每个跳跃表节点的层高都是1至32之间的随机数。&lt;/li&gt;&#xA;&lt;li&gt;在同一个跳跃表中，多个节点可以包含相同的&lt;code&gt;分值&lt;/code&gt;，但每个节点的&lt;code&gt;成员对象&lt;/code&gt;必须是唯一的。&lt;/li&gt;&#xA;&lt;li&gt;跳跃表中的节点按照分值大小进行排序，当分值相同时，节点按照成员对象的大小进行排序。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第6章-整数集合&#34;&gt;&#xA;  第6章 整数集合&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0-%e6%95%b4%e6%95%b0%e9%9b%86%e5%90%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;整数集合是集合键的底层实现之一&lt;/li&gt;&#xA;&lt;li&gt;整数集合的底层实现为数组，这个数组以有序、无重复的方式保存集合元素，在有需要时，程序会根据新添加元素的类型，改变这个数组的类型&lt;/li&gt;&#xA;&lt;li&gt;升级操作为整数集合带来了操作上的灵活性，并且尽可能地节约了内存&lt;/li&gt;&#xA;&lt;li&gt;整数集合只支持升级操作，不支持降级操作&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第7章-压缩列表&#34;&gt;&#xA;  第7章 压缩列表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac7%e7%ab%a0-%e5%8e%8b%e7%bc%a9%e5%88%97%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;压缩列表是一种为&lt;strong&gt;节约内存&lt;/strong&gt;而开发的顺序型数据结构&lt;/li&gt;&#xA;&lt;li&gt;压缩列表被用作列表键和哈希键的底层实现之一&lt;/li&gt;&#xA;&lt;li&gt;压缩列表可以包含多个节点，每个节点可以保存一个&lt;strong&gt;字节数组&lt;/strong&gt;或者&lt;strong&gt;整数值&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;添加新节点到压缩列表，或者从压缩列表中删除节点，可能会引发&lt;strong&gt;连锁更新&lt;/strong&gt;操作，但这种操作出现的几率并不高&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第8章-对象&#34;&gt;&#xA;  第8章 对象&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac8%e7%ab%a0-%e5%af%b9%e8%b1%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Redis使用对象来表示数据库中的键和值，每次当我们在Redis的数据库中新创建一个键值对时，我们至少会创建两个对象，一个对象用作键值对的键（键对象），另一个对象用作键值对的值（值对象）&lt;/li&gt;&#xA;&lt;li&gt;对象的类型&#xA;&lt;ul&gt;&#xA;&lt;li&gt;字符串对象 &lt;code&gt;REDIS_STRING&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;列表对象 &lt;code&gt;REDIS_LIST&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;哈希对象 &lt;code&gt;REDIS_HASH&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;集合对象 &lt;code&gt;REDIS_SET&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;有序集合对象 &lt;code&gt;REDIS_ZSET&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;对于Redis数据库保存的键值对来说，键总是一个字符串对象，而值则可以是字符串对象、列表对象、哈希对象、集合对象或者有序集合对象的其中一种&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当我们称呼一个数据库键为“字符串键”时，我们指的是“这个数据库键所对应的值为字符串对象”&lt;/li&gt;&#xA;&lt;li&gt;当我们称呼一个键为“列表键”时，我们指的是“这个数据库键所对应的值为列表对象”&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;TYPE命令的实现方式也与此类似，当我们对一个数据库键执行TYPE命令时，命令返回的结果为数据库键对应的值对象的类型，而不是键对象的类型&#xA;&lt;ul&gt;&#xA;&lt;li&gt;因为键的类型始终为字符串&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Spring Cloud微服务：入门、实战与进阶</title>
      <link>/zh/post/books/computer-science/spring-cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98%E4%B8%8E%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/books/computer-science/spring-cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98%E4%B8%8E%E8%BF%9B%E9%98%B6/</guid>
      <description>&lt;h3 id=&#34;13-什么是spring-cloud&#34;&gt;&#xA;  1.3 什么是Spring Cloud&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#13-%e4%bb%80%e4%b9%88%e6%98%afspring-cloud&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Eureka&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;服务注册中心，用于服务管理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Ribbon&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;基于客户端的负载均衡组件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Hystrix&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;容错框架，能够防止服务的雪崩效应&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Feign&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Web服务客户端，能够简化HTTP接口的调用&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Zuul&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;API网关，提供路由转发、请求过滤等功能&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Config&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;分布式配置管理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Sleuth&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;服务跟踪&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Stream&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;构建消息驱动的微服务应用程序的框架&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Bus&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;消息代理的集群消息总线。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第3章eureka注册中心&#34;&gt;&#xA;  第3章　Eureka注册中心&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0eureka%e6%b3%a8%e5%86%8c%e4%b8%ad%e5%bf%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Spring Cloud Eureka是一个基于REST的服务，并且提供了基于Java的客户端组件，能够非常方便地&lt;strong&gt;将服务注册到Spring Cloud Eureka中进行统一管理&lt;/strong&gt;。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;服务治理&lt;/strong&gt;是微服务架构中必不可少的一部分，阿里开源的Dubbo框架就是针对服务治理的。服务治理必须要有一个注册中心，除了用Eureka作为注册中心外，我们还可以使用Consul、Etcd、Zookeeper等来作为服务的注册中心。&lt;/li&gt;&#xA;&lt;li&gt;用过Dubbo的读者应该清楚，Dubbo中也有几种注册中心，比如基于Zookeeper、基于Redis等，不过用得最多的还是Zookeeper方式。至于使用哪种方式都是可以的，&lt;strong&gt;注册中心无非就是管理所有服务的信息和状态&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;程序也是一样，&lt;strong&gt;当你需要调用某一个服务的时候，你会先去Eureka中去拉取服务列表，查看你调用的服务在不在其中，在的话就拿到服务地址、端口等信息，然后调用&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;为什么Eureka比Zookeeper更适合作为注册中心呢？&#xA;&lt;ul&gt;&#xA;&lt;li&gt;主要是因为&lt;strong&gt;Eureka是基于AP原则构建的，而ZooKeeper是基于CP原则构建的&lt;/strong&gt;。在分布式系统领域有个著名的CAP定理，即&lt;strong&gt;C为数据一致性；A为服务可用性；P为服务对网络分区故障的容错性&lt;/strong&gt;。这三个特性在任何分布式系统中都不能同时满足，最多同时满足两个。&lt;/li&gt;&#xA;&lt;li&gt;Zookeeper有一个Leader，而且在这个Leader无法使用的时候通过Paxos(ZAB)算法选举出一个新的Leader。这个Leader的任务就是保证写数据的时候只向这个Leader写入，Leader会同步信息到其他节点。通过这个操作就可以保证数据的一致性。&lt;/li&gt;&#xA;&lt;li&gt;总而言之，想要保证AP就要用Eureka，想要保证CP就要用Zookeeper。Dubbo中大部分都是基于Zookeeper作为注册中心的。Spring Cloud中当然首选Eureka。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第4章客户端负载均衡ribbon&#34;&gt;&#xA;  第4章　客户端负载均衡Ribbon&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0%e5%ae%a2%e6%88%b7%e7%ab%af%e8%b4%9f%e8%bd%bd%e5%9d%87%e8%a1%a1ribbon&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;目前主流的负载方案分为两种：一种是&lt;strong&gt;集中式负载均衡&lt;/strong&gt;，在消费者和服务提供方中间使用独立的代理方式进行负载，有硬件的（比如F5），也有软件的（比如Nginx）。另一种则是客户端自己做负载均衡，根据自己的请求情况做负载，&lt;strong&gt;Ribbon就属于客户端自己做负载&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;Ribbon作为一款客户端负载均衡框架，&lt;strong&gt;默认的负载策略是轮询&lt;/strong&gt;，同时也提供了很多其他的策略，能够让用户根据自身的业务需求进行选择。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第6章hystrix服务容错处理&#34;&gt;&#xA;  第6章　Hystrix服务容错处理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0hystrix%e6%9c%8d%e5%8a%a1%e5%ae%b9%e9%94%99%e5%a4%84%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在微服务架构中存在多个可直接调用的服务，这些服务若在调用时出现故障会导致连锁效应，也就是可能会让整个系统变得不可用，这种情况我们称之为&lt;strong&gt;服务雪崩效应&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;Hystrix是Netflix针对微服务分布式系统采用的&lt;strong&gt;熔断保护中间件&lt;/strong&gt;，相当于电路中的保险丝。&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Spring Cloud微服务：入门、实战与进阶</title>
      <link>/zh/zh/post/books/computer-science/spring-cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98%E4%B8%8E%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/books/computer-science/spring-cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98%E4%B8%8E%E8%BF%9B%E9%98%B6/</guid>
      <description>&lt;h3 id=&#34;13-什么是spring-cloud&#34;&gt;&#xA;  1.3 什么是Spring Cloud&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#13-%e4%bb%80%e4%b9%88%e6%98%afspring-cloud&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Eureka&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;服务注册中心，用于服务管理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Ribbon&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;基于客户端的负载均衡组件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Hystrix&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;容错框架，能够防止服务的雪崩效应&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Feign&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Web服务客户端，能够简化HTTP接口的调用&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Zuul&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;API网关，提供路由转发、请求过滤等功能&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Config&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;分布式配置管理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Sleuth&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;服务跟踪&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Stream&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;构建消息驱动的微服务应用程序的框架&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Bus&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;消息代理的集群消息总线。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第3章eureka注册中心&#34;&gt;&#xA;  第3章　Eureka注册中心&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0eureka%e6%b3%a8%e5%86%8c%e4%b8%ad%e5%bf%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Spring Cloud Eureka是一个基于REST的服务，并且提供了基于Java的客户端组件，能够非常方便地&lt;strong&gt;将服务注册到Spring Cloud Eureka中进行统一管理&lt;/strong&gt;。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;服务治理&lt;/strong&gt;是微服务架构中必不可少的一部分，阿里开源的Dubbo框架就是针对服务治理的。服务治理必须要有一个注册中心，除了用Eureka作为注册中心外，我们还可以使用Consul、Etcd、Zookeeper等来作为服务的注册中心。&lt;/li&gt;&#xA;&lt;li&gt;用过Dubbo的读者应该清楚，Dubbo中也有几种注册中心，比如基于Zookeeper、基于Redis等，不过用得最多的还是Zookeeper方式。至于使用哪种方式都是可以的，&lt;strong&gt;注册中心无非就是管理所有服务的信息和状态&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;程序也是一样，&lt;strong&gt;当你需要调用某一个服务的时候，你会先去Eureka中去拉取服务列表，查看你调用的服务在不在其中，在的话就拿到服务地址、端口等信息，然后调用&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;为什么Eureka比Zookeeper更适合作为注册中心呢？&#xA;&lt;ul&gt;&#xA;&lt;li&gt;主要是因为&lt;strong&gt;Eureka是基于AP原则构建的，而ZooKeeper是基于CP原则构建的&lt;/strong&gt;。在分布式系统领域有个著名的CAP定理，即&lt;strong&gt;C为数据一致性；A为服务可用性；P为服务对网络分区故障的容错性&lt;/strong&gt;。这三个特性在任何分布式系统中都不能同时满足，最多同时满足两个。&lt;/li&gt;&#xA;&lt;li&gt;Zookeeper有一个Leader，而且在这个Leader无法使用的时候通过Paxos(ZAB)算法选举出一个新的Leader。这个Leader的任务就是保证写数据的时候只向这个Leader写入，Leader会同步信息到其他节点。通过这个操作就可以保证数据的一致性。&lt;/li&gt;&#xA;&lt;li&gt;总而言之，想要保证AP就要用Eureka，想要保证CP就要用Zookeeper。Dubbo中大部分都是基于Zookeeper作为注册中心的。Spring Cloud中当然首选Eureka。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第4章客户端负载均衡ribbon&#34;&gt;&#xA;  第4章　客户端负载均衡Ribbon&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0%e5%ae%a2%e6%88%b7%e7%ab%af%e8%b4%9f%e8%bd%bd%e5%9d%87%e8%a1%a1ribbon&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;目前主流的负载方案分为两种：一种是&lt;strong&gt;集中式负载均衡&lt;/strong&gt;，在消费者和服务提供方中间使用独立的代理方式进行负载，有硬件的（比如F5），也有软件的（比如Nginx）。另一种则是客户端自己做负载均衡，根据自己的请求情况做负载，&lt;strong&gt;Ribbon就属于客户端自己做负载&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;Ribbon作为一款客户端负载均衡框架，&lt;strong&gt;默认的负载策略是轮询&lt;/strong&gt;，同时也提供了很多其他的策略，能够让用户根据自身的业务需求进行选择。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第6章hystrix服务容错处理&#34;&gt;&#xA;  第6章　Hystrix服务容错处理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0hystrix%e6%9c%8d%e5%8a%a1%e5%ae%b9%e9%94%99%e5%a4%84%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在微服务架构中存在多个可直接调用的服务，这些服务若在调用时出现故障会导致连锁效应，也就是可能会让整个系统变得不可用，这种情况我们称之为&lt;strong&gt;服务雪崩效应&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;Hystrix是Netflix针对微服务分布式系统采用的&lt;strong&gt;熔断保护中间件&lt;/strong&gt;，相当于电路中的保险丝。&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>宏观经济学 第三版</title>
      <link>/zh/post/books/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6-%E7%AC%AC%E4%B8%89%E7%89%88/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/books/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6-%E7%AC%AC%E4%B8%89%E7%89%88/</guid>
      <description>&lt;h1 id=&#34;宏观经济学-第三版&#34;&gt;&#xA;  宏观经济学 第三版&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ae%8f%e8%a7%82%e7%bb%8f%e6%b5%8e%e5%ad%a6-%e7%ac%ac%e4%b8%89%e7%89%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;第1章-经济学原理的实践&#34;&gt;&#xA;  第1章 经济学原理的实践&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-%e7%bb%8f%e6%b5%8e%e5%ad%a6%e5%8e%9f%e7%90%86%e7%9a%84%e5%ae%9e%e8%b7%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第2章-经济科学运用数据和模型理解世界&#34;&gt;&#xA;  第2章 经济科学：运用数据和模型理解世界&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-%e7%bb%8f%e6%b5%8e%e7%a7%91%e5%ad%a6%e8%bf%90%e7%94%a8%e6%95%b0%e6%8d%ae%e5%92%8c%e6%a8%a1%e5%9e%8b%e7%90%86%e8%a7%a3%e4%b8%96%e7%95%8c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第3章-优化竭力做到最好&#34;&gt;&#xA;  第3章 优化：竭力做到最好&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0-%e4%bc%98%e5%8c%96%e7%ab%ad%e5%8a%9b%e5%81%9a%e5%88%b0%e6%9c%80%e5%a5%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第4章-需求供给与均衡&#34;&gt;&#xA;  第4章 需求，供给与均衡&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0-%e9%9c%80%e6%b1%82%e4%be%9b%e7%bb%99%e4%b8%8e%e5%9d%87%e8%a1%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第5章-国家财富定义和测算宏观经济总量&#34;&gt;&#xA;  第5章 国家财富：定义和测算宏观经济总量&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac5%e7%ab%a0-%e5%9b%bd%e5%ae%b6%e8%b4%a2%e5%af%8c%e5%ae%9a%e4%b9%89%e5%92%8c%e6%b5%8b%e7%ae%97%e5%ae%8f%e8%a7%82%e7%bb%8f%e6%b5%8e%e6%80%bb%e9%87%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第6章-总收入&#34;&gt;&#xA;  第6章 总收入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0-%e6%80%bb%e6%94%b6%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第7章-经济增长&#34;&gt;&#xA;  第7章 经济增长&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac7%e7%ab%a0-%e7%bb%8f%e6%b5%8e%e5%a2%9e%e9%95%bf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第8章-为什么很多地区仍然不发达&#34;&gt;&#xA;  第8章 为什么很多地区仍然不发达？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac8%e7%ab%a0-%e4%b8%ba%e4%bb%80%e4%b9%88%e5%be%88%e5%a4%9a%e5%9c%b0%e5%8c%ba%e4%bb%8d%e7%84%b6%e4%b8%8d%e5%8f%91%e8%be%be&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第9章-就业与失业&#34;&gt;&#xA;  第9章 就业与失业&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac9%e7%ab%a0-%e5%b0%b1%e4%b8%9a%e4%b8%8e%e5%a4%b1%e4%b8%9a&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第10章-信贷市场&#34;&gt;&#xA;  第10章 信贷市场&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac10%e7%ab%a0-%e4%bf%a1%e8%b4%b7%e5%b8%82%e5%9c%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;信贷&lt;/strong&gt;：我们把包括企业家、购房者和学生在内的借款主体称为&lt;strong&gt;债务人&lt;/strong&gt;，他们所借入的资金被称为&lt;strong&gt;信贷&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;借款当然不是免费的，借款人需要支付利息。借款的初始金额被称为&lt;strong&gt;本金&lt;/strong&gt;。利率是借款者在偿还本金之外，需要（在满一年时）为每1美元贷款支付的额外费用。也可以说，利率就是一笔1美元贷款的&lt;strong&gt;年度成本&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;如果你借了1年期利率为i的L美元，1年后你要偿还本金L美元加上i×L美元的利息。为了和实际利率区分开来，我们把利率i称为&lt;strong&gt;名义利率&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;实际利率=名义利率-通货膨胀率&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;实际GDP=名义GDP-通货膨胀率&lt;/li&gt;&#xA;&lt;li&gt;几乎所有的贷款都是以&lt;strong&gt;名义利率&lt;/strong&gt;发放的&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我现在理解了韩秀云说的贷款买房比全款买房更好，因为实际利率会随着通货膨胀越来越低，甚至可能低于越来的本金&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;通货膨胀率指的是整体经济中物价上涨的速度。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;其他条件不变时，通货膨胀率越高，企业销售的商品和服务价格就会越高，在给定的名义利率下偿还贷款就会越容易。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;信贷需求曲线：信贷需求量与实际利率之间的关系&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;政府所感知到的商业机会变化、家庭偏好或预期的变化、政府政策的变化，会使得信贷需求曲线左移或右移&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;实际利率：人们因存钱而得到的回报，因为今天存的1美元，在一年后的购买力是1+r美元，其中r是实际利率&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;换句话说，实际利率是当前消费的机会成本，也就是你基于未来的购买力而放弃的东西。因此，较高的实际利率会增加当前消费的机会成本，鼓励更高水平的储蓄。&lt;/li&gt;&#xA;&lt;li&gt;真实市场中，为了补偿出借人，具有不同违约风险的借款者需面对不同的实际利率。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;信贷供给曲线：信贷供给量与实际利率之间的关系&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;信贷供给曲线的移动则源于实际利率不变的情况下，追求优化的经济主体储蓄动机的变化（家庭储蓄动机的变化、企业储蓄动机的变化）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;人们为什么要储蓄？&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;为退休储蓄&lt;/li&gt;&#xA;&lt;li&gt;为孩子存钱&lt;/li&gt;&#xA;&lt;li&gt;为一些可预见的大额支出而存钱&lt;/li&gt;&#xA;&lt;li&gt;投资个人事业而存钱&lt;/li&gt;&#xA;&lt;li&gt;以备不时之需&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;信贷市场：借款者从储蓄者那里获取资金的市场，有时也被称为可贷资金市场&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;信贷市场均衡：信贷供给曲线与信贷需求曲线的交点所对应的实际利率和信贷量&#xA;&lt;ul&gt;&#xA;&lt;li&gt;交点决定了市场中的信贷总量(Q*)和均衡实际利率(r*)。在均衡实际利率下，信贷需求量等于信贷供给量。实际利率高于均衡水平将导致超额的信贷供给，这通常会给实际利率带来下行压力。实际利率低于均衡水平将导致超额的信贷需求，给实际利率带来上行压力。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;信贷市场的作用：通过使储蓄者把多余的钱出借给借款者，信贷市场改善了经济中的资源配置&lt;/p&gt;</description>
    </item>
    <item>
      <title>宏观经济学 第三版</title>
      <link>/zh/zh/post/books/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6-%E7%AC%AC%E4%B8%89%E7%89%88/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/books/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6-%E7%AC%AC%E4%B8%89%E7%89%88/</guid>
      <description>&lt;h1 id=&#34;宏观经济学-第三版&#34;&gt;&#xA;  宏观经济学 第三版&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ae%8f%e8%a7%82%e7%bb%8f%e6%b5%8e%e5%ad%a6-%e7%ac%ac%e4%b8%89%e7%89%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;第1章-经济学原理的实践&#34;&gt;&#xA;  第1章 经济学原理的实践&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-%e7%bb%8f%e6%b5%8e%e5%ad%a6%e5%8e%9f%e7%90%86%e7%9a%84%e5%ae%9e%e8%b7%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第2章-经济科学运用数据和模型理解世界&#34;&gt;&#xA;  第2章 经济科学：运用数据和模型理解世界&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-%e7%bb%8f%e6%b5%8e%e7%a7%91%e5%ad%a6%e8%bf%90%e7%94%a8%e6%95%b0%e6%8d%ae%e5%92%8c%e6%a8%a1%e5%9e%8b%e7%90%86%e8%a7%a3%e4%b8%96%e7%95%8c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第3章-优化竭力做到最好&#34;&gt;&#xA;  第3章 优化：竭力做到最好&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0-%e4%bc%98%e5%8c%96%e7%ab%ad%e5%8a%9b%e5%81%9a%e5%88%b0%e6%9c%80%e5%a5%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第4章-需求供给与均衡&#34;&gt;&#xA;  第4章 需求，供给与均衡&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0-%e9%9c%80%e6%b1%82%e4%be%9b%e7%bb%99%e4%b8%8e%e5%9d%87%e8%a1%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第5章-国家财富定义和测算宏观经济总量&#34;&gt;&#xA;  第5章 国家财富：定义和测算宏观经济总量&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac5%e7%ab%a0-%e5%9b%bd%e5%ae%b6%e8%b4%a2%e5%af%8c%e5%ae%9a%e4%b9%89%e5%92%8c%e6%b5%8b%e7%ae%97%e5%ae%8f%e8%a7%82%e7%bb%8f%e6%b5%8e%e6%80%bb%e9%87%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第6章-总收入&#34;&gt;&#xA;  第6章 总收入&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0-%e6%80%bb%e6%94%b6%e5%85%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第7章-经济增长&#34;&gt;&#xA;  第7章 经济增长&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac7%e7%ab%a0-%e7%bb%8f%e6%b5%8e%e5%a2%9e%e9%95%bf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第8章-为什么很多地区仍然不发达&#34;&gt;&#xA;  第8章 为什么很多地区仍然不发达？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac8%e7%ab%a0-%e4%b8%ba%e4%bb%80%e4%b9%88%e5%be%88%e5%a4%9a%e5%9c%b0%e5%8c%ba%e4%bb%8d%e7%84%b6%e4%b8%8d%e5%8f%91%e8%be%be&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第9章-就业与失业&#34;&gt;&#xA;  第9章 就业与失业&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac9%e7%ab%a0-%e5%b0%b1%e4%b8%9a%e4%b8%8e%e5%a4%b1%e4%b8%9a&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第10章-信贷市场&#34;&gt;&#xA;  第10章 信贷市场&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac10%e7%ab%a0-%e4%bf%a1%e8%b4%b7%e5%b8%82%e5%9c%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;信贷&lt;/strong&gt;：我们把包括企业家、购房者和学生在内的借款主体称为&lt;strong&gt;债务人&lt;/strong&gt;，他们所借入的资金被称为&lt;strong&gt;信贷&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;借款当然不是免费的，借款人需要支付利息。借款的初始金额被称为&lt;strong&gt;本金&lt;/strong&gt;。利率是借款者在偿还本金之外，需要（在满一年时）为每1美元贷款支付的额外费用。也可以说，利率就是一笔1美元贷款的&lt;strong&gt;年度成本&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;如果你借了1年期利率为i的L美元，1年后你要偿还本金L美元加上i×L美元的利息。为了和实际利率区分开来，我们把利率i称为&lt;strong&gt;名义利率&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;实际利率=名义利率-通货膨胀率&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;实际GDP=名义GDP-通货膨胀率&lt;/li&gt;&#xA;&lt;li&gt;几乎所有的贷款都是以&lt;strong&gt;名义利率&lt;/strong&gt;发放的&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我现在理解了韩秀云说的贷款买房比全款买房更好，因为实际利率会随着通货膨胀越来越低，甚至可能低于越来的本金&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;通货膨胀率指的是整体经济中物价上涨的速度。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;其他条件不变时，通货膨胀率越高，企业销售的商品和服务价格就会越高，在给定的名义利率下偿还贷款就会越容易。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;信贷需求曲线：信贷需求量与实际利率之间的关系&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;政府所感知到的商业机会变化、家庭偏好或预期的变化、政府政策的变化，会使得信贷需求曲线左移或右移&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;实际利率：人们因存钱而得到的回报，因为今天存的1美元，在一年后的购买力是1+r美元，其中r是实际利率&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;换句话说，实际利率是当前消费的机会成本，也就是你基于未来的购买力而放弃的东西。因此，较高的实际利率会增加当前消费的机会成本，鼓励更高水平的储蓄。&lt;/li&gt;&#xA;&lt;li&gt;真实市场中，为了补偿出借人，具有不同违约风险的借款者需面对不同的实际利率。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;信贷供给曲线：信贷供给量与实际利率之间的关系&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;信贷供给曲线的移动则源于实际利率不变的情况下，追求优化的经济主体储蓄动机的变化（家庭储蓄动机的变化、企业储蓄动机的变化）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;人们为什么要储蓄？&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;为退休储蓄&lt;/li&gt;&#xA;&lt;li&gt;为孩子存钱&lt;/li&gt;&#xA;&lt;li&gt;为一些可预见的大额支出而存钱&lt;/li&gt;&#xA;&lt;li&gt;投资个人事业而存钱&lt;/li&gt;&#xA;&lt;li&gt;以备不时之需&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;信贷市场：借款者从储蓄者那里获取资金的市场，有时也被称为可贷资金市场&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;信贷市场均衡：信贷供给曲线与信贷需求曲线的交点所对应的实际利率和信贷量&#xA;&lt;ul&gt;&#xA;&lt;li&gt;交点决定了市场中的信贷总量(Q*)和均衡实际利率(r*)。在均衡实际利率下，信贷需求量等于信贷供给量。实际利率高于均衡水平将导致超额的信贷供给，这通常会给实际利率带来下行压力。实际利率低于均衡水平将导致超额的信贷需求，给实际利率带来上行压力。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;信贷市场的作用：通过使储蓄者把多余的钱出借给借款者，信贷市场改善了经济中的资源配置&lt;/p&gt;</description>
    </item>
    <item>
      <title>剑指Offer</title>
      <link>/zh/post/books/computer-science/%E5%89%91%E6%8C%87offer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/books/computer-science/%E5%89%91%E6%8C%87offer/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/25910559/&#34;&gt;剑指Offer&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第1章-面试的流程-1&#34;&gt;&#xA;  第1章 面试的流程 1&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-%e9%9d%a2%e8%af%95%e7%9a%84%e6%b5%81%e7%a8%8b-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-面试官谈面试-1&#34;&gt;&#xA;  1.1 面试官谈面试 1&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-%e9%9d%a2%e8%af%95%e5%ae%98%e8%b0%88%e9%9d%a2%e8%af%95-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;12-面试的三种形式-2&#34;&gt;&#xA;  1.2 面试的三种形式 2&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#12-%e9%9d%a2%e8%af%95%e7%9a%84%e4%b8%89%e7%a7%8d%e5%bd%a2%e5%bc%8f-2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;121-电话面试-2&#34;&gt;&#xA;  1.2.1 电话面试 2&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#121-%e7%94%b5%e8%af%9d%e9%9d%a2%e8%af%95-2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;122-共享桌面远程面试-3&#34;&gt;&#xA;  1.2.2 共享桌面远程面试 3&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#122-%e5%85%b1%e4%ba%ab%e6%a1%8c%e9%9d%a2%e8%bf%9c%e7%a8%8b%e9%9d%a2%e8%af%95-3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;123-现场面试-4&#34;&gt;&#xA;  1.2.3 现场面试 4&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#123-%e7%8e%b0%e5%9c%ba%e9%9d%a2%e8%af%95-4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;13-面试的三个环节-5&#34;&gt;&#xA;  1.3 面试的三个环节 5&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#13-%e9%9d%a2%e8%af%95%e7%9a%84%e4%b8%89%e4%b8%aa%e7%8e%af%e8%8a%82-5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;131-行为面试环节-5&#34;&gt;&#xA;  1.3.1 行为面试环节 5&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#131-%e8%a1%8c%e4%b8%ba%e9%9d%a2%e8%af%95%e7%8e%af%e8%8a%82-5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;应聘者的项目经验-6&#34;&gt;&#xA;  应聘者的项目经验 6&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ba%94%e8%81%98%e8%80%85%e7%9a%84%e9%a1%b9%e7%9b%ae%e7%bb%8f%e9%aa%8c-6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;应聘者掌握的技能-7&#34;&gt;&#xA;  应聘者掌握的技能 7&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ba%94%e8%81%98%e8%80%85%e6%8e%8c%e6%8f%a1%e7%9a%84%e6%8a%80%e8%83%bd-7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;回答为什么跳槽-8&#34;&gt;&#xA;  回答“为什么跳槽” 8&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9e%e7%ad%94%e4%b8%ba%e4%bb%80%e4%b9%88%e8%b7%b3%e6%a7%bd-8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;132-技术面试环节-10&#34;&gt;&#xA;  1.3.2 技术面试环节 10&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#132-%e6%8a%80%e6%9c%af%e9%9d%a2%e8%af%95%e7%8e%af%e8%8a%82-10&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;扎实的基础知识-10&#34;&gt;&#xA;  扎实的基础知识 10&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%89%8e%e5%ae%9e%e7%9a%84%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86-10&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;高质量的代码-11&#34;&gt;&#xA;  高质量的代码 11&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%ab%98%e8%b4%a8%e9%87%8f%e7%9a%84%e4%bb%a3%e7%a0%81-11&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;清晰的思路-14&#34;&gt;&#xA;  清晰的思路 14&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b8%85%e6%99%b0%e7%9a%84%e6%80%9d%e8%b7%af-14&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;优化效率的能力-15&#34;&gt;&#xA;  优化效率的能力 15&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bc%98%e5%8c%96%e6%95%88%e7%8e%87%e7%9a%84%e8%83%bd%e5%8a%9b-15&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;优秀的综合能力-16&#34;&gt;&#xA;  优秀的综合能力 16&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bc%98%e7%a7%80%e7%9a%84%e7%bb%bc%e5%90%88%e8%83%bd%e5%8a%9b-16&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;133-应聘者提问环节-17&#34;&gt;&#xA;  1.3.3 应聘者提问环节 17&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#133-%e5%ba%94%e8%81%98%e8%80%85%e6%8f%90%e9%97%ae%e7%8e%af%e8%8a%82-17&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;14-本章小结-18&#34;&gt;&#xA;  1.4 本章小结 18&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#14-%e6%9c%ac%e7%ab%a0%e5%b0%8f%e7%bb%93-18&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第2章-面试需要的基础知识-20&#34;&gt;&#xA;  第2章 面试需要的基础知识 20&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-%e9%9d%a2%e8%af%95%e9%9c%80%e8%a6%81%e7%9a%84%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86-20&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;21-面试官谈基础知识-20&#34;&gt;&#xA;  2.1 面试官谈基础知识 20&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#21-%e9%9d%a2%e8%af%95%e5%ae%98%e8%b0%88%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86-20&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;22-编程语言-22&#34;&gt;&#xA;  2.2 编程语言 22&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#22-%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80-22&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;221-c-22&#34;&gt;&#xA;  2.2.1 C++ 22&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#221-c-22&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题1赋值运算符函数-24&#34;&gt;&#xA;  面试题1：赋值运算符函数 24&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%981%e8%b5%8b%e5%80%bc%e8%bf%90%e7%ae%97%e7%ac%a6%e5%87%bd%e6%95%b0-24&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h6 id=&#34;经典的解法适用于初级程序员-25&#34;&gt;&#xA;  经典的解法，适用于初级程序员 25&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bb%8f%e5%85%b8%e7%9a%84%e8%a7%a3%e6%b3%95%e9%80%82%e7%94%a8%e4%ba%8e%e5%88%9d%e7%ba%a7%e7%a8%8b%e5%ba%8f%e5%91%98-25&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;考虑异常安全性的解法高级程序员必备-26&#34;&gt;&#xA;  考虑异常安全性的解法，高级程序员必备 26&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%80%83%e8%99%91%e5%bc%82%e5%b8%b8%e5%ae%89%e5%85%a8%e6%80%a7%e7%9a%84%e8%a7%a3%e6%b3%95%e9%ab%98%e7%ba%a7%e7%a8%8b%e5%ba%8f%e5%91%98%e5%bf%85%e5%a4%87-26&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h4 id=&#34;222-c-27&#34;&gt;&#xA;  2.2.2 C# 27&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#222-c-27&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题2实现singleton模式-31&#34;&gt;&#xA;  面试题2：实现Singleton模式 31&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%982%e5%ae%9e%e7%8e%b0singleton%e6%a8%a1%e5%bc%8f-31&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h6 id=&#34;不好的解法一只适用于单线程-31&#34;&gt;&#xA;  不好的解法一：只适用于单线程 31&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%8d%e5%a5%bd%e7%9a%84%e8%a7%a3%e6%b3%95%e4%b8%80%e5%8f%aa%e9%80%82%e7%94%a8%e4%ba%8e%e5%8d%95%e7%ba%bf%e7%a8%8b-31&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;不好的解法二可用于多线程但效率不高-32&#34;&gt;&#xA;  不好的解法二：可用于多线程但效率不高 32&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%8d%e5%a5%bd%e7%9a%84%e8%a7%a3%e6%b3%95%e4%ba%8c%e5%8f%af%e7%94%a8%e4%ba%8e%e5%a4%9a%e7%ba%bf%e7%a8%8b%e4%bd%86%e6%95%88%e7%8e%87%e4%b8%8d%e9%ab%98-32&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;可行的解法同步锁前后两次判断-33&#34;&gt;&#xA;  可行的解法：同步锁前后两次判断 33&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%af%e8%a1%8c%e7%9a%84%e8%a7%a3%e6%b3%95%e5%90%8c%e6%ad%a5%e9%94%81%e5%89%8d%e5%90%8e%e4%b8%a4%e6%ac%a1%e5%88%a4%e6%96%ad-33&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;推荐的解法一利用静态构造函数-34&#34;&gt;&#xA;  推荐的解法一：利用静态构造函数 34&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8e%a8%e8%8d%90%e7%9a%84%e8%a7%a3%e6%b3%95%e4%b8%80%e5%88%a9%e7%94%a8%e9%9d%99%e6%80%81%e6%9e%84%e9%80%a0%e5%87%bd%e6%95%b0-34&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;推荐的解法二按需创建实例-34&#34;&gt;&#xA;  推荐的解法二：按需创建实例 34&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8e%a8%e8%8d%90%e7%9a%84%e8%a7%a3%e6%b3%95%e4%ba%8c%e6%8c%89%e9%9c%80%e5%88%9b%e5%bb%ba%e5%ae%9e%e4%be%8b-34&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;解法比较-35&#34;&gt;&#xA;  解法比较 35&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e6%b3%95%e6%af%94%e8%be%83-35&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h3 id=&#34;23-数据结构-36&#34;&gt;&#xA;  2.3 数据结构 36&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#23-%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84-36&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;231-数组-36&#34;&gt;&#xA;  2.3.1 数组 36&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#231-%e6%95%b0%e7%bb%84-36&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题3二维数组中的查找-38&#34;&gt;&#xA;  面试题3：二维数组中的查找 38&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%983%e4%ba%8c%e7%bb%b4%e6%95%b0%e7%bb%84%e4%b8%ad%e7%9a%84%e6%9f%a5%e6%89%be-38&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;232-字符串-42&#34;&gt;&#xA;  2.3.2 字符串 42&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#232-%e5%ad%97%e7%ac%a6%e4%b8%b2-42&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题4替换空格-44&#34;&gt;&#xA;  面试题4：替换空格 44&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%984%e6%9b%bf%e6%8d%a2%e7%a9%ba%e6%a0%bc-44&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h6 id=&#34;on2的解法不足以拿到offer-45&#34;&gt;&#xA;  O(n2)的解法，不足以拿到Offer 45&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#on2%e7%9a%84%e8%a7%a3%e6%b3%95%e4%b8%8d%e8%b6%b3%e4%bb%a5%e6%8b%bf%e5%88%b0offer-45&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;on的解法搞定offer就靠它-46&#34;&gt;&#xA;  O(n)的解法，搞定Offer就靠它 46&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#on%e7%9a%84%e8%a7%a3%e6%b3%95%e6%90%9e%e5%ae%9aoffer%e5%b0%b1%e9%9d%a0%e5%ae%83-46&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h4 id=&#34;233-链表-49&#34;&gt;&#xA;  2.3.3 链表 49&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#233-%e9%93%be%e8%a1%a8-49&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题5从尾到头打印链表-51&#34;&gt;&#xA;  面试题5：从尾到头打印链表 51&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%985%e4%bb%8e%e5%b0%be%e5%88%b0%e5%a4%b4%e6%89%93%e5%8d%b0%e9%93%be%e8%a1%a8-51&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;234-树-53&#34;&gt;&#xA;  2.3.4 树 53&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#234-%e6%a0%91-53&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题6重建二叉树-55&#34;&gt;&#xA;  面试题6：重建二叉树 55&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%986%e9%87%8d%e5%bb%ba%e4%ba%8c%e5%8f%89%e6%a0%91-55&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;235-栈和队列-58&#34;&gt;&#xA;  2.3.5 栈和队列 58&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#235-%e6%a0%88%e5%92%8c%e9%98%9f%e5%88%97-58&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题7用两个栈实现队列-59&#34;&gt;&#xA;  面试题7：用两个栈实现队列 59&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%987%e7%94%a8%e4%b8%a4%e4%b8%aa%e6%a0%88%e5%ae%9e%e7%8e%b0%e9%98%9f%e5%88%97-59&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h3 id=&#34;24-算法和数据操作-62&#34;&gt;&#xA;  2.4 算法和数据操作 62&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#24-%e7%ae%97%e6%b3%95%e5%92%8c%e6%95%b0%e6%8d%ae%e6%93%8d%e4%bd%9c-62&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;241-查找和排序-63&#34;&gt;&#xA;  2.4.1 查找和排序 63&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#241-%e6%9f%a5%e6%89%be%e5%92%8c%e6%8e%92%e5%ba%8f-63&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题8旋转数组的最小数字-66&#34;&gt;&#xA;  面试题8：旋转数组的最小数字 66&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%988%e6%97%8b%e8%bd%ac%e6%95%b0%e7%bb%84%e7%9a%84%e6%9c%80%e5%b0%8f%e6%95%b0%e5%ad%97-66&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;242-递归和循环-71&#34;&gt;&#xA;  2.4.2 递归和循环 71&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#242-%e9%80%92%e5%bd%92%e5%92%8c%e5%be%aa%e7%8e%af-71&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题9斐波那契数列-73&#34;&gt;&#xA;  面试题9：斐波那契数列 73&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%989%e6%96%90%e6%b3%a2%e9%82%a3%e5%a5%91%e6%95%b0%e5%88%97-73&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h6 id=&#34;效率很低的解法面试官不会喜欢-73&#34;&gt;&#xA;  效率很低的解法，面试官不会喜欢 73&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%88%e7%8e%87%e5%be%88%e4%bd%8e%e7%9a%84%e8%a7%a3%e6%b3%95%e9%9d%a2%e8%af%95%e5%ae%98%e4%b8%8d%e4%bc%9a%e5%96%9c%e6%ac%a2-73&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;面试官期待的实用解法-74&#34;&gt;&#xA;  面试官期待的实用解法 74&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e5%ae%98%e6%9c%9f%e5%be%85%e7%9a%84%e5%ae%9e%e7%94%a8%e8%a7%a3%e6%b3%95-74&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;ologn但不够实用的解法-74&#34;&gt;&#xA;  O(logn)但不够实用的解法 74&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ologn%e4%bd%86%e4%b8%8d%e5%a4%9f%e5%ae%9e%e7%94%a8%e7%9a%84%e8%a7%a3%e6%b3%95-74&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;解法比较-75&#34;&gt;&#xA;  解法比较 75&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e6%b3%95%e6%af%94%e8%be%83-75&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h4 id=&#34;243-位运算-77&#34;&gt;&#xA;  2.4.3 位运算 77&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#243-%e4%bd%8d%e8%bf%90%e7%ae%97-77&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题10二进制中1的个数-78&#34;&gt;&#xA;  面试题10：二进制中1的个数 78&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9810%e4%ba%8c%e8%bf%9b%e5%88%b6%e4%b8%ad1%e7%9a%84%e4%b8%aa%e6%95%b0-78&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h6 id=&#34;可能引起死循环的解法-79&#34;&gt;&#xA;  可能引起死循环的解法 79&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%af%e8%83%bd%e5%bc%95%e8%b5%b7%e6%ad%bb%e5%be%aa%e7%8e%af%e7%9a%84%e8%a7%a3%e6%b3%95-79&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;常规解法-79&#34;&gt;&#xA;  常规解法 79&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b8%b8%e8%a7%84%e8%a7%a3%e6%b3%95-79&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;能给面试官带来惊喜的解法-80&#34;&gt;&#xA;  能给面试官带来惊喜的解法 80&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%83%bd%e7%bb%99%e9%9d%a2%e8%af%95%e5%ae%98%e5%b8%a6%e6%9d%a5%e6%83%8a%e5%96%9c%e7%9a%84%e8%a7%a3%e6%b3%95-80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h3 id=&#34;25-本章小结-82&#34;&gt;&#xA;  2.5 本章小结 82&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#25-%e6%9c%ac%e7%ab%a0%e5%b0%8f%e7%bb%93-82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第3章-高质量的代码-84&#34;&gt;&#xA;  第3章 高质量的代码 84&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0-%e9%ab%98%e8%b4%a8%e9%87%8f%e7%9a%84%e4%bb%a3%e7%a0%81-84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;31-面试官谈代码质量-84&#34;&gt;&#xA;  3.1 面试官谈代码质量 84&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#31-%e9%9d%a2%e8%af%95%e5%ae%98%e8%b0%88%e4%bb%a3%e7%a0%81%e8%b4%a8%e9%87%8f-84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;32-代码的规范性-86&#34;&gt;&#xA;  3.2 代码的规范性 86&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#32-%e4%bb%a3%e7%a0%81%e7%9a%84%e8%a7%84%e8%8c%83%e6%80%a7-86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;33-代码的完整性-87&#34;&gt;&#xA;  3.3 代码的完整性 87&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#33-%e4%bb%a3%e7%a0%81%e7%9a%84%e5%ae%8c%e6%95%b4%e6%80%a7-87&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;从3方面确保代码的完整性-87&#34;&gt;&#xA;  从3方面确保代码的完整性 87&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bb%8e3%e6%96%b9%e9%9d%a2%e7%a1%ae%e4%bf%9d%e4%bb%a3%e7%a0%81%e7%9a%84%e5%ae%8c%e6%95%b4%e6%80%a7-87&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;3种错误处理的方法-88&#34;&gt;&#xA;  3种错误处理的方法 88&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3%e7%a7%8d%e9%94%99%e8%af%af%e5%a4%84%e7%90%86%e7%9a%84%e6%96%b9%e6%b3%95-88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题11数值的整数次方-90&#34;&gt;&#xA;  面试题11：数值的整数次方 90&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9811%e6%95%b0%e5%80%bc%e7%9a%84%e6%95%b4%e6%95%b0%e6%ac%a1%e6%96%b9-90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;自以为题目简单的解法-90&#34;&gt;&#xA;  自以为题目简单的解法 90&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e4%bb%a5%e4%b8%ba%e9%a2%98%e7%9b%ae%e7%ae%80%e5%8d%95%e7%9a%84%e8%a7%a3%e6%b3%95-90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;全面但不够高效的解法离offer已经很近了-90&#34;&gt;&#xA;  全面但不够高效的解法，离Offer已经很近了 90&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%a8%e9%9d%a2%e4%bd%86%e4%b8%8d%e5%a4%9f%e9%ab%98%e6%95%88%e7%9a%84%e8%a7%a3%e6%b3%95%e7%a6%bboffer%e5%b7%b2%e7%bb%8f%e5%be%88%e8%bf%91%e4%ba%86-90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;全面又高效的解法确保能拿到offer-92&#34;&gt;&#xA;  全面又高效的解法，确保能拿到Offer 92&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%a8%e9%9d%a2%e5%8f%88%e9%ab%98%e6%95%88%e7%9a%84%e8%a7%a3%e6%b3%95%e7%a1%ae%e4%bf%9d%e8%83%bd%e6%8b%bf%e5%88%b0offer-92&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题12打印1到最大的n位数-94&#34;&gt;&#xA;  面试题12：打印1到最大的n位数 94&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9812%e6%89%93%e5%8d%b01%e5%88%b0%e6%9c%80%e5%a4%a7%e7%9a%84n%e4%bd%8d%e6%95%b0-94&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;跳进面试官陷阱-94&#34;&gt;&#xA;  跳进面试官陷阱 94&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%b7%b3%e8%bf%9b%e9%9d%a2%e8%af%95%e5%ae%98%e9%99%b7%e9%98%b1-94&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;在字符串上模拟数字加法-94&#34;&gt;&#xA;  在字符串上模拟数字加法 94&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9c%a8%e5%ad%97%e7%ac%a6%e4%b8%b2%e4%b8%8a%e6%a8%a1%e6%8b%9f%e6%95%b0%e5%ad%97%e5%8a%a0%e6%b3%95-94&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;把问题转换成数字排列-97&#34;&gt;&#xA;  把问题转换成数字排列 97&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8a%8a%e9%97%ae%e9%a2%98%e8%bd%ac%e6%8d%a2%e6%88%90%e6%95%b0%e5%ad%97%e6%8e%92%e5%88%97-97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题13在o1时间删除链表结点-99&#34;&gt;&#xA;  面试题13：在O(1)时间删除链表结点 99&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9813%e5%9c%a8o1%e6%97%b6%e9%97%b4%e5%88%a0%e9%99%a4%e9%93%be%e8%a1%a8%e7%bb%93%e7%82%b9-99&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题14调整数组顺序使奇数位于偶数前面-102&#34;&gt;&#xA;  面试题14：调整数组顺序使奇数位于偶数前面 102&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9814%e8%b0%83%e6%95%b4%e6%95%b0%e7%bb%84%e9%a1%ba%e5%ba%8f%e4%bd%bf%e5%a5%87%e6%95%b0%e4%bd%8d%e4%ba%8e%e5%81%b6%e6%95%b0%e5%89%8d%e9%9d%a2-102&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;只完成基本功能的解法仅适用于初级程序员-102&#34;&gt;&#xA;  只完成基本功能的解法，仅适用于初级程序员 102&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%aa%e5%ae%8c%e6%88%90%e5%9f%ba%e6%9c%ac%e5%8a%9f%e8%83%bd%e7%9a%84%e8%a7%a3%e6%b3%95%e4%bb%85%e9%80%82%e7%94%a8%e4%ba%8e%e5%88%9d%e7%ba%a7%e7%a8%8b%e5%ba%8f%e5%91%98-102&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;考虑可扩展性的解法能秒杀offer-104&#34;&gt;&#xA;  考虑可扩展性的解法，能秒杀Offer 104&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%80%83%e8%99%91%e5%8f%af%e6%89%a9%e5%b1%95%e6%80%a7%e7%9a%84%e8%a7%a3%e6%b3%95%e8%83%bd%e7%a7%92%e6%9d%80offer-104&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h3 id=&#34;34-代码的鲁棒性-106&#34;&gt;&#xA;  3.4 代码的鲁棒性 106&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#34-%e4%bb%a3%e7%a0%81%e7%9a%84%e9%b2%81%e6%a3%92%e6%80%a7-106&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题15链表中倒数第k个结点-107&#34;&gt;&#xA;  面试题15：链表中倒数第k个结点 107&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9815%e9%93%be%e8%a1%a8%e4%b8%ad%e5%80%92%e6%95%b0%e7%ac%ack%e4%b8%aa%e7%bb%93%e7%82%b9-107&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题16反转链表-112&#34;&gt;&#xA;  面试题16：反转链表 112&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9816%e5%8f%8d%e8%bd%ac%e9%93%be%e8%a1%a8-112&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题17合并两个排序的链表-114&#34;&gt;&#xA;  面试题17：合并两个排序的链表 114&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9817%e5%90%88%e5%b9%b6%e4%b8%a4%e4%b8%aa%e6%8e%92%e5%ba%8f%e7%9a%84%e9%93%be%e8%a1%a8-114&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题18树的子结构-117&#34;&gt;&#xA;  面试题18：树的子结构 117&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9818%e6%a0%91%e7%9a%84%e5%ad%90%e7%bb%93%e6%9e%84-117&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;35-本章小结-121&#34;&gt;&#xA;  3.5 本章小结 121&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#35-%e6%9c%ac%e7%ab%a0%e5%b0%8f%e7%bb%93-121&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第4章-解决面试题的思路-123&#34;&gt;&#xA;  第4章 解决面试题的思路 123&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0-%e8%a7%a3%e5%86%b3%e9%9d%a2%e8%af%95%e9%a2%98%e7%9a%84%e6%80%9d%e8%b7%af-123&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;41-面试官谈面试思路-123&#34;&gt;&#xA;  4.1 面试官谈面试思路 123&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#41-%e9%9d%a2%e8%af%95%e5%ae%98%e8%b0%88%e9%9d%a2%e8%af%95%e6%80%9d%e8%b7%af-123&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题19二叉树的镜像-125&#34;&gt;&#xA;  面试题19：二叉树的镜像 125&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9819%e4%ba%8c%e5%8f%89%e6%a0%91%e7%9a%84%e9%95%9c%e5%83%8f-125&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;42-画图让抽象问题形象化-125&#34;&gt;&#xA;  4.2 画图让抽象问题形象化 125&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#42-%e7%94%bb%e5%9b%be%e8%ae%a9%e6%8a%bd%e8%b1%a1%e9%97%ae%e9%a2%98%e5%bd%a2%e8%b1%a1%e5%8c%96-125&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题20顺时针打印矩阵-127&#34;&gt;&#xA;  面试题20：顺时针打印矩阵 127&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9820%e9%a1%ba%e6%97%b6%e9%92%88%e6%89%93%e5%8d%b0%e7%9f%a9%e9%98%b5-127&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;43-举例让抽象问题具体化-131&#34;&gt;&#xA;  4.3 举例让抽象问题具体化 131&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#43-%e4%b8%be%e4%be%8b%e8%ae%a9%e6%8a%bd%e8%b1%a1%e9%97%ae%e9%a2%98%e5%85%b7%e4%bd%93%e5%8c%96-131&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题21包含min函数的栈-132&#34;&gt;&#xA;  面试题21：包含min函数的栈 132&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9821%e5%8c%85%e5%90%abmin%e5%87%bd%e6%95%b0%e7%9a%84%e6%a0%88-132&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题22栈的压入弹出序列-134&#34;&gt;&#xA;  面试题22：栈的压入、弹出序列 134&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9822%e6%a0%88%e7%9a%84%e5%8e%8b%e5%85%a5%e5%bc%b9%e5%87%ba%e5%ba%8f%e5%88%97-134&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题23从上往下打印二叉树-137&#34;&gt;&#xA;  面试题23：从上往下打印二叉树 137&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9823%e4%bb%8e%e4%b8%8a%e5%be%80%e4%b8%8b%e6%89%93%e5%8d%b0%e4%ba%8c%e5%8f%89%e6%a0%91-137&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题24二叉搜索树的后序遍历序列-140&#34;&gt;&#xA;  面试题24：二叉搜索树的后序遍历序列 140&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9824%e4%ba%8c%e5%8f%89%e6%90%9c%e7%b4%a2%e6%a0%91%e7%9a%84%e5%90%8e%e5%ba%8f%e9%81%8d%e5%8e%86%e5%ba%8f%e5%88%97-140&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题25二叉树中和为某一值的路径-143&#34;&gt;&#xA;  面试题25：二叉树中和为某一值的路径 143&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9825%e4%ba%8c%e5%8f%89%e6%a0%91%e4%b8%ad%e5%92%8c%e4%b8%ba%e6%9f%90%e4%b8%80%e5%80%bc%e7%9a%84%e8%b7%af%e5%be%84-143&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;44-分解让复杂问题简单化-146&#34;&gt;&#xA;  4.4 分解让复杂问题简单化 146&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#44-%e5%88%86%e8%a7%a3%e8%ae%a9%e5%a4%8d%e6%9d%82%e9%97%ae%e9%a2%98%e7%ae%80%e5%8d%95%e5%8c%96-146&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题26复杂链表的复制-147&#34;&gt;&#xA;  面试题26：复杂链表的复制 147&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9826%e5%a4%8d%e6%9d%82%e9%93%be%e8%a1%a8%e7%9a%84%e5%a4%8d%e5%88%b6-147&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题27二叉搜索树与双向链表-151&#34;&gt;&#xA;  面试题27：二叉搜索树与双向链表 151&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9827%e4%ba%8c%e5%8f%89%e6%90%9c%e7%b4%a2%e6%a0%91%e4%b8%8e%e5%8f%8c%e5%90%91%e9%93%be%e8%a1%a8-151&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题28字符串的排列-154&#34;&gt;&#xA;  面试题28：字符串的排列 154&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9828%e5%ad%97%e7%ac%a6%e4%b8%b2%e7%9a%84%e6%8e%92%e5%88%97-154&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;45-本章小结-158&#34;&gt;&#xA;  4.5 本章小结 158&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#45-%e6%9c%ac%e7%ab%a0%e5%b0%8f%e7%bb%93-158&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第5章-优化时间和空间效率-160&#34;&gt;&#xA;  第5章 优化时间和空间效率 160&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac5%e7%ab%a0-%e4%bc%98%e5%8c%96%e6%97%b6%e9%97%b4%e5%92%8c%e7%a9%ba%e9%97%b4%e6%95%88%e7%8e%87-160&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;51-面试官谈效率-160&#34;&gt;&#xA;  5.1 面试官谈效率 160&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#51-%e9%9d%a2%e8%af%95%e5%ae%98%e8%b0%88%e6%95%88%e7%8e%87-160&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;52-时间效率-162&#34;&gt;&#xA;  5.2 时间效率 162&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#52-%e6%97%b6%e9%97%b4%e6%95%88%e7%8e%87-162&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题29数组中出现次数超过一半的数字-163&#34;&gt;&#xA;  面试题29：数组中出现次数超过一半的数字 163&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9829%e6%95%b0%e7%bb%84%e4%b8%ad%e5%87%ba%e7%8e%b0%e6%ac%a1%e6%95%b0%e8%b6%85%e8%bf%87%e4%b8%80%e5%8d%8a%e7%9a%84%e6%95%b0%e5%ad%97-163&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;基于partition函数的on算法-163&#34;&gt;&#xA;  基于Partition函数的O(n)算法 163&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e4%ba%8epartition%e5%87%bd%e6%95%b0%e7%9a%84on%e7%ae%97%e6%b3%95-163&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;利用数组特点的on算法-165&#34;&gt;&#xA;  利用数组特点的O(n)算法 165&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a9%e7%94%a8%e6%95%b0%e7%bb%84%e7%89%b9%e7%82%b9%e7%9a%84on%e7%ae%97%e6%b3%95-165&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;解法比较-166&#34;&gt;&#xA;  解法比较 166&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e6%b3%95%e6%af%94%e8%be%83-166&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题30最小的k个数-167&#34;&gt;&#xA;  面试题30：最小的k个数 167&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9830%e6%9c%80%e5%b0%8f%e7%9a%84k%e4%b8%aa%e6%95%b0-167&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;on的算法只当可以修改输入数组时可用-167&#34;&gt;&#xA;  O(n)的算法，只当可以修改输入数组时可用 167&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#on%e7%9a%84%e7%ae%97%e6%b3%95%e5%8f%aa%e5%bd%93%e5%8f%af%e4%bb%a5%e4%bf%ae%e6%94%b9%e8%be%93%e5%85%a5%e6%95%b0%e7%bb%84%e6%97%b6%e5%8f%af%e7%94%a8-167&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;onlogk的算法适合处理海量数据-168&#34;&gt;&#xA;  O(nlogk)的算法，适合处理海量数据 168&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#onlogk%e7%9a%84%e7%ae%97%e6%b3%95%e9%80%82%e5%90%88%e5%a4%84%e7%90%86%e6%b5%b7%e9%87%8f%e6%95%b0%e6%8d%ae-168&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;解法比较-169&#34;&gt;&#xA;  解法比较 169&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e6%b3%95%e6%af%94%e8%be%83-169&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题31连续子数组的最大和-171&#34;&gt;&#xA;  面试题31：连续子数组的最大和 171&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9831%e8%bf%9e%e7%bb%ad%e5%ad%90%e6%95%b0%e7%bb%84%e7%9a%84%e6%9c%80%e5%a4%a7%e5%92%8c-171&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;举例分析数组的规律-171&#34;&gt;&#xA;  举例分析数组的规律 171&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%be%e4%be%8b%e5%88%86%e6%9e%90%e6%95%b0%e7%bb%84%e7%9a%84%e8%a7%84%e5%be%8b-171&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;应用动态规划法-173&#34;&gt;&#xA;  应用动态规划法 173&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ba%94%e7%94%a8%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92%e6%b3%95-173&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题32从1到n整数中1出现的次数-174&#34;&gt;&#xA;  面试题32：从1到n整数中1出现的次数 174&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9832%e4%bb%8e1%e5%88%b0n%e6%95%b4%e6%95%b0%e4%b8%ad1%e5%87%ba%e7%8e%b0%e7%9a%84%e6%ac%a1%e6%95%b0-174&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;不考虑效率的解法想拿offer有点难-174&#34;&gt;&#xA;  不考虑效率的解法，想拿Offer有点难 174&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%8d%e8%80%83%e8%99%91%e6%95%88%e7%8e%87%e7%9a%84%e8%a7%a3%e6%b3%95%e6%83%b3%e6%8b%bfoffer%e6%9c%89%e7%82%b9%e9%9a%be-174&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;明显提高效率的解法让面试官耳目一新-175&#34;&gt;&#xA;  明显提高效率的解法，让面试官耳目一新 175&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%98%8e%e6%98%be%e6%8f%90%e9%ab%98%e6%95%88%e7%8e%87%e7%9a%84%e8%a7%a3%e6%b3%95%e8%ae%a9%e9%9d%a2%e8%af%95%e5%ae%98%e8%80%b3%e7%9b%ae%e4%b8%80%e6%96%b0-175&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题33把数组排成最小的数-177&#34;&gt;&#xA;  面试题33：把数组排成最小的数 177&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9833%e6%8a%8a%e6%95%b0%e7%bb%84%e6%8e%92%e6%88%90%e6%9c%80%e5%b0%8f%e7%9a%84%e6%95%b0-177&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;53-时间效率与空间效率的平衡-181&#34;&gt;&#xA;  5.3 时间效率与空间效率的平衡 181&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#53-%e6%97%b6%e9%97%b4%e6%95%88%e7%8e%87%e4%b8%8e%e7%a9%ba%e9%97%b4%e6%95%88%e7%8e%87%e7%9a%84%e5%b9%b3%e8%a1%a1-181&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题34丑数-182&#34;&gt;&#xA;  面试题34：丑数 182&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9834%e4%b8%91%e6%95%b0-182&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;逐个判断整数是不是丑数的解法-182&#34;&gt;&#xA;  逐个判断整数是不是丑数的解法 182&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%80%90%e4%b8%aa%e5%88%a4%e6%96%ad%e6%95%b4%e6%95%b0%e6%98%af%e4%b8%8d%e6%98%af%e4%b8%91%e6%95%b0%e7%9a%84%e8%a7%a3%e6%b3%95-182&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;创建数组保存已经找到的丑数的解法-183&#34;&gt;&#xA;  创建数组保存已经找到的丑数的解法 183&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%9b%e5%bb%ba%e6%95%b0%e7%bb%84%e4%bf%9d%e5%ad%98%e5%b7%b2%e7%bb%8f%e6%89%be%e5%88%b0%e7%9a%84%e4%b8%91%e6%95%b0%e7%9a%84%e8%a7%a3%e6%b3%95-183&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题35第一个只出现一次的字符-186&#34;&gt;&#xA;  面试题35：第一个只出现一次的字符 186&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9835%e7%ac%ac%e4%b8%80%e4%b8%aa%e5%8f%aa%e5%87%ba%e7%8e%b0%e4%b8%80%e6%ac%a1%e7%9a%84%e5%ad%97%e7%ac%a6-186&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题36数组中的逆序对-189&#34;&gt;&#xA;  面试题36：数组中的逆序对 189&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9836%e6%95%b0%e7%bb%84%e4%b8%ad%e7%9a%84%e9%80%86%e5%ba%8f%e5%af%b9-189&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题37两个链表的第一个公共结点-193&#34;&gt;&#xA;  面试题37：两个链表的第一个公共结点 193&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9837%e4%b8%a4%e4%b8%aa%e9%93%be%e8%a1%a8%e7%9a%84%e7%ac%ac%e4%b8%80%e4%b8%aa%e5%85%ac%e5%85%b1%e7%bb%93%e7%82%b9-193&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;54-本章小结-196&#34;&gt;&#xA;  5.4 本章小结 196&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#54-%e6%9c%ac%e7%ab%a0%e5%b0%8f%e7%bb%93-196&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第6章-面试中的各项能力-198&#34;&gt;&#xA;  第6章 面试中的各项能力 198&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0-%e9%9d%a2%e8%af%95%e4%b8%ad%e7%9a%84%e5%90%84%e9%a1%b9%e8%83%bd%e5%8a%9b-198&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;61-面试官谈能力-198&#34;&gt;&#xA;  6.1 面试官谈能力 198&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#61-%e9%9d%a2%e8%af%95%e5%ae%98%e8%b0%88%e8%83%bd%e5%8a%9b-198&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;62-沟通能力和学习能力-200&#34;&gt;&#xA;  6.2 沟通能力和学习能力 200&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#62-%e6%b2%9f%e9%80%9a%e8%83%bd%e5%8a%9b%e5%92%8c%e5%ad%a6%e4%b9%a0%e8%83%bd%e5%8a%9b-200&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;沟通能力-200&#34;&gt;&#xA;  沟通能力 200&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b2%9f%e9%80%9a%e8%83%bd%e5%8a%9b-200&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;学习能力-200&#34;&gt;&#xA;  学习能力 200&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ad%a6%e4%b9%a0%e8%83%bd%e5%8a%9b-200&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;善于学习沟通的人也善于提问-201&#34;&gt;&#xA;  善于学习、沟通的人也善于提问 201&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%96%84%e4%ba%8e%e5%ad%a6%e4%b9%a0%e6%b2%9f%e9%80%9a%e7%9a%84%e4%ba%ba%e4%b9%9f%e5%96%84%e4%ba%8e%e6%8f%90%e9%97%ae-201&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;63-知识迁移能力-203&#34;&gt;&#xA;  6.3 知识迁移能力 203&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#63-%e7%9f%a5%e8%af%86%e8%bf%81%e7%a7%bb%e8%83%bd%e5%8a%9b-203&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题38数字在排序数组中出现的次数-204&#34;&gt;&#xA;  面试题38：数字在排序数组中出现的次数 204&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9838%e6%95%b0%e5%ad%97%e5%9c%a8%e6%8e%92%e5%ba%8f%e6%95%b0%e7%bb%84%e4%b8%ad%e5%87%ba%e7%8e%b0%e7%9a%84%e6%ac%a1%e6%95%b0-204&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题39二叉树的深度-207&#34;&gt;&#xA;  面试题39：二叉树的深度 207&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9839%e4%ba%8c%e5%8f%89%e6%a0%91%e7%9a%84%e6%b7%b1%e5%ba%a6-207&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;重复遍历结点的解法不足以打动面试官-209&#34;&gt;&#xA;  重复遍历结点的解法，不足以打动面试官 209&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%87%8d%e5%a4%8d%e9%81%8d%e5%8e%86%e7%bb%93%e7%82%b9%e7%9a%84%e8%a7%a3%e6%b3%95%e4%b8%8d%e8%b6%b3%e4%bb%a5%e6%89%93%e5%8a%a8%e9%9d%a2%e8%af%95%e5%ae%98-209&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;只遍历结点一次的解法正是面试官喜欢的-209&#34;&gt;&#xA;  只遍历结点一次的解法，正是面试官喜欢的 209&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%aa%e9%81%8d%e5%8e%86%e7%bb%93%e7%82%b9%e4%b8%80%e6%ac%a1%e7%9a%84%e8%a7%a3%e6%b3%95%e6%ad%a3%e6%98%af%e9%9d%a2%e8%af%95%e5%ae%98%e5%96%9c%e6%ac%a2%e7%9a%84-209&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题40数组中只出现一次的数字-211&#34;&gt;&#xA;  面试题40：数组中只出现一次的数字 211&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9840%e6%95%b0%e7%bb%84%e4%b8%ad%e5%8f%aa%e5%87%ba%e7%8e%b0%e4%b8%80%e6%ac%a1%e7%9a%84%e6%95%b0%e5%ad%97-211&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题41和为s的两个数字vs和为s的连续正数序列-214&#34;&gt;&#xA;  面试题41：和为s的两个数字VS和为s的连续正数序列 214&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9841%e5%92%8c%e4%b8%bas%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%95%b0%e5%ad%97vs%e5%92%8c%e4%b8%bas%e7%9a%84%e8%bf%9e%e7%bb%ad%e6%ad%a3%e6%95%b0%e5%ba%8f%e5%88%97-214&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题42翻转单词顺序-vs左旋转字符串-218&#34;&gt;&#xA;  面试题42：翻转单词顺序 VS左旋转字符串 218&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9842%e7%bf%bb%e8%bd%ac%e5%8d%95%e8%af%8d%e9%a1%ba%e5%ba%8f-vs%e5%b7%a6%e6%97%8b%e8%bd%ac%e5%ad%97%e7%ac%a6%e4%b8%b2-218&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;64-抽象建模能力-222&#34;&gt;&#xA;  6.4 抽象建模能力 222&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#64-%e6%8a%bd%e8%b1%a1%e5%bb%ba%e6%a8%a1%e8%83%bd%e5%8a%9b-222&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题43n个骰子的点数-223&#34;&gt;&#xA;  面试题43：n个骰子的点数 223&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9843n%e4%b8%aa%e9%aa%b0%e5%ad%90%e7%9a%84%e7%82%b9%e6%95%b0-223&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;基于递归求骰子点数时间效率不够高-223&#34;&gt;&#xA;  基于递归求骰子点数，时间效率不够高 223&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e4%ba%8e%e9%80%92%e5%bd%92%e6%b1%82%e9%aa%b0%e5%ad%90%e7%82%b9%e6%95%b0%e6%97%b6%e9%97%b4%e6%95%88%e7%8e%87%e4%b8%8d%e5%a4%9f%e9%ab%98-223&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;基于循环求骰子点数时间性能好-224&#34;&gt;&#xA;  基于循环求骰子点数，时间性能好 224&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e4%ba%8e%e5%be%aa%e7%8e%af%e6%b1%82%e9%aa%b0%e5%ad%90%e7%82%b9%e6%95%b0%e6%97%b6%e9%97%b4%e6%80%a7%e8%83%bd%e5%a5%bd-224&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题44扑克牌的顺子-226&#34;&gt;&#xA;  面试题44：扑克牌的顺子 226&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9844%e6%89%91%e5%85%8b%e7%89%8c%e7%9a%84%e9%a1%ba%e5%ad%90-226&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题45圆圈中最后剩下的数字-228&#34;&gt;&#xA;  面试题45：圆圈中最后剩下的数字 228&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9845%e5%9c%86%e5%9c%88%e4%b8%ad%e6%9c%80%e5%90%8e%e5%89%a9%e4%b8%8b%e7%9a%84%e6%95%b0%e5%ad%97-228&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;经典的解法用循环链表模拟圆圈-229&#34;&gt;&#xA;  经典的解法，用循环链表模拟圆圈 229&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bb%8f%e5%85%b8%e7%9a%84%e8%a7%a3%e6%b3%95%e7%94%a8%e5%be%aa%e7%8e%af%e9%93%be%e8%a1%a8%e6%a8%a1%e6%8b%9f%e5%9c%86%e5%9c%88-229&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;创新的解法拿到offer不在话下-230&#34;&gt;&#xA;  创新的解法，拿到Offer不在话下 230&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%9b%e6%96%b0%e7%9a%84%e8%a7%a3%e6%b3%95%e6%8b%bf%e5%88%b0offer%e4%b8%8d%e5%9c%a8%e8%af%9d%e4%b8%8b-230&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h3 id=&#34;65-发散思维能力-232&#34;&gt;&#xA;  6.5 发散思维能力 232&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#65-%e5%8f%91%e6%95%a3%e6%80%9d%e7%bb%b4%e8%83%bd%e5%8a%9b-232&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题46求12n-233&#34;&gt;&#xA;  面试题46：求1+2+…+n 233&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9846%e6%b1%8212n-233&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;利用构造函数求解-234&#34;&gt;&#xA;  利用构造函数求解 234&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a9%e7%94%a8%e6%9e%84%e9%80%a0%e5%87%bd%e6%95%b0%e6%b1%82%e8%a7%a3-234&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;利用虚函数求解-234&#34;&gt;&#xA;  利用虚函数求解 234&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a9%e7%94%a8%e8%99%9a%e5%87%bd%e6%95%b0%e6%b1%82%e8%a7%a3-234&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;利用函数指针求解-235&#34;&gt;&#xA;  利用函数指针求解 235&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a9%e7%94%a8%e5%87%bd%e6%95%b0%e6%8c%87%e9%92%88%e6%b1%82%e8%a7%a3-235&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;利用模板类型求解-236&#34;&gt;&#xA;  利用模板类型求解 236&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a9%e7%94%a8%e6%a8%a1%e6%9d%bf%e7%b1%bb%e5%9e%8b%e6%b1%82%e8%a7%a3-236&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题47不用加减乘除做加法-237&#34;&gt;&#xA;  面试题47：不用加减乘除做加法 237&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9847%e4%b8%8d%e7%94%a8%e5%8a%a0%e5%87%8f%e4%b9%98%e9%99%a4%e5%81%9a%e5%8a%a0%e6%b3%95-237&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题48不能被继承的类-239&#34;&gt;&#xA;  面试题48：不能被继承的类 239&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9848%e4%b8%8d%e8%83%bd%e8%a2%ab%e7%bb%a7%e6%89%bf%e7%9a%84%e7%b1%bb-239&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;常规的解法把构造函数设为私有函数-239&#34;&gt;&#xA;  常规的解法：把构造函数设为私有函数 239&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b8%b8%e8%a7%84%e7%9a%84%e8%a7%a3%e6%b3%95%e6%8a%8a%e6%9e%84%e9%80%a0%e5%87%bd%e6%95%b0%e8%ae%be%e4%b8%ba%e7%a7%81%e6%9c%89%e5%87%bd%e6%95%b0-239&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;新奇的解法利用虚拟继承-240&#34;&gt;&#xA;  新奇的解法：利用虚拟继承 240&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%96%b0%e5%a5%87%e7%9a%84%e8%a7%a3%e6%b3%95%e5%88%a9%e7%94%a8%e8%99%9a%e6%8b%9f%e7%bb%a7%e6%89%bf-240&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h3 id=&#34;66-本章小结-241&#34;&gt;&#xA;  6.6 本章小结 241&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#66-%e6%9c%ac%e7%ab%a0%e5%b0%8f%e7%bb%93-241&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第7章-两个面试案例-243&#34;&gt;&#xA;  第7章 两个面试案例 243&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac7%e7%ab%a0-%e4%b8%a4%e4%b8%aa%e9%9d%a2%e8%af%95%e6%a1%88%e4%be%8b-243&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;71-案例一面试题49把字符串转换成整数-244&#34;&gt;&#xA;  7.1 案例一：（面试题49）把字符串转换成整数 244&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#71-%e6%a1%88%e4%be%8b%e4%b8%80%e9%9d%a2%e8%af%95%e9%a2%9849%e6%8a%8a%e5%ad%97%e7%ac%a6%e4%b8%b2%e8%bd%ac%e6%8d%a2%e6%88%90%e6%95%b4%e6%95%b0-244&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;72-案例二面试题50树中两个结点的最低公共祖先-252&#34;&gt;&#xA;  7.2 案例二：（面试题50）树中两个结点的最低公共祖先 252&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#72-%e6%a1%88%e4%be%8b%e4%ba%8c%e9%9d%a2%e8%af%95%e9%a2%9850%e6%a0%91%e4%b8%ad%e4%b8%a4%e4%b8%aa%e7%bb%93%e7%82%b9%e7%9a%84%e6%9c%80%e4%bd%8e%e5%85%ac%e5%85%b1%e7%a5%96%e5%85%88-252&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第8章-英文版新增面试题-261&#34;&gt;&#xA;  第8章 英文版新增面试题 261&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac8%e7%ab%a0-%e8%8b%b1%e6%96%87%e7%89%88%e6%96%b0%e5%a2%9e%e9%9d%a2%e8%af%95%e9%a2%98-261&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;81-数组-261&#34;&gt;&#xA;  8.1 数组 261&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#81-%e6%95%b0%e7%bb%84-261&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题51数组中重复的数字-261&#34;&gt;&#xA;  面试题51：数组中重复的数字 261&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9851%e6%95%b0%e7%bb%84%e4%b8%ad%e9%87%8d%e5%a4%8d%e7%9a%84%e6%95%b0%e5%ad%97-261&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题52构建乘积数组-263&#34;&gt;&#xA;  面试题52：构建乘积数组 263&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9852%e6%9e%84%e5%bb%ba%e4%b9%98%e7%a7%af%e6%95%b0%e7%bb%84-263&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;82-字符串-265&#34;&gt;&#xA;  8.2 字符串 265&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#82-%e5%ad%97%e7%ac%a6%e4%b8%b2-265&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题53正则表达式匹配-265&#34;&gt;&#xA;  面试题53：正则表达式匹配 265&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9853%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e5%8c%b9%e9%85%8d-265&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题54表示数值的字符串-267&#34;&gt;&#xA;  面试题54：表示数值的字符串 267&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9854%e8%a1%a8%e7%a4%ba%e6%95%b0%e5%80%bc%e7%9a%84%e5%ad%97%e7%ac%a6%e4%b8%b2-267&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题55字符流中第一个不重复的字符-269&#34;&gt;&#xA;  面试题55：字符流中第一个不重复的字符 269&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9855%e5%ad%97%e7%ac%a6%e6%b5%81%e4%b8%ad%e7%ac%ac%e4%b8%80%e4%b8%aa%e4%b8%8d%e9%87%8d%e5%a4%8d%e7%9a%84%e5%ad%97%e7%ac%a6-269&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;83-链表-270&#34;&gt;&#xA;  8.3 链表 270&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#83-%e9%93%be%e8%a1%a8-270&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题56链表中环的入口结点-270&#34;&gt;&#xA;  面试题56：链表中环的入口结点 270&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9856%e9%93%be%e8%a1%a8%e4%b8%ad%e7%8e%af%e7%9a%84%e5%85%a5%e5%8f%a3%e7%bb%93%e7%82%b9-270&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题57删除链表中重复的结点-273&#34;&gt;&#xA;  面试题57：删除链表中重复的结点 273&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9857%e5%88%a0%e9%99%a4%e9%93%be%e8%a1%a8%e4%b8%ad%e9%87%8d%e5%a4%8d%e7%9a%84%e7%bb%93%e7%82%b9-273&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;84-树-275&#34;&gt;&#xA;  8.4 树 275&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#84-%e6%a0%91-275&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题58二叉树的下一个结点-275&#34;&gt;&#xA;  面试题58：二叉树的下一个结点 275&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9858%e4%ba%8c%e5%8f%89%e6%a0%91%e7%9a%84%e4%b8%8b%e4%b8%80%e4%b8%aa%e7%bb%93%e7%82%b9-275&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题59对称的二叉树-277&#34;&gt;&#xA;  面试题59：对称的二叉树 277&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9859%e5%af%b9%e7%a7%b0%e7%9a%84%e4%ba%8c%e5%8f%89%e6%a0%91-277&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题60把二叉树打印成多行-278&#34;&gt;&#xA;  面试题60：把二叉树打印成多行 278&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9860%e6%8a%8a%e4%ba%8c%e5%8f%89%e6%a0%91%e6%89%93%e5%8d%b0%e6%88%90%e5%a4%9a%e8%a1%8c-278&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题61按之字形顺序打印二叉树-280&#34;&gt;&#xA;  面试题61：按之字形顺序打印二叉树 280&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9861%e6%8c%89%e4%b9%8b%e5%ad%97%e5%bd%a2%e9%a1%ba%e5%ba%8f%e6%89%93%e5%8d%b0%e4%ba%8c%e5%8f%89%e6%a0%91-280&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题62序列化二叉树-283&#34;&gt;&#xA;  面试题62：序列化二叉树 283&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9862%e5%ba%8f%e5%88%97%e5%8c%96%e4%ba%8c%e5%8f%89%e6%a0%91-283&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题63二叉搜索树的第k个结点-285&#34;&gt;&#xA;  面试题63：二叉搜索树的第k个结点 285&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9863%e4%ba%8c%e5%8f%89%e6%90%9c%e7%b4%a2%e6%a0%91%e7%9a%84%e7%ac%ack%e4%b8%aa%e7%bb%93%e7%82%b9-285&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题64数据流中的中位数-286&#34;&gt;&#xA;  面试题64：数据流中的中位数 286&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9864%e6%95%b0%e6%8d%ae%e6%b5%81%e4%b8%ad%e7%9a%84%e4%b8%ad%e4%bd%8d%e6%95%b0-286&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;85-栈和队列-290&#34;&gt;&#xA;  8.5 栈和队列 290&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#85-%e6%a0%88%e5%92%8c%e9%98%9f%e5%88%97-290&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题65滑动窗口的最大值-290&#34;&gt;&#xA;  面试题65：滑动窗口的最大值 290&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9865%e6%bb%91%e5%8a%a8%e7%aa%97%e5%8f%a3%e7%9a%84%e6%9c%80%e5%a4%a7%e5%80%bc-290&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;86-回溯法-294&#34;&gt;&#xA;  8.6 回溯法 294&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#86-%e5%9b%9e%e6%ba%af%e6%b3%95-294&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题66矩阵中的路径-294&#34;&gt;&#xA;  面试题66：矩阵中的路径 294&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9866%e7%9f%a9%e9%98%b5%e4%b8%ad%e7%9a%84%e8%b7%af%e5%be%84-294&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题67机器人的运动范围-296&#34;&gt;&#xA;  面试题67：机器人的运动范围 296&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9867%e6%9c%ba%e5%99%a8%e4%ba%ba%e7%9a%84%e8%bf%90%e5%8a%a8%e8%8c%83%e5%9b%b4-296&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;</description>
    </item>
    <item>
      <title>剑指Offer</title>
      <link>/zh/zh/post/books/computer-science/%E5%89%91%E6%8C%87offer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/books/computer-science/%E5%89%91%E6%8C%87offer/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/25910559/&#34;&gt;剑指Offer&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第1章-面试的流程-1&#34;&gt;&#xA;  第1章 面试的流程 1&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-%e9%9d%a2%e8%af%95%e7%9a%84%e6%b5%81%e7%a8%8b-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-面试官谈面试-1&#34;&gt;&#xA;  1.1 面试官谈面试 1&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-%e9%9d%a2%e8%af%95%e5%ae%98%e8%b0%88%e9%9d%a2%e8%af%95-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;12-面试的三种形式-2&#34;&gt;&#xA;  1.2 面试的三种形式 2&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#12-%e9%9d%a2%e8%af%95%e7%9a%84%e4%b8%89%e7%a7%8d%e5%bd%a2%e5%bc%8f-2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;121-电话面试-2&#34;&gt;&#xA;  1.2.1 电话面试 2&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#121-%e7%94%b5%e8%af%9d%e9%9d%a2%e8%af%95-2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;122-共享桌面远程面试-3&#34;&gt;&#xA;  1.2.2 共享桌面远程面试 3&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#122-%e5%85%b1%e4%ba%ab%e6%a1%8c%e9%9d%a2%e8%bf%9c%e7%a8%8b%e9%9d%a2%e8%af%95-3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;123-现场面试-4&#34;&gt;&#xA;  1.2.3 现场面试 4&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#123-%e7%8e%b0%e5%9c%ba%e9%9d%a2%e8%af%95-4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;13-面试的三个环节-5&#34;&gt;&#xA;  1.3 面试的三个环节 5&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#13-%e9%9d%a2%e8%af%95%e7%9a%84%e4%b8%89%e4%b8%aa%e7%8e%af%e8%8a%82-5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;131-行为面试环节-5&#34;&gt;&#xA;  1.3.1 行为面试环节 5&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#131-%e8%a1%8c%e4%b8%ba%e9%9d%a2%e8%af%95%e7%8e%af%e8%8a%82-5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;应聘者的项目经验-6&#34;&gt;&#xA;  应聘者的项目经验 6&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ba%94%e8%81%98%e8%80%85%e7%9a%84%e9%a1%b9%e7%9b%ae%e7%bb%8f%e9%aa%8c-6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;应聘者掌握的技能-7&#34;&gt;&#xA;  应聘者掌握的技能 7&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ba%94%e8%81%98%e8%80%85%e6%8e%8c%e6%8f%a1%e7%9a%84%e6%8a%80%e8%83%bd-7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;回答为什么跳槽-8&#34;&gt;&#xA;  回答“为什么跳槽” 8&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9e%e7%ad%94%e4%b8%ba%e4%bb%80%e4%b9%88%e8%b7%b3%e6%a7%bd-8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;132-技术面试环节-10&#34;&gt;&#xA;  1.3.2 技术面试环节 10&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#132-%e6%8a%80%e6%9c%af%e9%9d%a2%e8%af%95%e7%8e%af%e8%8a%82-10&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;扎实的基础知识-10&#34;&gt;&#xA;  扎实的基础知识 10&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%89%8e%e5%ae%9e%e7%9a%84%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86-10&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;高质量的代码-11&#34;&gt;&#xA;  高质量的代码 11&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%ab%98%e8%b4%a8%e9%87%8f%e7%9a%84%e4%bb%a3%e7%a0%81-11&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;清晰的思路-14&#34;&gt;&#xA;  清晰的思路 14&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b8%85%e6%99%b0%e7%9a%84%e6%80%9d%e8%b7%af-14&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;优化效率的能力-15&#34;&gt;&#xA;  优化效率的能力 15&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bc%98%e5%8c%96%e6%95%88%e7%8e%87%e7%9a%84%e8%83%bd%e5%8a%9b-15&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;优秀的综合能力-16&#34;&gt;&#xA;  优秀的综合能力 16&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bc%98%e7%a7%80%e7%9a%84%e7%bb%bc%e5%90%88%e8%83%bd%e5%8a%9b-16&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;133-应聘者提问环节-17&#34;&gt;&#xA;  1.3.3 应聘者提问环节 17&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#133-%e5%ba%94%e8%81%98%e8%80%85%e6%8f%90%e9%97%ae%e7%8e%af%e8%8a%82-17&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;14-本章小结-18&#34;&gt;&#xA;  1.4 本章小结 18&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#14-%e6%9c%ac%e7%ab%a0%e5%b0%8f%e7%bb%93-18&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第2章-面试需要的基础知识-20&#34;&gt;&#xA;  第2章 面试需要的基础知识 20&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-%e9%9d%a2%e8%af%95%e9%9c%80%e8%a6%81%e7%9a%84%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86-20&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;21-面试官谈基础知识-20&#34;&gt;&#xA;  2.1 面试官谈基础知识 20&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#21-%e9%9d%a2%e8%af%95%e5%ae%98%e8%b0%88%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86-20&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;22-编程语言-22&#34;&gt;&#xA;  2.2 编程语言 22&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#22-%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80-22&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;221-c-22&#34;&gt;&#xA;  2.2.1 C++ 22&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#221-c-22&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题1赋值运算符函数-24&#34;&gt;&#xA;  面试题1：赋值运算符函数 24&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%981%e8%b5%8b%e5%80%bc%e8%bf%90%e7%ae%97%e7%ac%a6%e5%87%bd%e6%95%b0-24&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h6 id=&#34;经典的解法适用于初级程序员-25&#34;&gt;&#xA;  经典的解法，适用于初级程序员 25&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bb%8f%e5%85%b8%e7%9a%84%e8%a7%a3%e6%b3%95%e9%80%82%e7%94%a8%e4%ba%8e%e5%88%9d%e7%ba%a7%e7%a8%8b%e5%ba%8f%e5%91%98-25&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;考虑异常安全性的解法高级程序员必备-26&#34;&gt;&#xA;  考虑异常安全性的解法，高级程序员必备 26&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%80%83%e8%99%91%e5%bc%82%e5%b8%b8%e5%ae%89%e5%85%a8%e6%80%a7%e7%9a%84%e8%a7%a3%e6%b3%95%e9%ab%98%e7%ba%a7%e7%a8%8b%e5%ba%8f%e5%91%98%e5%bf%85%e5%a4%87-26&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h4 id=&#34;222-c-27&#34;&gt;&#xA;  2.2.2 C# 27&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#222-c-27&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题2实现singleton模式-31&#34;&gt;&#xA;  面试题2：实现Singleton模式 31&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%982%e5%ae%9e%e7%8e%b0singleton%e6%a8%a1%e5%bc%8f-31&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h6 id=&#34;不好的解法一只适用于单线程-31&#34;&gt;&#xA;  不好的解法一：只适用于单线程 31&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%8d%e5%a5%bd%e7%9a%84%e8%a7%a3%e6%b3%95%e4%b8%80%e5%8f%aa%e9%80%82%e7%94%a8%e4%ba%8e%e5%8d%95%e7%ba%bf%e7%a8%8b-31&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;不好的解法二可用于多线程但效率不高-32&#34;&gt;&#xA;  不好的解法二：可用于多线程但效率不高 32&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%8d%e5%a5%bd%e7%9a%84%e8%a7%a3%e6%b3%95%e4%ba%8c%e5%8f%af%e7%94%a8%e4%ba%8e%e5%a4%9a%e7%ba%bf%e7%a8%8b%e4%bd%86%e6%95%88%e7%8e%87%e4%b8%8d%e9%ab%98-32&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;可行的解法同步锁前后两次判断-33&#34;&gt;&#xA;  可行的解法：同步锁前后两次判断 33&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%af%e8%a1%8c%e7%9a%84%e8%a7%a3%e6%b3%95%e5%90%8c%e6%ad%a5%e9%94%81%e5%89%8d%e5%90%8e%e4%b8%a4%e6%ac%a1%e5%88%a4%e6%96%ad-33&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;推荐的解法一利用静态构造函数-34&#34;&gt;&#xA;  推荐的解法一：利用静态构造函数 34&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8e%a8%e8%8d%90%e7%9a%84%e8%a7%a3%e6%b3%95%e4%b8%80%e5%88%a9%e7%94%a8%e9%9d%99%e6%80%81%e6%9e%84%e9%80%a0%e5%87%bd%e6%95%b0-34&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;推荐的解法二按需创建实例-34&#34;&gt;&#xA;  推荐的解法二：按需创建实例 34&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8e%a8%e8%8d%90%e7%9a%84%e8%a7%a3%e6%b3%95%e4%ba%8c%e6%8c%89%e9%9c%80%e5%88%9b%e5%bb%ba%e5%ae%9e%e4%be%8b-34&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;解法比较-35&#34;&gt;&#xA;  解法比较 35&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e6%b3%95%e6%af%94%e8%be%83-35&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h3 id=&#34;23-数据结构-36&#34;&gt;&#xA;  2.3 数据结构 36&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#23-%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84-36&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;231-数组-36&#34;&gt;&#xA;  2.3.1 数组 36&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#231-%e6%95%b0%e7%bb%84-36&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题3二维数组中的查找-38&#34;&gt;&#xA;  面试题3：二维数组中的查找 38&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%983%e4%ba%8c%e7%bb%b4%e6%95%b0%e7%bb%84%e4%b8%ad%e7%9a%84%e6%9f%a5%e6%89%be-38&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;232-字符串-42&#34;&gt;&#xA;  2.3.2 字符串 42&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#232-%e5%ad%97%e7%ac%a6%e4%b8%b2-42&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题4替换空格-44&#34;&gt;&#xA;  面试题4：替换空格 44&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%984%e6%9b%bf%e6%8d%a2%e7%a9%ba%e6%a0%bc-44&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h6 id=&#34;on2的解法不足以拿到offer-45&#34;&gt;&#xA;  O(n2)的解法，不足以拿到Offer 45&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#on2%e7%9a%84%e8%a7%a3%e6%b3%95%e4%b8%8d%e8%b6%b3%e4%bb%a5%e6%8b%bf%e5%88%b0offer-45&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;on的解法搞定offer就靠它-46&#34;&gt;&#xA;  O(n)的解法，搞定Offer就靠它 46&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#on%e7%9a%84%e8%a7%a3%e6%b3%95%e6%90%9e%e5%ae%9aoffer%e5%b0%b1%e9%9d%a0%e5%ae%83-46&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h4 id=&#34;233-链表-49&#34;&gt;&#xA;  2.3.3 链表 49&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#233-%e9%93%be%e8%a1%a8-49&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题5从尾到头打印链表-51&#34;&gt;&#xA;  面试题5：从尾到头打印链表 51&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%985%e4%bb%8e%e5%b0%be%e5%88%b0%e5%a4%b4%e6%89%93%e5%8d%b0%e9%93%be%e8%a1%a8-51&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;234-树-53&#34;&gt;&#xA;  2.3.4 树 53&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#234-%e6%a0%91-53&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题6重建二叉树-55&#34;&gt;&#xA;  面试题6：重建二叉树 55&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%986%e9%87%8d%e5%bb%ba%e4%ba%8c%e5%8f%89%e6%a0%91-55&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;235-栈和队列-58&#34;&gt;&#xA;  2.3.5 栈和队列 58&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#235-%e6%a0%88%e5%92%8c%e9%98%9f%e5%88%97-58&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题7用两个栈实现队列-59&#34;&gt;&#xA;  面试题7：用两个栈实现队列 59&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%987%e7%94%a8%e4%b8%a4%e4%b8%aa%e6%a0%88%e5%ae%9e%e7%8e%b0%e9%98%9f%e5%88%97-59&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h3 id=&#34;24-算法和数据操作-62&#34;&gt;&#xA;  2.4 算法和数据操作 62&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#24-%e7%ae%97%e6%b3%95%e5%92%8c%e6%95%b0%e6%8d%ae%e6%93%8d%e4%bd%9c-62&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;241-查找和排序-63&#34;&gt;&#xA;  2.4.1 查找和排序 63&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#241-%e6%9f%a5%e6%89%be%e5%92%8c%e6%8e%92%e5%ba%8f-63&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题8旋转数组的最小数字-66&#34;&gt;&#xA;  面试题8：旋转数组的最小数字 66&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%988%e6%97%8b%e8%bd%ac%e6%95%b0%e7%bb%84%e7%9a%84%e6%9c%80%e5%b0%8f%e6%95%b0%e5%ad%97-66&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;242-递归和循环-71&#34;&gt;&#xA;  2.4.2 递归和循环 71&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#242-%e9%80%92%e5%bd%92%e5%92%8c%e5%be%aa%e7%8e%af-71&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题9斐波那契数列-73&#34;&gt;&#xA;  面试题9：斐波那契数列 73&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%989%e6%96%90%e6%b3%a2%e9%82%a3%e5%a5%91%e6%95%b0%e5%88%97-73&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h6 id=&#34;效率很低的解法面试官不会喜欢-73&#34;&gt;&#xA;  效率很低的解法，面试官不会喜欢 73&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%88%e7%8e%87%e5%be%88%e4%bd%8e%e7%9a%84%e8%a7%a3%e6%b3%95%e9%9d%a2%e8%af%95%e5%ae%98%e4%b8%8d%e4%bc%9a%e5%96%9c%e6%ac%a2-73&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;面试官期待的实用解法-74&#34;&gt;&#xA;  面试官期待的实用解法 74&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e5%ae%98%e6%9c%9f%e5%be%85%e7%9a%84%e5%ae%9e%e7%94%a8%e8%a7%a3%e6%b3%95-74&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;ologn但不够实用的解法-74&#34;&gt;&#xA;  O(logn)但不够实用的解法 74&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ologn%e4%bd%86%e4%b8%8d%e5%a4%9f%e5%ae%9e%e7%94%a8%e7%9a%84%e8%a7%a3%e6%b3%95-74&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;解法比较-75&#34;&gt;&#xA;  解法比较 75&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e6%b3%95%e6%af%94%e8%be%83-75&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h4 id=&#34;243-位运算-77&#34;&gt;&#xA;  2.4.3 位运算 77&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#243-%e4%bd%8d%e8%bf%90%e7%ae%97-77&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;面试题10二进制中1的个数-78&#34;&gt;&#xA;  面试题10：二进制中1的个数 78&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9810%e4%ba%8c%e8%bf%9b%e5%88%b6%e4%b8%ad1%e7%9a%84%e4%b8%aa%e6%95%b0-78&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h6 id=&#34;可能引起死循环的解法-79&#34;&gt;&#xA;  可能引起死循环的解法 79&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%af%e8%83%bd%e5%bc%95%e8%b5%b7%e6%ad%bb%e5%be%aa%e7%8e%af%e7%9a%84%e8%a7%a3%e6%b3%95-79&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;常规解法-79&#34;&gt;&#xA;  常规解法 79&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b8%b8%e8%a7%84%e8%a7%a3%e6%b3%95-79&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h6 id=&#34;能给面试官带来惊喜的解法-80&#34;&gt;&#xA;  能给面试官带来惊喜的解法 80&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%83%bd%e7%bb%99%e9%9d%a2%e8%af%95%e5%ae%98%e5%b8%a6%e6%9d%a5%e6%83%8a%e5%96%9c%e7%9a%84%e8%a7%a3%e6%b3%95-80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h6&gt;&#xA;&lt;h3 id=&#34;25-本章小结-82&#34;&gt;&#xA;  2.5 本章小结 82&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#25-%e6%9c%ac%e7%ab%a0%e5%b0%8f%e7%bb%93-82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第3章-高质量的代码-84&#34;&gt;&#xA;  第3章 高质量的代码 84&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0-%e9%ab%98%e8%b4%a8%e9%87%8f%e7%9a%84%e4%bb%a3%e7%a0%81-84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;31-面试官谈代码质量-84&#34;&gt;&#xA;  3.1 面试官谈代码质量 84&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#31-%e9%9d%a2%e8%af%95%e5%ae%98%e8%b0%88%e4%bb%a3%e7%a0%81%e8%b4%a8%e9%87%8f-84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;32-代码的规范性-86&#34;&gt;&#xA;  3.2 代码的规范性 86&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#32-%e4%bb%a3%e7%a0%81%e7%9a%84%e8%a7%84%e8%8c%83%e6%80%a7-86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;33-代码的完整性-87&#34;&gt;&#xA;  3.3 代码的完整性 87&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#33-%e4%bb%a3%e7%a0%81%e7%9a%84%e5%ae%8c%e6%95%b4%e6%80%a7-87&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;从3方面确保代码的完整性-87&#34;&gt;&#xA;  从3方面确保代码的完整性 87&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bb%8e3%e6%96%b9%e9%9d%a2%e7%a1%ae%e4%bf%9d%e4%bb%a3%e7%a0%81%e7%9a%84%e5%ae%8c%e6%95%b4%e6%80%a7-87&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;3种错误处理的方法-88&#34;&gt;&#xA;  3种错误处理的方法 88&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3%e7%a7%8d%e9%94%99%e8%af%af%e5%a4%84%e7%90%86%e7%9a%84%e6%96%b9%e6%b3%95-88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题11数值的整数次方-90&#34;&gt;&#xA;  面试题11：数值的整数次方 90&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9811%e6%95%b0%e5%80%bc%e7%9a%84%e6%95%b4%e6%95%b0%e6%ac%a1%e6%96%b9-90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;自以为题目简单的解法-90&#34;&gt;&#xA;  自以为题目简单的解法 90&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%87%aa%e4%bb%a5%e4%b8%ba%e9%a2%98%e7%9b%ae%e7%ae%80%e5%8d%95%e7%9a%84%e8%a7%a3%e6%b3%95-90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;全面但不够高效的解法离offer已经很近了-90&#34;&gt;&#xA;  全面但不够高效的解法，离Offer已经很近了 90&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%a8%e9%9d%a2%e4%bd%86%e4%b8%8d%e5%a4%9f%e9%ab%98%e6%95%88%e7%9a%84%e8%a7%a3%e6%b3%95%e7%a6%bboffer%e5%b7%b2%e7%bb%8f%e5%be%88%e8%bf%91%e4%ba%86-90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;全面又高效的解法确保能拿到offer-92&#34;&gt;&#xA;  全面又高效的解法，确保能拿到Offer 92&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%a8%e9%9d%a2%e5%8f%88%e9%ab%98%e6%95%88%e7%9a%84%e8%a7%a3%e6%b3%95%e7%a1%ae%e4%bf%9d%e8%83%bd%e6%8b%bf%e5%88%b0offer-92&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题12打印1到最大的n位数-94&#34;&gt;&#xA;  面试题12：打印1到最大的n位数 94&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9812%e6%89%93%e5%8d%b01%e5%88%b0%e6%9c%80%e5%a4%a7%e7%9a%84n%e4%bd%8d%e6%95%b0-94&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;跳进面试官陷阱-94&#34;&gt;&#xA;  跳进面试官陷阱 94&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%b7%b3%e8%bf%9b%e9%9d%a2%e8%af%95%e5%ae%98%e9%99%b7%e9%98%b1-94&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;在字符串上模拟数字加法-94&#34;&gt;&#xA;  在字符串上模拟数字加法 94&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9c%a8%e5%ad%97%e7%ac%a6%e4%b8%b2%e4%b8%8a%e6%a8%a1%e6%8b%9f%e6%95%b0%e5%ad%97%e5%8a%a0%e6%b3%95-94&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;把问题转换成数字排列-97&#34;&gt;&#xA;  把问题转换成数字排列 97&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8a%8a%e9%97%ae%e9%a2%98%e8%bd%ac%e6%8d%a2%e6%88%90%e6%95%b0%e5%ad%97%e6%8e%92%e5%88%97-97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题13在o1时间删除链表结点-99&#34;&gt;&#xA;  面试题13：在O(1)时间删除链表结点 99&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9813%e5%9c%a8o1%e6%97%b6%e9%97%b4%e5%88%a0%e9%99%a4%e9%93%be%e8%a1%a8%e7%bb%93%e7%82%b9-99&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题14调整数组顺序使奇数位于偶数前面-102&#34;&gt;&#xA;  面试题14：调整数组顺序使奇数位于偶数前面 102&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9814%e8%b0%83%e6%95%b4%e6%95%b0%e7%bb%84%e9%a1%ba%e5%ba%8f%e4%bd%bf%e5%a5%87%e6%95%b0%e4%bd%8d%e4%ba%8e%e5%81%b6%e6%95%b0%e5%89%8d%e9%9d%a2-102&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;只完成基本功能的解法仅适用于初级程序员-102&#34;&gt;&#xA;  只完成基本功能的解法，仅适用于初级程序员 102&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%aa%e5%ae%8c%e6%88%90%e5%9f%ba%e6%9c%ac%e5%8a%9f%e8%83%bd%e7%9a%84%e8%a7%a3%e6%b3%95%e4%bb%85%e9%80%82%e7%94%a8%e4%ba%8e%e5%88%9d%e7%ba%a7%e7%a8%8b%e5%ba%8f%e5%91%98-102&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;考虑可扩展性的解法能秒杀offer-104&#34;&gt;&#xA;  考虑可扩展性的解法，能秒杀Offer 104&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%80%83%e8%99%91%e5%8f%af%e6%89%a9%e5%b1%95%e6%80%a7%e7%9a%84%e8%a7%a3%e6%b3%95%e8%83%bd%e7%a7%92%e6%9d%80offer-104&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h3 id=&#34;34-代码的鲁棒性-106&#34;&gt;&#xA;  3.4 代码的鲁棒性 106&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#34-%e4%bb%a3%e7%a0%81%e7%9a%84%e9%b2%81%e6%a3%92%e6%80%a7-106&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题15链表中倒数第k个结点-107&#34;&gt;&#xA;  面试题15：链表中倒数第k个结点 107&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9815%e9%93%be%e8%a1%a8%e4%b8%ad%e5%80%92%e6%95%b0%e7%ac%ack%e4%b8%aa%e7%bb%93%e7%82%b9-107&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题16反转链表-112&#34;&gt;&#xA;  面试题16：反转链表 112&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9816%e5%8f%8d%e8%bd%ac%e9%93%be%e8%a1%a8-112&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题17合并两个排序的链表-114&#34;&gt;&#xA;  面试题17：合并两个排序的链表 114&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9817%e5%90%88%e5%b9%b6%e4%b8%a4%e4%b8%aa%e6%8e%92%e5%ba%8f%e7%9a%84%e9%93%be%e8%a1%a8-114&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题18树的子结构-117&#34;&gt;&#xA;  面试题18：树的子结构 117&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9818%e6%a0%91%e7%9a%84%e5%ad%90%e7%bb%93%e6%9e%84-117&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;35-本章小结-121&#34;&gt;&#xA;  3.5 本章小结 121&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#35-%e6%9c%ac%e7%ab%a0%e5%b0%8f%e7%bb%93-121&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第4章-解决面试题的思路-123&#34;&gt;&#xA;  第4章 解决面试题的思路 123&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0-%e8%a7%a3%e5%86%b3%e9%9d%a2%e8%af%95%e9%a2%98%e7%9a%84%e6%80%9d%e8%b7%af-123&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;41-面试官谈面试思路-123&#34;&gt;&#xA;  4.1 面试官谈面试思路 123&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#41-%e9%9d%a2%e8%af%95%e5%ae%98%e8%b0%88%e9%9d%a2%e8%af%95%e6%80%9d%e8%b7%af-123&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题19二叉树的镜像-125&#34;&gt;&#xA;  面试题19：二叉树的镜像 125&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9819%e4%ba%8c%e5%8f%89%e6%a0%91%e7%9a%84%e9%95%9c%e5%83%8f-125&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;42-画图让抽象问题形象化-125&#34;&gt;&#xA;  4.2 画图让抽象问题形象化 125&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#42-%e7%94%bb%e5%9b%be%e8%ae%a9%e6%8a%bd%e8%b1%a1%e9%97%ae%e9%a2%98%e5%bd%a2%e8%b1%a1%e5%8c%96-125&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题20顺时针打印矩阵-127&#34;&gt;&#xA;  面试题20：顺时针打印矩阵 127&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9820%e9%a1%ba%e6%97%b6%e9%92%88%e6%89%93%e5%8d%b0%e7%9f%a9%e9%98%b5-127&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;43-举例让抽象问题具体化-131&#34;&gt;&#xA;  4.3 举例让抽象问题具体化 131&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#43-%e4%b8%be%e4%be%8b%e8%ae%a9%e6%8a%bd%e8%b1%a1%e9%97%ae%e9%a2%98%e5%85%b7%e4%bd%93%e5%8c%96-131&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题21包含min函数的栈-132&#34;&gt;&#xA;  面试题21：包含min函数的栈 132&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9821%e5%8c%85%e5%90%abmin%e5%87%bd%e6%95%b0%e7%9a%84%e6%a0%88-132&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题22栈的压入弹出序列-134&#34;&gt;&#xA;  面试题22：栈的压入、弹出序列 134&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9822%e6%a0%88%e7%9a%84%e5%8e%8b%e5%85%a5%e5%bc%b9%e5%87%ba%e5%ba%8f%e5%88%97-134&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题23从上往下打印二叉树-137&#34;&gt;&#xA;  面试题23：从上往下打印二叉树 137&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9823%e4%bb%8e%e4%b8%8a%e5%be%80%e4%b8%8b%e6%89%93%e5%8d%b0%e4%ba%8c%e5%8f%89%e6%a0%91-137&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题24二叉搜索树的后序遍历序列-140&#34;&gt;&#xA;  面试题24：二叉搜索树的后序遍历序列 140&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9824%e4%ba%8c%e5%8f%89%e6%90%9c%e7%b4%a2%e6%a0%91%e7%9a%84%e5%90%8e%e5%ba%8f%e9%81%8d%e5%8e%86%e5%ba%8f%e5%88%97-140&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题25二叉树中和为某一值的路径-143&#34;&gt;&#xA;  面试题25：二叉树中和为某一值的路径 143&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9825%e4%ba%8c%e5%8f%89%e6%a0%91%e4%b8%ad%e5%92%8c%e4%b8%ba%e6%9f%90%e4%b8%80%e5%80%bc%e7%9a%84%e8%b7%af%e5%be%84-143&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;44-分解让复杂问题简单化-146&#34;&gt;&#xA;  4.4 分解让复杂问题简单化 146&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#44-%e5%88%86%e8%a7%a3%e8%ae%a9%e5%a4%8d%e6%9d%82%e9%97%ae%e9%a2%98%e7%ae%80%e5%8d%95%e5%8c%96-146&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题26复杂链表的复制-147&#34;&gt;&#xA;  面试题26：复杂链表的复制 147&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9826%e5%a4%8d%e6%9d%82%e9%93%be%e8%a1%a8%e7%9a%84%e5%a4%8d%e5%88%b6-147&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题27二叉搜索树与双向链表-151&#34;&gt;&#xA;  面试题27：二叉搜索树与双向链表 151&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9827%e4%ba%8c%e5%8f%89%e6%90%9c%e7%b4%a2%e6%a0%91%e4%b8%8e%e5%8f%8c%e5%90%91%e9%93%be%e8%a1%a8-151&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题28字符串的排列-154&#34;&gt;&#xA;  面试题28：字符串的排列 154&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9828%e5%ad%97%e7%ac%a6%e4%b8%b2%e7%9a%84%e6%8e%92%e5%88%97-154&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;45-本章小结-158&#34;&gt;&#xA;  4.5 本章小结 158&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#45-%e6%9c%ac%e7%ab%a0%e5%b0%8f%e7%bb%93-158&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第5章-优化时间和空间效率-160&#34;&gt;&#xA;  第5章 优化时间和空间效率 160&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac5%e7%ab%a0-%e4%bc%98%e5%8c%96%e6%97%b6%e9%97%b4%e5%92%8c%e7%a9%ba%e9%97%b4%e6%95%88%e7%8e%87-160&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;51-面试官谈效率-160&#34;&gt;&#xA;  5.1 面试官谈效率 160&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#51-%e9%9d%a2%e8%af%95%e5%ae%98%e8%b0%88%e6%95%88%e7%8e%87-160&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;52-时间效率-162&#34;&gt;&#xA;  5.2 时间效率 162&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#52-%e6%97%b6%e9%97%b4%e6%95%88%e7%8e%87-162&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题29数组中出现次数超过一半的数字-163&#34;&gt;&#xA;  面试题29：数组中出现次数超过一半的数字 163&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9829%e6%95%b0%e7%bb%84%e4%b8%ad%e5%87%ba%e7%8e%b0%e6%ac%a1%e6%95%b0%e8%b6%85%e8%bf%87%e4%b8%80%e5%8d%8a%e7%9a%84%e6%95%b0%e5%ad%97-163&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;基于partition函数的on算法-163&#34;&gt;&#xA;  基于Partition函数的O(n)算法 163&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e4%ba%8epartition%e5%87%bd%e6%95%b0%e7%9a%84on%e7%ae%97%e6%b3%95-163&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;利用数组特点的on算法-165&#34;&gt;&#xA;  利用数组特点的O(n)算法 165&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a9%e7%94%a8%e6%95%b0%e7%bb%84%e7%89%b9%e7%82%b9%e7%9a%84on%e7%ae%97%e6%b3%95-165&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;解法比较-166&#34;&gt;&#xA;  解法比较 166&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e6%b3%95%e6%af%94%e8%be%83-166&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题30最小的k个数-167&#34;&gt;&#xA;  面试题30：最小的k个数 167&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9830%e6%9c%80%e5%b0%8f%e7%9a%84k%e4%b8%aa%e6%95%b0-167&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;on的算法只当可以修改输入数组时可用-167&#34;&gt;&#xA;  O(n)的算法，只当可以修改输入数组时可用 167&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#on%e7%9a%84%e7%ae%97%e6%b3%95%e5%8f%aa%e5%bd%93%e5%8f%af%e4%bb%a5%e4%bf%ae%e6%94%b9%e8%be%93%e5%85%a5%e6%95%b0%e7%bb%84%e6%97%b6%e5%8f%af%e7%94%a8-167&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;onlogk的算法适合处理海量数据-168&#34;&gt;&#xA;  O(nlogk)的算法，适合处理海量数据 168&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#onlogk%e7%9a%84%e7%ae%97%e6%b3%95%e9%80%82%e5%90%88%e5%a4%84%e7%90%86%e6%b5%b7%e9%87%8f%e6%95%b0%e6%8d%ae-168&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;解法比较-169&#34;&gt;&#xA;  解法比较 169&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e6%b3%95%e6%af%94%e8%be%83-169&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题31连续子数组的最大和-171&#34;&gt;&#xA;  面试题31：连续子数组的最大和 171&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9831%e8%bf%9e%e7%bb%ad%e5%ad%90%e6%95%b0%e7%bb%84%e7%9a%84%e6%9c%80%e5%a4%a7%e5%92%8c-171&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;举例分析数组的规律-171&#34;&gt;&#xA;  举例分析数组的规律 171&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%be%e4%be%8b%e5%88%86%e6%9e%90%e6%95%b0%e7%bb%84%e7%9a%84%e8%a7%84%e5%be%8b-171&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;应用动态规划法-173&#34;&gt;&#xA;  应用动态规划法 173&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ba%94%e7%94%a8%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92%e6%b3%95-173&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题32从1到n整数中1出现的次数-174&#34;&gt;&#xA;  面试题32：从1到n整数中1出现的次数 174&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9832%e4%bb%8e1%e5%88%b0n%e6%95%b4%e6%95%b0%e4%b8%ad1%e5%87%ba%e7%8e%b0%e7%9a%84%e6%ac%a1%e6%95%b0-174&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;不考虑效率的解法想拿offer有点难-174&#34;&gt;&#xA;  不考虑效率的解法，想拿Offer有点难 174&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%8d%e8%80%83%e8%99%91%e6%95%88%e7%8e%87%e7%9a%84%e8%a7%a3%e6%b3%95%e6%83%b3%e6%8b%bfoffer%e6%9c%89%e7%82%b9%e9%9a%be-174&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;明显提高效率的解法让面试官耳目一新-175&#34;&gt;&#xA;  明显提高效率的解法，让面试官耳目一新 175&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%98%8e%e6%98%be%e6%8f%90%e9%ab%98%e6%95%88%e7%8e%87%e7%9a%84%e8%a7%a3%e6%b3%95%e8%ae%a9%e9%9d%a2%e8%af%95%e5%ae%98%e8%80%b3%e7%9b%ae%e4%b8%80%e6%96%b0-175&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题33把数组排成最小的数-177&#34;&gt;&#xA;  面试题33：把数组排成最小的数 177&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9833%e6%8a%8a%e6%95%b0%e7%bb%84%e6%8e%92%e6%88%90%e6%9c%80%e5%b0%8f%e7%9a%84%e6%95%b0-177&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;53-时间效率与空间效率的平衡-181&#34;&gt;&#xA;  5.3 时间效率与空间效率的平衡 181&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#53-%e6%97%b6%e9%97%b4%e6%95%88%e7%8e%87%e4%b8%8e%e7%a9%ba%e9%97%b4%e6%95%88%e7%8e%87%e7%9a%84%e5%b9%b3%e8%a1%a1-181&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题34丑数-182&#34;&gt;&#xA;  面试题34：丑数 182&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9834%e4%b8%91%e6%95%b0-182&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;逐个判断整数是不是丑数的解法-182&#34;&gt;&#xA;  逐个判断整数是不是丑数的解法 182&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%80%90%e4%b8%aa%e5%88%a4%e6%96%ad%e6%95%b4%e6%95%b0%e6%98%af%e4%b8%8d%e6%98%af%e4%b8%91%e6%95%b0%e7%9a%84%e8%a7%a3%e6%b3%95-182&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;创建数组保存已经找到的丑数的解法-183&#34;&gt;&#xA;  创建数组保存已经找到的丑数的解法 183&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%9b%e5%bb%ba%e6%95%b0%e7%bb%84%e4%bf%9d%e5%ad%98%e5%b7%b2%e7%bb%8f%e6%89%be%e5%88%b0%e7%9a%84%e4%b8%91%e6%95%b0%e7%9a%84%e8%a7%a3%e6%b3%95-183&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题35第一个只出现一次的字符-186&#34;&gt;&#xA;  面试题35：第一个只出现一次的字符 186&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9835%e7%ac%ac%e4%b8%80%e4%b8%aa%e5%8f%aa%e5%87%ba%e7%8e%b0%e4%b8%80%e6%ac%a1%e7%9a%84%e5%ad%97%e7%ac%a6-186&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题36数组中的逆序对-189&#34;&gt;&#xA;  面试题36：数组中的逆序对 189&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9836%e6%95%b0%e7%bb%84%e4%b8%ad%e7%9a%84%e9%80%86%e5%ba%8f%e5%af%b9-189&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题37两个链表的第一个公共结点-193&#34;&gt;&#xA;  面试题37：两个链表的第一个公共结点 193&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9837%e4%b8%a4%e4%b8%aa%e9%93%be%e8%a1%a8%e7%9a%84%e7%ac%ac%e4%b8%80%e4%b8%aa%e5%85%ac%e5%85%b1%e7%bb%93%e7%82%b9-193&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;54-本章小结-196&#34;&gt;&#xA;  5.4 本章小结 196&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#54-%e6%9c%ac%e7%ab%a0%e5%b0%8f%e7%bb%93-196&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第6章-面试中的各项能力-198&#34;&gt;&#xA;  第6章 面试中的各项能力 198&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0-%e9%9d%a2%e8%af%95%e4%b8%ad%e7%9a%84%e5%90%84%e9%a1%b9%e8%83%bd%e5%8a%9b-198&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;61-面试官谈能力-198&#34;&gt;&#xA;  6.1 面试官谈能力 198&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#61-%e9%9d%a2%e8%af%95%e5%ae%98%e8%b0%88%e8%83%bd%e5%8a%9b-198&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;62-沟通能力和学习能力-200&#34;&gt;&#xA;  6.2 沟通能力和学习能力 200&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#62-%e6%b2%9f%e9%80%9a%e8%83%bd%e5%8a%9b%e5%92%8c%e5%ad%a6%e4%b9%a0%e8%83%bd%e5%8a%9b-200&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;沟通能力-200&#34;&gt;&#xA;  沟通能力 200&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b2%9f%e9%80%9a%e8%83%bd%e5%8a%9b-200&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;学习能力-200&#34;&gt;&#xA;  学习能力 200&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ad%a6%e4%b9%a0%e8%83%bd%e5%8a%9b-200&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;善于学习沟通的人也善于提问-201&#34;&gt;&#xA;  善于学习、沟通的人也善于提问 201&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%96%84%e4%ba%8e%e5%ad%a6%e4%b9%a0%e6%b2%9f%e9%80%9a%e7%9a%84%e4%ba%ba%e4%b9%9f%e5%96%84%e4%ba%8e%e6%8f%90%e9%97%ae-201&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;63-知识迁移能力-203&#34;&gt;&#xA;  6.3 知识迁移能力 203&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#63-%e7%9f%a5%e8%af%86%e8%bf%81%e7%a7%bb%e8%83%bd%e5%8a%9b-203&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题38数字在排序数组中出现的次数-204&#34;&gt;&#xA;  面试题38：数字在排序数组中出现的次数 204&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9838%e6%95%b0%e5%ad%97%e5%9c%a8%e6%8e%92%e5%ba%8f%e6%95%b0%e7%bb%84%e4%b8%ad%e5%87%ba%e7%8e%b0%e7%9a%84%e6%ac%a1%e6%95%b0-204&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题39二叉树的深度-207&#34;&gt;&#xA;  面试题39：二叉树的深度 207&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9839%e4%ba%8c%e5%8f%89%e6%a0%91%e7%9a%84%e6%b7%b1%e5%ba%a6-207&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;重复遍历结点的解法不足以打动面试官-209&#34;&gt;&#xA;  重复遍历结点的解法，不足以打动面试官 209&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%87%8d%e5%a4%8d%e9%81%8d%e5%8e%86%e7%bb%93%e7%82%b9%e7%9a%84%e8%a7%a3%e6%b3%95%e4%b8%8d%e8%b6%b3%e4%bb%a5%e6%89%93%e5%8a%a8%e9%9d%a2%e8%af%95%e5%ae%98-209&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;只遍历结点一次的解法正是面试官喜欢的-209&#34;&gt;&#xA;  只遍历结点一次的解法，正是面试官喜欢的 209&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%aa%e9%81%8d%e5%8e%86%e7%bb%93%e7%82%b9%e4%b8%80%e6%ac%a1%e7%9a%84%e8%a7%a3%e6%b3%95%e6%ad%a3%e6%98%af%e9%9d%a2%e8%af%95%e5%ae%98%e5%96%9c%e6%ac%a2%e7%9a%84-209&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题40数组中只出现一次的数字-211&#34;&gt;&#xA;  面试题40：数组中只出现一次的数字 211&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9840%e6%95%b0%e7%bb%84%e4%b8%ad%e5%8f%aa%e5%87%ba%e7%8e%b0%e4%b8%80%e6%ac%a1%e7%9a%84%e6%95%b0%e5%ad%97-211&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题41和为s的两个数字vs和为s的连续正数序列-214&#34;&gt;&#xA;  面试题41：和为s的两个数字VS和为s的连续正数序列 214&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9841%e5%92%8c%e4%b8%bas%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%95%b0%e5%ad%97vs%e5%92%8c%e4%b8%bas%e7%9a%84%e8%bf%9e%e7%bb%ad%e6%ad%a3%e6%95%b0%e5%ba%8f%e5%88%97-214&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题42翻转单词顺序-vs左旋转字符串-218&#34;&gt;&#xA;  面试题42：翻转单词顺序 VS左旋转字符串 218&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9842%e7%bf%bb%e8%bd%ac%e5%8d%95%e8%af%8d%e9%a1%ba%e5%ba%8f-vs%e5%b7%a6%e6%97%8b%e8%bd%ac%e5%ad%97%e7%ac%a6%e4%b8%b2-218&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;64-抽象建模能力-222&#34;&gt;&#xA;  6.4 抽象建模能力 222&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#64-%e6%8a%bd%e8%b1%a1%e5%bb%ba%e6%a8%a1%e8%83%bd%e5%8a%9b-222&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题43n个骰子的点数-223&#34;&gt;&#xA;  面试题43：n个骰子的点数 223&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9843n%e4%b8%aa%e9%aa%b0%e5%ad%90%e7%9a%84%e7%82%b9%e6%95%b0-223&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;基于递归求骰子点数时间效率不够高-223&#34;&gt;&#xA;  基于递归求骰子点数，时间效率不够高 223&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e4%ba%8e%e9%80%92%e5%bd%92%e6%b1%82%e9%aa%b0%e5%ad%90%e7%82%b9%e6%95%b0%e6%97%b6%e9%97%b4%e6%95%88%e7%8e%87%e4%b8%8d%e5%a4%9f%e9%ab%98-223&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;基于循环求骰子点数时间性能好-224&#34;&gt;&#xA;  基于循环求骰子点数，时间性能好 224&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e4%ba%8e%e5%be%aa%e7%8e%af%e6%b1%82%e9%aa%b0%e5%ad%90%e7%82%b9%e6%95%b0%e6%97%b6%e9%97%b4%e6%80%a7%e8%83%bd%e5%a5%bd-224&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题44扑克牌的顺子-226&#34;&gt;&#xA;  面试题44：扑克牌的顺子 226&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9844%e6%89%91%e5%85%8b%e7%89%8c%e7%9a%84%e9%a1%ba%e5%ad%90-226&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题45圆圈中最后剩下的数字-228&#34;&gt;&#xA;  面试题45：圆圈中最后剩下的数字 228&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9845%e5%9c%86%e5%9c%88%e4%b8%ad%e6%9c%80%e5%90%8e%e5%89%a9%e4%b8%8b%e7%9a%84%e6%95%b0%e5%ad%97-228&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;经典的解法用循环链表模拟圆圈-229&#34;&gt;&#xA;  经典的解法，用循环链表模拟圆圈 229&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bb%8f%e5%85%b8%e7%9a%84%e8%a7%a3%e6%b3%95%e7%94%a8%e5%be%aa%e7%8e%af%e9%93%be%e8%a1%a8%e6%a8%a1%e6%8b%9f%e5%9c%86%e5%9c%88-229&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;创新的解法拿到offer不在话下-230&#34;&gt;&#xA;  创新的解法，拿到Offer不在话下 230&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%9b%e6%96%b0%e7%9a%84%e8%a7%a3%e6%b3%95%e6%8b%bf%e5%88%b0offer%e4%b8%8d%e5%9c%a8%e8%af%9d%e4%b8%8b-230&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h3 id=&#34;65-发散思维能力-232&#34;&gt;&#xA;  6.5 发散思维能力 232&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#65-%e5%8f%91%e6%95%a3%e6%80%9d%e7%bb%b4%e8%83%bd%e5%8a%9b-232&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题46求12n-233&#34;&gt;&#xA;  面试题46：求1+2+…+n 233&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9846%e6%b1%8212n-233&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;利用构造函数求解-234&#34;&gt;&#xA;  利用构造函数求解 234&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a9%e7%94%a8%e6%9e%84%e9%80%a0%e5%87%bd%e6%95%b0%e6%b1%82%e8%a7%a3-234&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;利用虚函数求解-234&#34;&gt;&#xA;  利用虚函数求解 234&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a9%e7%94%a8%e8%99%9a%e5%87%bd%e6%95%b0%e6%b1%82%e8%a7%a3-234&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;利用函数指针求解-235&#34;&gt;&#xA;  利用函数指针求解 235&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a9%e7%94%a8%e5%87%bd%e6%95%b0%e6%8c%87%e9%92%88%e6%b1%82%e8%a7%a3-235&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;利用模板类型求解-236&#34;&gt;&#xA;  利用模板类型求解 236&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%a9%e7%94%a8%e6%a8%a1%e6%9d%bf%e7%b1%bb%e5%9e%8b%e6%b1%82%e8%a7%a3-236&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h4 id=&#34;面试题47不用加减乘除做加法-237&#34;&gt;&#xA;  面试题47：不用加减乘除做加法 237&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9847%e4%b8%8d%e7%94%a8%e5%8a%a0%e5%87%8f%e4%b9%98%e9%99%a4%e5%81%9a%e5%8a%a0%e6%b3%95-237&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题48不能被继承的类-239&#34;&gt;&#xA;  面试题48：不能被继承的类 239&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9848%e4%b8%8d%e8%83%bd%e8%a2%ab%e7%bb%a7%e6%89%bf%e7%9a%84%e7%b1%bb-239&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h5 id=&#34;常规的解法把构造函数设为私有函数-239&#34;&gt;&#xA;  常规的解法：把构造函数设为私有函数 239&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b8%b8%e8%a7%84%e7%9a%84%e8%a7%a3%e6%b3%95%e6%8a%8a%e6%9e%84%e9%80%a0%e5%87%bd%e6%95%b0%e8%ae%be%e4%b8%ba%e7%a7%81%e6%9c%89%e5%87%bd%e6%95%b0-239&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h5 id=&#34;新奇的解法利用虚拟继承-240&#34;&gt;&#xA;  新奇的解法：利用虚拟继承 240&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%96%b0%e5%a5%87%e7%9a%84%e8%a7%a3%e6%b3%95%e5%88%a9%e7%94%a8%e8%99%9a%e6%8b%9f%e7%bb%a7%e6%89%bf-240&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;h3 id=&#34;66-本章小结-241&#34;&gt;&#xA;  6.6 本章小结 241&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#66-%e6%9c%ac%e7%ab%a0%e5%b0%8f%e7%bb%93-241&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第7章-两个面试案例-243&#34;&gt;&#xA;  第7章 两个面试案例 243&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac7%e7%ab%a0-%e4%b8%a4%e4%b8%aa%e9%9d%a2%e8%af%95%e6%a1%88%e4%be%8b-243&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;71-案例一面试题49把字符串转换成整数-244&#34;&gt;&#xA;  7.1 案例一：（面试题49）把字符串转换成整数 244&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#71-%e6%a1%88%e4%be%8b%e4%b8%80%e9%9d%a2%e8%af%95%e9%a2%9849%e6%8a%8a%e5%ad%97%e7%ac%a6%e4%b8%b2%e8%bd%ac%e6%8d%a2%e6%88%90%e6%95%b4%e6%95%b0-244&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;72-案例二面试题50树中两个结点的最低公共祖先-252&#34;&gt;&#xA;  7.2 案例二：（面试题50）树中两个结点的最低公共祖先 252&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#72-%e6%a1%88%e4%be%8b%e4%ba%8c%e9%9d%a2%e8%af%95%e9%a2%9850%e6%a0%91%e4%b8%ad%e4%b8%a4%e4%b8%aa%e7%bb%93%e7%82%b9%e7%9a%84%e6%9c%80%e4%bd%8e%e5%85%ac%e5%85%b1%e7%a5%96%e5%85%88-252&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第8章-英文版新增面试题-261&#34;&gt;&#xA;  第8章 英文版新增面试题 261&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac8%e7%ab%a0-%e8%8b%b1%e6%96%87%e7%89%88%e6%96%b0%e5%a2%9e%e9%9d%a2%e8%af%95%e9%a2%98-261&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;81-数组-261&#34;&gt;&#xA;  8.1 数组 261&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#81-%e6%95%b0%e7%bb%84-261&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题51数组中重复的数字-261&#34;&gt;&#xA;  面试题51：数组中重复的数字 261&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9851%e6%95%b0%e7%bb%84%e4%b8%ad%e9%87%8d%e5%a4%8d%e7%9a%84%e6%95%b0%e5%ad%97-261&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题52构建乘积数组-263&#34;&gt;&#xA;  面试题52：构建乘积数组 263&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9852%e6%9e%84%e5%bb%ba%e4%b9%98%e7%a7%af%e6%95%b0%e7%bb%84-263&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;82-字符串-265&#34;&gt;&#xA;  8.2 字符串 265&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#82-%e5%ad%97%e7%ac%a6%e4%b8%b2-265&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题53正则表达式匹配-265&#34;&gt;&#xA;  面试题53：正则表达式匹配 265&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9853%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e5%8c%b9%e9%85%8d-265&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题54表示数值的字符串-267&#34;&gt;&#xA;  面试题54：表示数值的字符串 267&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9854%e8%a1%a8%e7%a4%ba%e6%95%b0%e5%80%bc%e7%9a%84%e5%ad%97%e7%ac%a6%e4%b8%b2-267&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题55字符流中第一个不重复的字符-269&#34;&gt;&#xA;  面试题55：字符流中第一个不重复的字符 269&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9855%e5%ad%97%e7%ac%a6%e6%b5%81%e4%b8%ad%e7%ac%ac%e4%b8%80%e4%b8%aa%e4%b8%8d%e9%87%8d%e5%a4%8d%e7%9a%84%e5%ad%97%e7%ac%a6-269&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;83-链表-270&#34;&gt;&#xA;  8.3 链表 270&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#83-%e9%93%be%e8%a1%a8-270&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题56链表中环的入口结点-270&#34;&gt;&#xA;  面试题56：链表中环的入口结点 270&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9856%e9%93%be%e8%a1%a8%e4%b8%ad%e7%8e%af%e7%9a%84%e5%85%a5%e5%8f%a3%e7%bb%93%e7%82%b9-270&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题57删除链表中重复的结点-273&#34;&gt;&#xA;  面试题57：删除链表中重复的结点 273&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9857%e5%88%a0%e9%99%a4%e9%93%be%e8%a1%a8%e4%b8%ad%e9%87%8d%e5%a4%8d%e7%9a%84%e7%bb%93%e7%82%b9-273&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;84-树-275&#34;&gt;&#xA;  8.4 树 275&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#84-%e6%a0%91-275&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题58二叉树的下一个结点-275&#34;&gt;&#xA;  面试题58：二叉树的下一个结点 275&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9858%e4%ba%8c%e5%8f%89%e6%a0%91%e7%9a%84%e4%b8%8b%e4%b8%80%e4%b8%aa%e7%bb%93%e7%82%b9-275&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题59对称的二叉树-277&#34;&gt;&#xA;  面试题59：对称的二叉树 277&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9859%e5%af%b9%e7%a7%b0%e7%9a%84%e4%ba%8c%e5%8f%89%e6%a0%91-277&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题60把二叉树打印成多行-278&#34;&gt;&#xA;  面试题60：把二叉树打印成多行 278&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9860%e6%8a%8a%e4%ba%8c%e5%8f%89%e6%a0%91%e6%89%93%e5%8d%b0%e6%88%90%e5%a4%9a%e8%a1%8c-278&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题61按之字形顺序打印二叉树-280&#34;&gt;&#xA;  面试题61：按之字形顺序打印二叉树 280&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9861%e6%8c%89%e4%b9%8b%e5%ad%97%e5%bd%a2%e9%a1%ba%e5%ba%8f%e6%89%93%e5%8d%b0%e4%ba%8c%e5%8f%89%e6%a0%91-280&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题62序列化二叉树-283&#34;&gt;&#xA;  面试题62：序列化二叉树 283&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9862%e5%ba%8f%e5%88%97%e5%8c%96%e4%ba%8c%e5%8f%89%e6%a0%91-283&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题63二叉搜索树的第k个结点-285&#34;&gt;&#xA;  面试题63：二叉搜索树的第k个结点 285&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9863%e4%ba%8c%e5%8f%89%e6%90%9c%e7%b4%a2%e6%a0%91%e7%9a%84%e7%ac%ack%e4%b8%aa%e7%bb%93%e7%82%b9-285&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题64数据流中的中位数-286&#34;&gt;&#xA;  面试题64：数据流中的中位数 286&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9864%e6%95%b0%e6%8d%ae%e6%b5%81%e4%b8%ad%e7%9a%84%e4%b8%ad%e4%bd%8d%e6%95%b0-286&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;85-栈和队列-290&#34;&gt;&#xA;  8.5 栈和队列 290&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#85-%e6%a0%88%e5%92%8c%e9%98%9f%e5%88%97-290&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题65滑动窗口的最大值-290&#34;&gt;&#xA;  面试题65：滑动窗口的最大值 290&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9865%e6%bb%91%e5%8a%a8%e7%aa%97%e5%8f%a3%e7%9a%84%e6%9c%80%e5%a4%a7%e5%80%bc-290&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;86-回溯法-294&#34;&gt;&#xA;  8.6 回溯法 294&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#86-%e5%9b%9e%e6%ba%af%e6%b3%95-294&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;面试题66矩阵中的路径-294&#34;&gt;&#xA;  面试题66：矩阵中的路径 294&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9866%e7%9f%a9%e9%98%b5%e4%b8%ad%e7%9a%84%e8%b7%af%e5%be%84-294&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;面试题67机器人的运动范围-296&#34;&gt;&#xA;  面试题67：机器人的运动范围 296&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9d%a2%e8%af%95%e9%a2%9867%e6%9c%ba%e5%99%a8%e4%ba%ba%e7%9a%84%e8%bf%90%e5%8a%a8%e8%8c%83%e5%9b%b4-296&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;</description>
    </item>
    <item>
      <title>美国困局</title>
      <link>/zh/post/books/%E7%BE%8E%E5%9B%BD%E5%9B%B0%E5%B1%80/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/books/%E7%BE%8E%E5%9B%BD%E5%9B%B0%E5%B1%80/</guid>
      <description>&lt;h1 id=&#34;美国困局&#34;&gt;&#xA;  美国困局&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%be%8e%e5%9b%bd%e5%9b%b0%e5%b1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/36946631/&#34;&gt;美国困局&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;导论-从美国内政视角研究美国变局&#34;&gt;&#xA;  导论 从美国内政视角研究美国变局&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%af%bc%e8%ae%ba-%e4%bb%8e%e7%be%8e%e5%9b%bd%e5%86%85%e6%94%bf%e8%a7%86%e8%a7%92%e7%a0%94%e7%a9%b6%e7%be%8e%e5%9b%bd%e5%8f%98%e5%b1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一缘起&#34;&gt;&#xA;  一、缘起&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e7%bc%98%e8%b5%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二-理解特朗普和新右翼的一些误区&#34;&gt;&#xA;  二、 理解特朗普和“新右翼”的一些误区&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c-%e7%90%86%e8%a7%a3%e7%89%b9%e6%9c%97%e6%99%ae%e5%92%8c%e6%96%b0%e5%8f%b3%e7%bf%bc%e7%9a%84%e4%b8%80%e4%ba%9b%e8%af%af%e5%8c%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三本书框架&#34;&gt;&#xA;  三、本书框架&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e6%9c%ac%e4%b9%a6%e6%a1%86%e6%9e%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第一章-新右翼是什么&#34;&gt;&#xA;  第一章 “新右翼”是什么&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%80%e7%ab%a0-%e6%96%b0%e5%8f%b3%e7%bf%bc%e6%98%af%e4%bb%80%e4%b9%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一政治而非经济新右翼带来的欧美政治议题&#34;&gt;&#xA;  一、政治而非经济：“新右翼”带来的欧美政治议题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e6%94%bf%e6%b2%bb%e8%80%8c%e9%9d%9e%e7%bb%8f%e6%b5%8e%e6%96%b0%e5%8f%b3%e7%bf%bc%e5%b8%a6%e6%9d%a5%e7%9a%84%e6%ac%a7%e7%be%8e%e6%94%bf%e6%b2%bb%e8%ae%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二公权与私权新右翼的核心诉求&#34;&gt;&#xA;  二、公权与私权：“新右翼”的核心诉求&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%85%ac%e6%9d%83%e4%b8%8e%e7%a7%81%e6%9d%83%e6%96%b0%e5%8f%b3%e7%bf%bc%e7%9a%84%e6%a0%b8%e5%bf%83%e8%af%89%e6%b1%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三西方民粹主义的现实面向&#34;&gt;&#xA;  三、西方民粹主义的现实面向&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e8%a5%bf%e6%96%b9%e6%b0%91%e7%b2%b9%e4%b8%bb%e4%b9%89%e7%9a%84%e7%8e%b0%e5%ae%9e%e9%9d%a2%e5%90%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第二章奥巴马选民vs特朗普选民关键性选举与美国政党选民联盟重组&#34;&gt;&#xA;  第二章“奥巴马选民”vs“特朗普选民”：关键性选举与美国政党选民联盟重组&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%ba%8c%e7%ab%a0%e5%a5%a5%e5%b7%b4%e9%a9%ac%e9%80%89%e6%b0%91vs%e7%89%b9%e6%9c%97%e6%99%ae%e9%80%89%e6%b0%91%e5%85%b3%e9%94%ae%e6%80%a7%e9%80%89%e4%b8%be%e4%b8%8e%e7%be%8e%e5%9b%bd%e6%94%bf%e5%85%9a%e9%80%89%e6%b0%91%e8%81%94%e7%9b%9f%e9%87%8d%e7%bb%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一变局奥巴马选民联盟浮现&#34;&gt;&#xA;  一、变局：“奥巴马选民”联盟浮现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e5%8f%98%e5%b1%80%e5%a5%a5%e5%b7%b4%e9%a9%ac%e9%80%89%e6%b0%91%e8%81%94%e7%9b%9f%e6%b5%ae%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二共和党的两个应对思路&#34;&gt;&#xA;  二、共和党的两个应对思路&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%85%b1%e5%92%8c%e5%85%9a%e7%9a%84%e4%b8%a4%e4%b8%aa%e5%ba%94%e5%af%b9%e6%80%9d%e8%b7%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三特朗普选民联盟颠覆性的新议题&#34;&gt;&#xA;  三、“特朗普选民”联盟：颠覆性的新议题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e7%89%b9%e6%9c%97%e6%99%ae%e9%80%89%e6%b0%91%e8%81%94%e7%9b%9f%e9%a2%a0%e8%a6%86%e6%80%a7%e7%9a%84%e6%96%b0%e8%ae%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四2020年大选例外的大选与稳固的政党选民联盟&#34;&gt;&#xA;  四、2020年大选：例外的大选与稳固的政党选民联盟&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b2020%e5%b9%b4%e5%a4%a7%e9%80%89%e4%be%8b%e5%a4%96%e7%9a%84%e5%a4%a7%e9%80%89%e4%b8%8e%e7%a8%b3%e5%9b%ba%e7%9a%84%e6%94%bf%e5%85%9a%e9%80%89%e6%b0%91%e8%81%94%e7%9b%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;五小结与前瞻&#34;&gt;&#xA;  五、小结与前瞻&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%94%e5%b0%8f%e7%bb%93%e4%b8%8e%e5%89%8d%e7%9e%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第三章-人权优先还是主权优先美国政治中的非法移民议题&#34;&gt;&#xA;  第三章 “人权优先”还是“主权优先”？：美国政治中的非法移民议题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%89%e7%ab%a0-%e4%ba%ba%e6%9d%83%e4%bc%98%e5%85%88%e8%bf%98%e6%98%af%e4%b8%bb%e6%9d%83%e4%bc%98%e5%85%88%e7%be%8e%e5%9b%bd%e6%94%bf%e6%b2%bb%e4%b8%ad%e7%9a%84%e9%9d%9e%e6%b3%95%e7%a7%bb%e6%b0%91%e8%ae%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一特朗普与民主党的政策逻辑差异&#34;&gt;&#xA;  一、特朗普与民主党的政策逻辑差异&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e7%89%b9%e6%9c%97%e6%99%ae%e4%b8%8e%e6%b0%91%e4%b8%bb%e5%85%9a%e7%9a%84%e6%94%bf%e7%ad%96%e9%80%bb%e8%be%91%e5%b7%ae%e5%bc%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二地域与阶层白人群体的分裂&#34;&gt;&#xA;  二、地域与阶层：白人群体的分裂&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%9c%b0%e5%9f%9f%e4%b8%8e%e9%98%b6%e5%b1%82%e7%99%bd%e4%ba%ba%e7%be%a4%e4%bd%93%e7%9a%84%e5%88%86%e8%a3%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三反常的亚裔&#34;&gt;&#xA;  三、“反常”的亚裔&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e5%8f%8d%e5%b8%b8%e7%9a%84%e4%ba%9a%e8%a3%94&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四拉美裔美国人未必欢迎非法移民老乡&#34;&gt;&#xA;  四、拉美裔美国人未必欢迎非法移民老乡&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b%e6%8b%89%e7%be%8e%e8%a3%94%e7%be%8e%e5%9b%bd%e4%ba%ba%e6%9c%aa%e5%bf%85%e6%ac%a2%e8%bf%8e%e9%9d%9e%e6%b3%95%e7%a7%bb%e6%b0%91%e8%80%81%e4%b9%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;五小结&#34;&gt;&#xA;  五、小结&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%94%e5%b0%8f%e7%bb%93&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第四章-从和稀泥到旗帜鲜明美国政治营销模式变迁&#34;&gt;&#xA;  第四章 从“和稀泥”到“旗帜鲜明”：美国政治营销模式变迁&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e5%9b%9b%e7%ab%a0-%e4%bb%8e%e5%92%8c%e7%a8%80%e6%b3%a5%e5%88%b0%e6%97%97%e5%b8%9c%e9%b2%9c%e6%98%8e%e7%be%8e%e5%9b%bd%e6%94%bf%e6%b2%bb%e8%90%a5%e9%94%80%e6%a8%a1%e5%bc%8f%e5%8f%98%e8%bf%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一政治风格个人特质与外在环境的共同产物&#34;&gt;&#xA;  一、政治风格：个人特质与外在环境的共同产物&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e6%94%bf%e6%b2%bb%e9%a3%8e%e6%a0%bc%e4%b8%aa%e4%ba%ba%e7%89%b9%e8%b4%a8%e4%b8%8e%e5%a4%96%e5%9c%a8%e7%8e%af%e5%a2%83%e7%9a%84%e5%85%b1%e5%90%8c%e4%ba%a7%e7%89%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二反非法移民特朗普vs克鲁兹&#34;&gt;&#xA;  二、反非法移民：特朗普vs克鲁兹&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%8f%8d%e9%9d%9e%e6%b3%95%e7%a7%bb%e6%b0%91%e7%89%b9%e6%9c%97%e6%99%aevs%e5%85%8b%e9%b2%81%e5%85%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三love-trumps-hate特朗普vs希拉里&#34;&gt;&#xA;  三、“Love Trumps Hate”：特朗普vs希拉里&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89love-trumps-hate%e7%89%b9%e6%9c%97%e6%99%aevs%e5%b8%8c%e6%8b%89%e9%87%8c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四变革时代需要旗帜鲜明的政治风格&#34;&gt;&#xA;  四、变革时代需要“旗帜鲜明”的政治风格&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b%e5%8f%98%e9%9d%a9%e6%97%b6%e4%bb%a3%e9%9c%80%e8%a6%81%e6%97%97%e5%b8%9c%e9%b2%9c%e6%98%8e%e7%9a%84%e6%94%bf%e6%b2%bb%e9%a3%8e%e6%a0%bc&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;五想当总统首先要身体好零售政治在美国的复兴&#34;&gt;&#xA;  五、“想当总统首先要身体好”：零售政治在美国的复兴&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%94%e6%83%b3%e5%bd%93%e6%80%bb%e7%bb%9f%e9%a6%96%e5%85%88%e8%a6%81%e8%ba%ab%e4%bd%93%e5%a5%bd%e9%9b%b6%e5%94%ae%e6%94%bf%e6%b2%bb%e5%9c%a8%e7%be%8e%e5%9b%bd%e7%9a%84%e5%a4%8d%e5%85%b4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第五章-新右翼执政方略一特朗普减税计划&#34;&gt;&#xA;  第五章 “新右翼”执政方略（一）：特朗普“减税”计划&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%ba%94%e7%ab%a0-%e6%96%b0%e5%8f%b3%e7%bf%bc%e6%89%a7%e6%94%bf%e6%96%b9%e7%95%a5%e4%b8%80%e7%89%b9%e6%9c%97%e6%99%ae%e5%87%8f%e7%a8%8e%e8%ae%a1%e5%88%92&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一经济政策的政治分析&#34;&gt;&#xA;  一、经济政策的政治分析&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e7%bb%8f%e6%b5%8e%e6%94%bf%e7%ad%96%e7%9a%84%e6%94%bf%e6%b2%bb%e5%88%86%e6%9e%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二-为什么富人反对给富人减税&#34;&gt;&#xA;  二、 为什么富人反对给富人“减税”？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c-%e4%b8%ba%e4%bb%80%e4%b9%88%e5%af%8c%e4%ba%ba%e5%8f%8d%e5%af%b9%e7%bb%99%e5%af%8c%e4%ba%ba%e5%87%8f%e7%a8%8e&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三减税计划背后的阶层冲突&#34;&gt;&#xA;  三、“减税”计划背后的阶层冲突&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e5%87%8f%e7%a8%8e%e8%ae%a1%e5%88%92%e8%83%8c%e5%90%8e%e7%9a%84%e9%98%b6%e5%b1%82%e5%86%b2%e7%aa%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四-一个失败的减税先例茶党-的堪萨斯实验&#34;&gt;&#xA;  四、 一个失败的“减税”先例：“茶党” 的堪萨斯实验&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b-%e4%b8%80%e4%b8%aa%e5%a4%b1%e8%b4%a5%e7%9a%84%e5%87%8f%e7%a8%8e%e5%85%88%e4%be%8b%e8%8c%b6%e5%85%9a-%e7%9a%84%e5%a0%aa%e8%90%a8%e6%96%af%e5%ae%9e%e9%aa%8c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;五特朗普减税计划的配套举措&#34;&gt;&#xA;  五、特朗普“减税”计划的配套举措&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%94%e7%89%b9%e6%9c%97%e6%99%ae%e5%87%8f%e7%a8%8e%e8%ae%a1%e5%88%92%e7%9a%84%e9%85%8d%e5%a5%97%e4%b8%be%e6%8e%aa&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第六章新右翼执政方略二其他举措&#34;&gt;&#xA;  第六章“新右翼”执政方略（二）：其他举措&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e5%85%ad%e7%ab%a0%e6%96%b0%e5%8f%b3%e7%bf%bc%e6%89%a7%e6%94%bf%e6%96%b9%e7%95%a5%e4%ba%8c%e5%85%b6%e4%bb%96%e4%b8%be%e6%8e%aa&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一能源与气候政策&#34;&gt;&#xA;  一、能源与气候政策&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e8%83%bd%e6%ba%90%e4%b8%8e%e6%b0%94%e5%80%99%e6%94%bf%e7%ad%96&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二产业政策以威斯康星州富士康项目为例&#34;&gt;&#xA;  二、产业政策：以威斯康星州富士康项目为例&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e4%ba%a7%e4%b8%9a%e6%94%bf%e7%ad%96%e4%bb%a5%e5%a8%81%e6%96%af%e5%ba%b7%e6%98%9f%e5%b7%9e%e5%af%8c%e5%a3%ab%e5%ba%b7%e9%a1%b9%e7%9b%ae%e4%b8%ba%e4%be%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三贸易政策&#34;&gt;&#xA;  三、贸易政策&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e8%b4%b8%e6%98%93%e6%94%bf%e7%ad%96&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四医保改革&#34;&gt;&#xA;  四、医保改革&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b%e5%8c%bb%e4%bf%9d%e6%94%b9%e9%9d%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第七章-从驯服特朗普到被特朗普驯服共和党的党内斗争&#34;&gt;&#xA;  第七章 从“驯服特朗普”到“被特朗普驯服”：共和党的党内斗争&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%83%e7%ab%a0-%e4%bb%8e%e9%a9%af%e6%9c%8d%e7%89%b9%e6%9c%97%e6%99%ae%e5%88%b0%e8%a2%ab%e7%89%b9%e6%9c%97%e6%99%ae%e9%a9%af%e6%9c%8d%e5%85%b1%e5%92%8c%e5%85%9a%e7%9a%84%e5%85%9a%e5%86%85%e6%96%97%e4%ba%89&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一从2016年大选至今共和党党内斗争的四个阶段&#34;&gt;&#xA;  一、从2016年大选至今共和党党内斗争的四个阶段&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e4%bb%8e2016%e5%b9%b4%e5%a4%a7%e9%80%89%e8%87%b3%e4%bb%8a%e5%85%b1%e5%92%8c%e5%85%9a%e5%85%9a%e5%86%85%e6%96%97%e4%ba%89%e7%9a%84%e5%9b%9b%e4%b8%aa%e9%98%b6%e6%ae%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二失败的驯服特朗普&#34;&gt;&#xA;  二、失败的“驯服特朗普”&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%a4%b1%e8%b4%a5%e7%9a%84%e9%a9%af%e6%9c%8d%e7%89%b9%e6%9c%97%e6%99%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三共和党的特朗普化&#34;&gt;&#xA;  三、共和党的“特朗普化”&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e5%85%b1%e5%92%8c%e5%85%9a%e7%9a%84%e7%89%b9%e6%9c%97%e6%99%ae%e5%8c%96&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第八章-民主党的路线之争&#34;&gt;&#xA;  第八章 民主党的路线之争&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e5%85%ab%e7%ab%a0-%e6%b0%91%e4%b8%bb%e5%85%9a%e7%9a%84%e8%b7%af%e7%ba%bf%e4%b9%8b%e4%ba%89&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一民主党的传统派系格局及其政治主张&#34;&gt;&#xA;  一、民主党的传统派系格局及其政治主张&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e6%b0%91%e4%b8%bb%e5%85%9a%e7%9a%84%e4%bc%a0%e7%bb%9f%e6%b4%be%e7%b3%bb%e6%a0%bc%e5%b1%80%e5%8f%8a%e5%85%b6%e6%94%bf%e6%b2%bb%e4%b8%bb%e5%bc%a0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二桑德斯与激进派&#34;&gt;&#xA;  二、桑德斯与激进派&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e6%a1%91%e5%be%b7%e6%96%af%e4%b8%8e%e6%bf%80%e8%bf%9b%e6%b4%be&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三激进派崛起与民主党现实政治格局的变化&#34;&gt;&#xA;  三、激进派崛起与民主党现实政治格局的变化&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e6%bf%80%e8%bf%9b%e6%b4%be%e5%b4%9b%e8%b5%b7%e4%b8%8e%e6%b0%91%e4%b8%bb%e5%85%9a%e7%8e%b0%e5%ae%9e%e6%94%bf%e6%b2%bb%e6%a0%bc%e5%b1%80%e7%9a%84%e5%8f%98%e5%8c%96&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第九章自由派主张进步派标签工人家庭的孩子拜登政府的执政策略&#34;&gt;&#xA;  第九章“自由派主张+进步派标签+工人家庭的孩子”：拜登政府的执政策略&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b9%9d%e7%ab%a0%e8%87%aa%e7%94%b1%e6%b4%be%e4%b8%bb%e5%bc%a0%e8%bf%9b%e6%ad%a5%e6%b4%be%e6%a0%87%e7%ad%be%e5%b7%a5%e4%ba%ba%e5%ae%b6%e5%ba%ad%e7%9a%84%e5%ad%a9%e5%ad%90%e6%8b%9c%e7%99%bb%e6%94%bf%e5%ba%9c%e7%9a%84%e6%89%a7%e6%94%bf%e7%ad%96%e7%95%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一2020年民主党初选与自由派主张进步派标签竞选策略的诞生&#34;&gt;&#xA;  一、2020年民主党初选与“自由派主张+进步派标签”竞选策略的诞生&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%802020%e5%b9%b4%e6%b0%91%e4%b8%bb%e5%85%9a%e5%88%9d%e9%80%89%e4%b8%8e%e8%87%aa%e7%94%b1%e6%b4%be%e4%b8%bb%e5%bc%a0%e8%bf%9b%e6%ad%a5%e6%b4%be%e6%a0%87%e7%ad%be%e7%ab%9e%e9%80%89%e7%ad%96%e7%95%a5%e7%9a%84%e8%af%9e%e7%94%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二拜登执政后对自由派主张进步派标签策略的进一步运用&#34;&gt;&#xA;  二、拜登执政后对“自由派主张+进步派标签”策略的进一步运用&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e6%8b%9c%e7%99%bb%e6%89%a7%e6%94%bf%e5%90%8e%e5%af%b9%e8%87%aa%e7%94%b1%e6%b4%be%e4%b8%bb%e5%bc%a0%e8%bf%9b%e6%ad%a5%e6%b4%be%e6%a0%87%e7%ad%be%e7%ad%96%e7%95%a5%e7%9a%84%e8%bf%9b%e4%b8%80%e6%ad%a5%e8%bf%90%e7%94%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三宾夕法尼亚州工人家庭的孩子拜登政府的贸易政策与社会议题&#34;&gt;&#xA;  三、“宾夕法尼亚州工人家庭的孩子”：拜登政府的贸易政策与社会议题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e5%ae%be%e5%a4%95%e6%b3%95%e5%b0%bc%e4%ba%9a%e5%b7%9e%e5%b7%a5%e4%ba%ba%e5%ae%b6%e5%ba%ad%e7%9a%84%e5%ad%a9%e5%ad%90%e6%8b%9c%e7%99%bb%e6%94%bf%e5%ba%9c%e7%9a%84%e8%b4%b8%e6%98%93%e6%94%bf%e7%ad%96%e4%b8%8e%e7%a4%be%e4%bc%9a%e8%ae%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;后记&#34;&gt;&#xA;  后记&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%90%8e%e8%ae%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>美国困局</title>
      <link>/zh/zh/post/books/%E7%BE%8E%E5%9B%BD%E5%9B%B0%E5%B1%80/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/books/%E7%BE%8E%E5%9B%BD%E5%9B%B0%E5%B1%80/</guid>
      <description>&lt;h1 id=&#34;美国困局&#34;&gt;&#xA;  美国困局&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%be%8e%e5%9b%bd%e5%9b%b0%e5%b1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/36946631/&#34;&gt;美国困局&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;导论-从美国内政视角研究美国变局&#34;&gt;&#xA;  导论 从美国内政视角研究美国变局&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%af%bc%e8%ae%ba-%e4%bb%8e%e7%be%8e%e5%9b%bd%e5%86%85%e6%94%bf%e8%a7%86%e8%a7%92%e7%a0%94%e7%a9%b6%e7%be%8e%e5%9b%bd%e5%8f%98%e5%b1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一缘起&#34;&gt;&#xA;  一、缘起&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e7%bc%98%e8%b5%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二-理解特朗普和新右翼的一些误区&#34;&gt;&#xA;  二、 理解特朗普和“新右翼”的一些误区&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c-%e7%90%86%e8%a7%a3%e7%89%b9%e6%9c%97%e6%99%ae%e5%92%8c%e6%96%b0%e5%8f%b3%e7%bf%bc%e7%9a%84%e4%b8%80%e4%ba%9b%e8%af%af%e5%8c%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三本书框架&#34;&gt;&#xA;  三、本书框架&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e6%9c%ac%e4%b9%a6%e6%a1%86%e6%9e%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第一章-新右翼是什么&#34;&gt;&#xA;  第一章 “新右翼”是什么&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%80%e7%ab%a0-%e6%96%b0%e5%8f%b3%e7%bf%bc%e6%98%af%e4%bb%80%e4%b9%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一政治而非经济新右翼带来的欧美政治议题&#34;&gt;&#xA;  一、政治而非经济：“新右翼”带来的欧美政治议题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e6%94%bf%e6%b2%bb%e8%80%8c%e9%9d%9e%e7%bb%8f%e6%b5%8e%e6%96%b0%e5%8f%b3%e7%bf%bc%e5%b8%a6%e6%9d%a5%e7%9a%84%e6%ac%a7%e7%be%8e%e6%94%bf%e6%b2%bb%e8%ae%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二公权与私权新右翼的核心诉求&#34;&gt;&#xA;  二、公权与私权：“新右翼”的核心诉求&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%85%ac%e6%9d%83%e4%b8%8e%e7%a7%81%e6%9d%83%e6%96%b0%e5%8f%b3%e7%bf%bc%e7%9a%84%e6%a0%b8%e5%bf%83%e8%af%89%e6%b1%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三西方民粹主义的现实面向&#34;&gt;&#xA;  三、西方民粹主义的现实面向&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e8%a5%bf%e6%96%b9%e6%b0%91%e7%b2%b9%e4%b8%bb%e4%b9%89%e7%9a%84%e7%8e%b0%e5%ae%9e%e9%9d%a2%e5%90%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第二章奥巴马选民vs特朗普选民关键性选举与美国政党选民联盟重组&#34;&gt;&#xA;  第二章“奥巴马选民”vs“特朗普选民”：关键性选举与美国政党选民联盟重组&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%ba%8c%e7%ab%a0%e5%a5%a5%e5%b7%b4%e9%a9%ac%e9%80%89%e6%b0%91vs%e7%89%b9%e6%9c%97%e6%99%ae%e9%80%89%e6%b0%91%e5%85%b3%e9%94%ae%e6%80%a7%e9%80%89%e4%b8%be%e4%b8%8e%e7%be%8e%e5%9b%bd%e6%94%bf%e5%85%9a%e9%80%89%e6%b0%91%e8%81%94%e7%9b%9f%e9%87%8d%e7%bb%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一变局奥巴马选民联盟浮现&#34;&gt;&#xA;  一、变局：“奥巴马选民”联盟浮现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e5%8f%98%e5%b1%80%e5%a5%a5%e5%b7%b4%e9%a9%ac%e9%80%89%e6%b0%91%e8%81%94%e7%9b%9f%e6%b5%ae%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二共和党的两个应对思路&#34;&gt;&#xA;  二、共和党的两个应对思路&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%85%b1%e5%92%8c%e5%85%9a%e7%9a%84%e4%b8%a4%e4%b8%aa%e5%ba%94%e5%af%b9%e6%80%9d%e8%b7%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三特朗普选民联盟颠覆性的新议题&#34;&gt;&#xA;  三、“特朗普选民”联盟：颠覆性的新议题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e7%89%b9%e6%9c%97%e6%99%ae%e9%80%89%e6%b0%91%e8%81%94%e7%9b%9f%e9%a2%a0%e8%a6%86%e6%80%a7%e7%9a%84%e6%96%b0%e8%ae%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四2020年大选例外的大选与稳固的政党选民联盟&#34;&gt;&#xA;  四、2020年大选：例外的大选与稳固的政党选民联盟&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b2020%e5%b9%b4%e5%a4%a7%e9%80%89%e4%be%8b%e5%a4%96%e7%9a%84%e5%a4%a7%e9%80%89%e4%b8%8e%e7%a8%b3%e5%9b%ba%e7%9a%84%e6%94%bf%e5%85%9a%e9%80%89%e6%b0%91%e8%81%94%e7%9b%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;五小结与前瞻&#34;&gt;&#xA;  五、小结与前瞻&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%94%e5%b0%8f%e7%bb%93%e4%b8%8e%e5%89%8d%e7%9e%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第三章-人权优先还是主权优先美国政治中的非法移民议题&#34;&gt;&#xA;  第三章 “人权优先”还是“主权优先”？：美国政治中的非法移民议题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%89%e7%ab%a0-%e4%ba%ba%e6%9d%83%e4%bc%98%e5%85%88%e8%bf%98%e6%98%af%e4%b8%bb%e6%9d%83%e4%bc%98%e5%85%88%e7%be%8e%e5%9b%bd%e6%94%bf%e6%b2%bb%e4%b8%ad%e7%9a%84%e9%9d%9e%e6%b3%95%e7%a7%bb%e6%b0%91%e8%ae%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一特朗普与民主党的政策逻辑差异&#34;&gt;&#xA;  一、特朗普与民主党的政策逻辑差异&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e7%89%b9%e6%9c%97%e6%99%ae%e4%b8%8e%e6%b0%91%e4%b8%bb%e5%85%9a%e7%9a%84%e6%94%bf%e7%ad%96%e9%80%bb%e8%be%91%e5%b7%ae%e5%bc%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二地域与阶层白人群体的分裂&#34;&gt;&#xA;  二、地域与阶层：白人群体的分裂&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%9c%b0%e5%9f%9f%e4%b8%8e%e9%98%b6%e5%b1%82%e7%99%bd%e4%ba%ba%e7%be%a4%e4%bd%93%e7%9a%84%e5%88%86%e8%a3%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三反常的亚裔&#34;&gt;&#xA;  三、“反常”的亚裔&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e5%8f%8d%e5%b8%b8%e7%9a%84%e4%ba%9a%e8%a3%94&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四拉美裔美国人未必欢迎非法移民老乡&#34;&gt;&#xA;  四、拉美裔美国人未必欢迎非法移民老乡&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b%e6%8b%89%e7%be%8e%e8%a3%94%e7%be%8e%e5%9b%bd%e4%ba%ba%e6%9c%aa%e5%bf%85%e6%ac%a2%e8%bf%8e%e9%9d%9e%e6%b3%95%e7%a7%bb%e6%b0%91%e8%80%81%e4%b9%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;五小结&#34;&gt;&#xA;  五、小结&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%94%e5%b0%8f%e7%bb%93&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第四章-从和稀泥到旗帜鲜明美国政治营销模式变迁&#34;&gt;&#xA;  第四章 从“和稀泥”到“旗帜鲜明”：美国政治营销模式变迁&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e5%9b%9b%e7%ab%a0-%e4%bb%8e%e5%92%8c%e7%a8%80%e6%b3%a5%e5%88%b0%e6%97%97%e5%b8%9c%e9%b2%9c%e6%98%8e%e7%be%8e%e5%9b%bd%e6%94%bf%e6%b2%bb%e8%90%a5%e9%94%80%e6%a8%a1%e5%bc%8f%e5%8f%98%e8%bf%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一政治风格个人特质与外在环境的共同产物&#34;&gt;&#xA;  一、政治风格：个人特质与外在环境的共同产物&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e6%94%bf%e6%b2%bb%e9%a3%8e%e6%a0%bc%e4%b8%aa%e4%ba%ba%e7%89%b9%e8%b4%a8%e4%b8%8e%e5%a4%96%e5%9c%a8%e7%8e%af%e5%a2%83%e7%9a%84%e5%85%b1%e5%90%8c%e4%ba%a7%e7%89%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二反非法移民特朗普vs克鲁兹&#34;&gt;&#xA;  二、反非法移民：特朗普vs克鲁兹&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%8f%8d%e9%9d%9e%e6%b3%95%e7%a7%bb%e6%b0%91%e7%89%b9%e6%9c%97%e6%99%aevs%e5%85%8b%e9%b2%81%e5%85%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三love-trumps-hate特朗普vs希拉里&#34;&gt;&#xA;  三、“Love Trumps Hate”：特朗普vs希拉里&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89love-trumps-hate%e7%89%b9%e6%9c%97%e6%99%aevs%e5%b8%8c%e6%8b%89%e9%87%8c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四变革时代需要旗帜鲜明的政治风格&#34;&gt;&#xA;  四、变革时代需要“旗帜鲜明”的政治风格&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b%e5%8f%98%e9%9d%a9%e6%97%b6%e4%bb%a3%e9%9c%80%e8%a6%81%e6%97%97%e5%b8%9c%e9%b2%9c%e6%98%8e%e7%9a%84%e6%94%bf%e6%b2%bb%e9%a3%8e%e6%a0%bc&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;五想当总统首先要身体好零售政治在美国的复兴&#34;&gt;&#xA;  五、“想当总统首先要身体好”：零售政治在美国的复兴&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%94%e6%83%b3%e5%bd%93%e6%80%bb%e7%bb%9f%e9%a6%96%e5%85%88%e8%a6%81%e8%ba%ab%e4%bd%93%e5%a5%bd%e9%9b%b6%e5%94%ae%e6%94%bf%e6%b2%bb%e5%9c%a8%e7%be%8e%e5%9b%bd%e7%9a%84%e5%a4%8d%e5%85%b4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第五章-新右翼执政方略一特朗普减税计划&#34;&gt;&#xA;  第五章 “新右翼”执政方略（一）：特朗普“减税”计划&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%ba%94%e7%ab%a0-%e6%96%b0%e5%8f%b3%e7%bf%bc%e6%89%a7%e6%94%bf%e6%96%b9%e7%95%a5%e4%b8%80%e7%89%b9%e6%9c%97%e6%99%ae%e5%87%8f%e7%a8%8e%e8%ae%a1%e5%88%92&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一经济政策的政治分析&#34;&gt;&#xA;  一、经济政策的政治分析&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e7%bb%8f%e6%b5%8e%e6%94%bf%e7%ad%96%e7%9a%84%e6%94%bf%e6%b2%bb%e5%88%86%e6%9e%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二-为什么富人反对给富人减税&#34;&gt;&#xA;  二、 为什么富人反对给富人“减税”？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c-%e4%b8%ba%e4%bb%80%e4%b9%88%e5%af%8c%e4%ba%ba%e5%8f%8d%e5%af%b9%e7%bb%99%e5%af%8c%e4%ba%ba%e5%87%8f%e7%a8%8e&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三减税计划背后的阶层冲突&#34;&gt;&#xA;  三、“减税”计划背后的阶层冲突&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e5%87%8f%e7%a8%8e%e8%ae%a1%e5%88%92%e8%83%8c%e5%90%8e%e7%9a%84%e9%98%b6%e5%b1%82%e5%86%b2%e7%aa%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四-一个失败的减税先例茶党-的堪萨斯实验&#34;&gt;&#xA;  四、 一个失败的“减税”先例：“茶党” 的堪萨斯实验&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b-%e4%b8%80%e4%b8%aa%e5%a4%b1%e8%b4%a5%e7%9a%84%e5%87%8f%e7%a8%8e%e5%85%88%e4%be%8b%e8%8c%b6%e5%85%9a-%e7%9a%84%e5%a0%aa%e8%90%a8%e6%96%af%e5%ae%9e%e9%aa%8c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;五特朗普减税计划的配套举措&#34;&gt;&#xA;  五、特朗普“减税”计划的配套举措&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%94%e7%89%b9%e6%9c%97%e6%99%ae%e5%87%8f%e7%a8%8e%e8%ae%a1%e5%88%92%e7%9a%84%e9%85%8d%e5%a5%97%e4%b8%be%e6%8e%aa&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第六章新右翼执政方略二其他举措&#34;&gt;&#xA;  第六章“新右翼”执政方略（二）：其他举措&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e5%85%ad%e7%ab%a0%e6%96%b0%e5%8f%b3%e7%bf%bc%e6%89%a7%e6%94%bf%e6%96%b9%e7%95%a5%e4%ba%8c%e5%85%b6%e4%bb%96%e4%b8%be%e6%8e%aa&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一能源与气候政策&#34;&gt;&#xA;  一、能源与气候政策&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e8%83%bd%e6%ba%90%e4%b8%8e%e6%b0%94%e5%80%99%e6%94%bf%e7%ad%96&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二产业政策以威斯康星州富士康项目为例&#34;&gt;&#xA;  二、产业政策：以威斯康星州富士康项目为例&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e4%ba%a7%e4%b8%9a%e6%94%bf%e7%ad%96%e4%bb%a5%e5%a8%81%e6%96%af%e5%ba%b7%e6%98%9f%e5%b7%9e%e5%af%8c%e5%a3%ab%e5%ba%b7%e9%a1%b9%e7%9b%ae%e4%b8%ba%e4%be%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三贸易政策&#34;&gt;&#xA;  三、贸易政策&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e8%b4%b8%e6%98%93%e6%94%bf%e7%ad%96&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四医保改革&#34;&gt;&#xA;  四、医保改革&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b%e5%8c%bb%e4%bf%9d%e6%94%b9%e9%9d%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第七章-从驯服特朗普到被特朗普驯服共和党的党内斗争&#34;&gt;&#xA;  第七章 从“驯服特朗普”到“被特朗普驯服”：共和党的党内斗争&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%83%e7%ab%a0-%e4%bb%8e%e9%a9%af%e6%9c%8d%e7%89%b9%e6%9c%97%e6%99%ae%e5%88%b0%e8%a2%ab%e7%89%b9%e6%9c%97%e6%99%ae%e9%a9%af%e6%9c%8d%e5%85%b1%e5%92%8c%e5%85%9a%e7%9a%84%e5%85%9a%e5%86%85%e6%96%97%e4%ba%89&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一从2016年大选至今共和党党内斗争的四个阶段&#34;&gt;&#xA;  一、从2016年大选至今共和党党内斗争的四个阶段&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e4%bb%8e2016%e5%b9%b4%e5%a4%a7%e9%80%89%e8%87%b3%e4%bb%8a%e5%85%b1%e5%92%8c%e5%85%9a%e5%85%9a%e5%86%85%e6%96%97%e4%ba%89%e7%9a%84%e5%9b%9b%e4%b8%aa%e9%98%b6%e6%ae%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二失败的驯服特朗普&#34;&gt;&#xA;  二、失败的“驯服特朗普”&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%a4%b1%e8%b4%a5%e7%9a%84%e9%a9%af%e6%9c%8d%e7%89%b9%e6%9c%97%e6%99%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三共和党的特朗普化&#34;&gt;&#xA;  三、共和党的“特朗普化”&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e5%85%b1%e5%92%8c%e5%85%9a%e7%9a%84%e7%89%b9%e6%9c%97%e6%99%ae%e5%8c%96&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第八章-民主党的路线之争&#34;&gt;&#xA;  第八章 民主党的路线之争&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e5%85%ab%e7%ab%a0-%e6%b0%91%e4%b8%bb%e5%85%9a%e7%9a%84%e8%b7%af%e7%ba%bf%e4%b9%8b%e4%ba%89&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一民主党的传统派系格局及其政治主张&#34;&gt;&#xA;  一、民主党的传统派系格局及其政治主张&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e6%b0%91%e4%b8%bb%e5%85%9a%e7%9a%84%e4%bc%a0%e7%bb%9f%e6%b4%be%e7%b3%bb%e6%a0%bc%e5%b1%80%e5%8f%8a%e5%85%b6%e6%94%bf%e6%b2%bb%e4%b8%bb%e5%bc%a0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二桑德斯与激进派&#34;&gt;&#xA;  二、桑德斯与激进派&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e6%a1%91%e5%be%b7%e6%96%af%e4%b8%8e%e6%bf%80%e8%bf%9b%e6%b4%be&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三激进派崛起与民主党现实政治格局的变化&#34;&gt;&#xA;  三、激进派崛起与民主党现实政治格局的变化&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e6%bf%80%e8%bf%9b%e6%b4%be%e5%b4%9b%e8%b5%b7%e4%b8%8e%e6%b0%91%e4%b8%bb%e5%85%9a%e7%8e%b0%e5%ae%9e%e6%94%bf%e6%b2%bb%e6%a0%bc%e5%b1%80%e7%9a%84%e5%8f%98%e5%8c%96&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第九章自由派主张进步派标签工人家庭的孩子拜登政府的执政策略&#34;&gt;&#xA;  第九章“自由派主张+进步派标签+工人家庭的孩子”：拜登政府的执政策略&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b9%9d%e7%ab%a0%e8%87%aa%e7%94%b1%e6%b4%be%e4%b8%bb%e5%bc%a0%e8%bf%9b%e6%ad%a5%e6%b4%be%e6%a0%87%e7%ad%be%e5%b7%a5%e4%ba%ba%e5%ae%b6%e5%ba%ad%e7%9a%84%e5%ad%a9%e5%ad%90%e6%8b%9c%e7%99%bb%e6%94%bf%e5%ba%9c%e7%9a%84%e6%89%a7%e6%94%bf%e7%ad%96%e7%95%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一2020年民主党初选与自由派主张进步派标签竞选策略的诞生&#34;&gt;&#xA;  一、2020年民主党初选与“自由派主张+进步派标签”竞选策略的诞生&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%802020%e5%b9%b4%e6%b0%91%e4%b8%bb%e5%85%9a%e5%88%9d%e9%80%89%e4%b8%8e%e8%87%aa%e7%94%b1%e6%b4%be%e4%b8%bb%e5%bc%a0%e8%bf%9b%e6%ad%a5%e6%b4%be%e6%a0%87%e7%ad%be%e7%ab%9e%e9%80%89%e7%ad%96%e7%95%a5%e7%9a%84%e8%af%9e%e7%94%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二拜登执政后对自由派主张进步派标签策略的进一步运用&#34;&gt;&#xA;  二、拜登执政后对“自由派主张+进步派标签”策略的进一步运用&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e6%8b%9c%e7%99%bb%e6%89%a7%e6%94%bf%e5%90%8e%e5%af%b9%e8%87%aa%e7%94%b1%e6%b4%be%e4%b8%bb%e5%bc%a0%e8%bf%9b%e6%ad%a5%e6%b4%be%e6%a0%87%e7%ad%be%e7%ad%96%e7%95%a5%e7%9a%84%e8%bf%9b%e4%b8%80%e6%ad%a5%e8%bf%90%e7%94%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三宾夕法尼亚州工人家庭的孩子拜登政府的贸易政策与社会议题&#34;&gt;&#xA;  三、“宾夕法尼亚州工人家庭的孩子”：拜登政府的贸易政策与社会议题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e5%ae%be%e5%a4%95%e6%b3%95%e5%b0%bc%e4%ba%9a%e5%b7%9e%e5%b7%a5%e4%ba%ba%e5%ae%b6%e5%ba%ad%e7%9a%84%e5%ad%a9%e5%ad%90%e6%8b%9c%e7%99%bb%e6%94%bf%e5%ba%9c%e7%9a%84%e8%b4%b8%e6%98%93%e6%94%bf%e7%ad%96%e4%b8%8e%e7%a4%be%e4%bc%9a%e8%ae%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;后记&#34;&gt;&#xA;  后记&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%90%8e%e8%ae%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>深入浅出HTTPS：从原理到实战</title>
      <link>/zh/post/books/computer-science/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAhttps%E4%BB%8E%E5%8E%9F%E7%90%86%E5%88%B0%E5%AE%9E%E6%88%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/books/computer-science/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAhttps%E4%BB%8E%E5%8E%9F%E7%90%86%E5%88%B0%E5%AE%9E%E6%88%98/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;2015年百度搜索引擎完成其历史上最大的系统性升级——全面由HTTP升级到HTTPS&lt;/li&gt;&#xA;&lt;li&gt;2016年苹果公告要求App Store中的所有应用在2017年1月1日之后都必须使用HTTPS加密连接&lt;/li&gt;&#xA;&lt;li&gt;2017年1月9日微信上线小程序后，要求开发者的所有服务端请求必须为HTTPS&lt;/li&gt;&#xA;&lt;li&gt;同时Google已调整搜索引擎算法，让采用HTTPS的网站在搜索结果中排名更靠前，并宣布从2018年7月开始所有的HTTP网站将标记为“不安全”&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第1章-http介绍&#34;&gt;&#xA;  第1章 HTTP介绍&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-http%e4%bb%8b%e7%bb%8d&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;HTTP的特点&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;客户端/服务器模型&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;客户端和服务器是否正确传输依赖于TCP这个协议。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;HTTP是无状态的&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;所谓的无状态就是每次请求完成后，不会在客户端和服务器上保存任何的信息，对于客户端和服务器来说，根本不知道上一次请求的信息是什么，甚至不知道本次连接的对端是不是上次连接的那一端，它的生命周期随着TCP/IP连接的关闭结束了&lt;/li&gt;&#xA;&lt;li&gt;无状态的设计已经不能适应新的情况，为了保持状态，出现了Cookie和Session技术，但是Cookie技术设计得非常不严谨，引发了很多安全问题。&lt;/li&gt;&#xA;&lt;li&gt;介绍下Cookie是如何进行会话保持的，客户端第一次请求完成后，服务器会发送Cookie信息到客户端的计算机上，客户端下次请求的时候会携带该Cookie信息，这样服务器就知道该用户就是上一次请求的用户了。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;HTTP是跨平台的&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过上面的讲解，读者知道HTTP就是具备一定规则的纯文本信息，任何开发语言都可以实现HTTP或者基于HTTP进行开发，开发出来的软件也很容易移植，受系统环境的影响非常少。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;HTTP用途很广泛&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;13-网络模型&#34;&gt;&#xA;  1.3 网络模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#13-%e7%bd%91%e7%bb%9c%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;HTTP是应用层协议，应用层协议是TCP/IP的一部分&lt;/li&gt;&#xA;&lt;li&gt;OSI模型是一个通用的网络协议标准，但实际使用的标准却是TCP/IP标准，TCP/IP包含的不仅仅是TCP或者IP，它是一个协议族，网络应用开发都需要掌握TCP/IP。&lt;/li&gt;&#xA;&lt;li&gt;TCP/IP有两个最大的特点，分别是分层和封包/拆包机制&lt;/li&gt;&#xA;&lt;li&gt;每一层和它的上下层都有标准的接口规范，每一层无须关心上下层是如何工作的，它只关心上下层是否正确基于规范实现了接口&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;应用层&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果没有应用层，那么网络中传输的数据没有任何意义，因为人类无法理解数据的含义。而有了应用层，软件就能解释应用层数据的含义。在Web应用中，有了HTTP和HTML标准，浏览器才能呈现对用户有意义的内容。&lt;/li&gt;&#xA;&lt;li&gt;应用层协议有很多，比如HTTP、FTP、邮件协议，开发者开发的软件一般都是应用层协议软件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;传输层&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;网络层&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;网络层主要是IP这个协议，客户端和服务器传输的时候，会经过很多节点，IP就是选择一条最优的路径。每个终端上都有一张路由表，路由表负责将数据传输到下一个节点，下一个节点再传输到下下个节点，最终到达目的地址。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;链路层&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;应用层、传输层、网络层都是虚拟的，只有链路层才是实体设备，包括光纤、网卡等设备。基于这些设备，数据最终才能到达终端。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;接下来简单描述封包/拆包机制，对于客户端请求来说，传输层接收到应用层消息后，在HTTP数据包前面增加TCP包头，然后发送给网络层；网络层在TCP数据包前面加上IP包头发送给链路层；链路层在IP数据包前面加上以太网包头；最终服务器接收到完整的数据包。&lt;/li&gt;&#xA;&lt;li&gt;然后服务器进行拆包：首先在网络层去除链路层包头；在传输层去除IP包头；在应用层去除TCP包头；最终得到完整的HTTP应用层数据。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;14-协议安全分析&#34;&gt;&#xA;  1.4 协议安全分析&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#14-%e5%8d%8f%e8%ae%ae%e5%ae%89%e5%85%a8%e5%88%86%e6%9e%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;协议不安全的根本原因&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;数据没有加密&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;无法验证身份&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;数据易篡改&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第2章-密码学&#34;&gt;&#xA;  第2章 密码学&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-%e5%af%86%e7%a0%81%e5%ad%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;21-对于密码学的认知&#34;&gt;&#xA;  2.1 对于密码学的认知&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#21-%e5%af%b9%e4%ba%8e%e5%af%86%e7%a0%81%e5%ad%a6%e7%9a%84%e8%ae%a4%e7%9f%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;OpenSSL&#xA;&lt;ul&gt;&#xA;&lt;li&gt;OpenSSL命令行功能非常强大，有很多的子命令和参数，如果不理解密码学算法，根本无法理解子命令和参数的含义，这是难学习的根本原因，也说明学习OpenSSL之前必须先掌握密码学算法。&lt;/li&gt;&#xA;&lt;li&gt;不同版本的OpenSSL命令行工具在使用的时候有一些差别，同样一条命令，读者会发现在特定版本下可能无法正确运行。&lt;/li&gt;&#xA;&lt;li&gt;OpenSSL命令行的帮助手册和文档描写得不是很通俗，很难进行系统的学习。&lt;/li&gt;&#xA;&lt;li&gt;完成同样一个操作，OpenSSL命令行有许多方法实现，这可能会干扰读者的学习。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;22-随机数&#34;&gt;&#xA;  2.2 随机数&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#22-%e9%9a%8f%e6%9c%ba%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;而对于PRNG来说，内部状态的数值来自于模拟的数值，称为种子（seed）。随机数生成器每次生成随机数的时候，内部状态的值都会变化，这样才能产生不一样的随机数，如果每次熵和种子是一样的，生成的随机数也是相同的，所以熵和种子对于随机数生成器非常重要。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;221-随机数的类型&#34;&gt;&#xA;  2.2.1 随机数的类型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#221-%e9%9a%8f%e6%9c%ba%e6%95%b0%e7%9a%84%e7%b1%bb%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;真正的随机数生成器&#xA;&lt;ul&gt;&#xA;&lt;li&gt;需要从物理设备获取&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;伪随机数生成器&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过算法获取&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;密码学伪随机数生成器&#xA;&lt;ul&gt;&#xA;&lt;li&gt;用于密码学&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;随机数的特性&#xA;&lt;ul&gt;&#xA;&lt;li&gt;效率&lt;/li&gt;&#xA;&lt;li&gt;随机性&lt;/li&gt;&#xA;&lt;li&gt;不可预测性&lt;/li&gt;&#xA;&lt;li&gt;不可重现性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;222-随机数的工作原理&#34;&gt;&#xA;  2.2.2 随机数的工作原理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#222-%e9%9a%8f%e6%9c%ba%e6%95%b0%e7%9a%84%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;223-常见的随机数生成器&#34;&gt;&#xA;  2.2.3 常见的随机数生成器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#223-%e5%b8%b8%e8%a7%81%e7%9a%84%e9%9a%8f%e6%9c%ba%e6%95%b0%e7%94%9f%e6%88%90%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;224-密码学算法中的随机数&#34;&gt;&#xA;  2.2.4 密码学算法中的随机数&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#224-%e5%af%86%e7%a0%81%e5%ad%a6%e7%ae%97%e6%b3%95%e4%b8%ad%e7%9a%84%e9%9a%8f%e6%9c%ba%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;23-hash算法&#34;&gt;&#xA;  2.3 Hash算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#23-hash%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;231-加密基元&#34;&gt;&#xA;  2.3.1 加密基元&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#231-%e5%8a%a0%e5%af%86%e5%9f%ba%e5%85%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;加密基元就是一些基础的密码学算法，通过它们才能够构建更多的密码学算法、协议、应用程序&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;232-hash算法和密码学hash算法&#34;&gt;&#xA;  2.3.2 Hash算法和密码学Hash算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#232-hash%e7%ae%97%e6%b3%95%e5%92%8c%e5%af%86%e7%a0%81%e5%ad%a6hash%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;233-密码学hash算法的特性&#34;&gt;&#xA;  2.3.3 密码学Hash算法的特性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#233-%e5%af%86%e7%a0%81%e5%ad%a6hash%e7%ae%97%e6%b3%95%e7%9a%84%e7%89%b9%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;由于Hash算法有很多功能，所以Hash算法有多种称呼，比如&lt;strong&gt;摘要算法（Message Digest Algorithms）&lt;/strong&gt;、&lt;strong&gt;单向散列函数（Cryptographic One-way Hash Functions）&lt;/strong&gt;。输出值也有多种称呼，比如&lt;strong&gt;摘要值&lt;/strong&gt;、&lt;strong&gt;散列&lt;/strong&gt;、&lt;strong&gt;指纹&lt;/strong&gt;。读者看到这些名词的时候，都可以理解为Hash算法&lt;/li&gt;&#xA;&lt;li&gt;密码学Hash算法的主要特性&#xA;&lt;ul&gt;&#xA;&lt;li&gt;相同的消息总是能得到同样的摘要值，特定的Hash算法，不管消息长度是多少，最终的摘要值&lt;strong&gt;长度是相同的&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;不管多长的消息，&lt;strong&gt;Hash运算非常快速&lt;/strong&gt;，这是非常重要的特性。&lt;/li&gt;&#xA;&lt;li&gt;通过摘要值很难逆向计算出原始消息，Hash算法具备单向性，摘要值是&lt;strong&gt;不可逆&lt;/strong&gt;的，这也是非常重要的特性。为了逆向计算出原始消息，唯一的方法就是采用暴力攻击、字典攻击、彩虹表，对不同的消息组合进行迭代运算，运算的结果如果匹配该消息的摘要值，表示该Hash算法不应该用于密码学。&lt;/li&gt;&#xA;&lt;li&gt;原始消息一旦修改，即使是&lt;strong&gt;很轻微的修改，最终的摘要值也会产生变化&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;很难找出两个不同的消息，并且它们的摘要值是相同的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;234-hash算法的用途&#34;&gt;&#xA;  2.3.4 Hash算法的用途&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#234-hash%e7%ae%97%e6%b3%95%e7%9a%84%e7%94%a8%e9%80%94&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;文件比较&lt;/li&gt;&#xA;&lt;li&gt;身份校验&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;235-什么是安全的密码学hash算法&#34;&gt;&#xA;  2.3.5 什么是安全的密码学Hash算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#235-%e4%bb%80%e4%b9%88%e6%98%af%e5%ae%89%e5%85%a8%e7%9a%84%e5%af%86%e7%a0%81%e5%ad%a6hash%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;强抗碰撞性（Collision Resistance）&lt;/li&gt;&#xA;&lt;li&gt;弱抗碰撞性（Second pre-image Resistance）&lt;/li&gt;&#xA;&lt;li&gt;单向性（Pre-image Resistance）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;236-密码学hash算法的分类&#34;&gt;&#xA;  2.3.6 密码学Hash算法的分类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#236-%e5%af%86%e7%a0%81%e5%ad%a6hash%e7%ae%97%e6%b3%95%e7%9a%84%e5%88%86%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;MD5&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;MD5是一种比较常用的Hash算法，摘要值长度固定是128比特，MD5算法目前被证明已经不安全了，MD5算法违反了强抗碰撞性原则，但是还没有破坏单一性原则。&lt;/li&gt;&#xA;&lt;li&gt;理论上经过2^80次运算就能产生碰撞，但目前最快只要经过2^63次运算就能破坏强抗碰撞性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;SHA&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;SHA（Secure Hash Algorithms）算法是美国国家标准与技术研究院（NIST）指定的算法，SHA算法不是一个算法，而是一组算法，主要分为三类算法。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;SHA-1&lt;/li&gt;&#xA;&lt;li&gt;SHA-2&lt;/li&gt;&#xA;&lt;li&gt;SHA-3&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;24-对称加密算法&#34;&gt;&#xA;  2.4 对称加密算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#24-%e5%af%b9%e7%a7%b0%e5%8a%a0%e5%af%86%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;建议使用&lt;strong&gt;AES算法&lt;/strong&gt;，该算法是对称加密算法的标准算法&#xA;&lt;ul&gt;&#xA;&lt;li&gt;美国国家标准与技术研究院（National Institute of Standards and Technology, NIST）对众多的对称加密算法进行了考核，从安全性和效率进行了多方面评测，最终选取Rijndael算法作为对称加密算法的标准。以Rijndael算法为原型，创建了AES（Advanced Encryption Standard）算法，AES就是最终的对称加密算法标准。Rijndael算法和AES算法略微不同，但在理解的时候可以认为是相同的算法。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;流密码算法&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;块密码算法&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;迭代模式&#xA;&lt;ul&gt;&#xA;&lt;li&gt;**ECB模式（Electronic Codebook）**是最简单的一种迭代模式，这种迭代模式是存在安全问题的，一般不建议使用。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ECB模式（Electronic Codebook）是最简单的一种迭代模式，这种迭代模式是存在安全问题的，一般不建议使用。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;**CBC模式（Cipher Block Chaining）**是比较常见的一种迭代模式，解决了ECB模式的安全问题。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;迭代运算数据块不能并行处理，只有处理完第n个数据块，才能继续处理第n+1个数据块。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;**CTR模式（counter）**在迭代的时候，相当于是一个流密码的运行模式。每次迭代运算的时候要生成一个密钥流（keystream），生成密钥流的方法可以是任意的，但是各个密钥流之间是有关系的，最简单的方式就是密钥流不断递增，所以才叫作计数器模式。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;241-流密码算法&#34;&gt;&#xA;  2.4.1 流密码算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#241-%e6%b5%81%e5%af%86%e7%a0%81%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;242-块密码算法&#34;&gt;&#xA;  2.4.2 块密码算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#242-%e5%9d%97%e5%af%86%e7%a0%81%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;243-填充标准&#34;&gt;&#xA;  2.4.3 填充标准&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#243-%e5%a1%ab%e5%85%85%e6%a0%87%e5%87%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;244-对称加密算法实践&#34;&gt;&#xA;  2.4.4 对称加密算法实践&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#244-%e5%af%b9%e7%a7%b0%e5%8a%a0%e5%af%86%e7%ae%97%e6%b3%95%e5%ae%9e%e8%b7%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;25-消息验证码&#34;&gt;&#xA;  2.5 消息验证码&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#25-%e6%b6%88%e6%81%af%e9%aa%8c%e8%af%81%e7%a0%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;MAC值一般和原始消息一起传输，原始消息可以选择加密，也可以选择不加密，通信双方会以相同的方式生成MAC值，然后进行比较&lt;/li&gt;&#xA;&lt;li&gt;CBC-MAC算法&lt;/li&gt;&#xA;&lt;li&gt;HMAC算法 Hash-based Message Authentication Code&lt;/li&gt;&#xA;&lt;li&gt;加密算法不能提供完整性，加密的同时必须引入MAC算法避免消息被篡改&lt;/li&gt;&#xA;&lt;li&gt;使用者结合对称加密算法和MAC算法，提供机密性和完整性的模式也叫作Authenticated Encryption（AE）加密模式，主要有三种&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Encrypt-and-MAC (E&amp;amp;M)&lt;/li&gt;&#xA;&lt;li&gt;MAC-then-Encrypt (MtE)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这种模式（图2-12）先对消息进行MAC计算，然后将消息和MAC值组合在一起再进行加密，最终的加密值再发送给接收方。在HTTPS中，一般使用这种模式进行处理，比如AES-128-CBC#PKCS7-HMAC-SHA256模式。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Encrypt-then-MAC (EtM)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;不管是Encrypt-and-MAC模式还是MAC-then-Encrypt模式，使用不当的话都会存在安全问题，目前建议使用Encrypt-then-MAC模式。需要强调的是，这三种模式使用者必须分别处理，一旦处理不当，就可能会存在安全风险，那有没有一种方法在底层直接提供加密和MAC运算呢？无须使用者分别处理加密和MAC运算，这就是接下来讲解的AEAD模式。&lt;/li&gt;&#xA;&lt;li&gt;AEAD加密模式&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CCM模式&lt;/li&gt;&#xA;&lt;li&gt;GCM模式&lt;/li&gt;&#xA;&lt;li&gt;ChaCha20-Poly1305&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;251-什么是消息验证码&#34;&gt;&#xA;  2.5.1 什么是消息验证码&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#251-%e4%bb%80%e4%b9%88%e6%98%af%e6%b6%88%e6%81%af%e9%aa%8c%e8%af%81%e7%a0%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在密码学应用中，很多情况下，传递的消息没有必要加密，只要确保消息是完整且没有被篡改即可&lt;/li&gt;&#xA;&lt;li&gt;比如开发者开发了一组天气API，接口返回的数据并没有加密，原因可能如下&#xA;&lt;ul&gt;&#xA;&lt;li&gt;接口的数据并不重要，对隐私性要求不高&lt;/li&gt;&#xA;&lt;li&gt;加密和解密过程很消耗性能&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;所以接口的设计目标仅仅是避免消息被篡改，读者可能说那很简单啊，接口消息通过Hash算法得到一个摘要值，摘要值和接口消息同时作为接口内容返回不就解决问题了吗？&#xA;&lt;ul&gt;&#xA;&lt;li&gt;攻击者对消息进行拦截，同时修改接口消息和消息的摘要值然后发送给接收方，接收方收到消息后，对接口消息计算摘要值，然后与接收到的摘要值进行比较，如果相同，接收方认为消息是完整的。可实际呢？消息虽然是完整的，但被篡改了，或者说消息被伪装了，但对于接收方来说，仅仅通过摘要值无法验证消息是不是篡改了&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;消息验证码算法的特点&#xA;&lt;ul&gt;&#xA;&lt;li&gt;证明消息没有被篡改，这和Hash算法类似。&lt;/li&gt;&#xA;&lt;li&gt;消息是正确的发送者发送的，也就是说消息是经过验证的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;如何确保消息是特定人发送的呢？在通信双方可以维护同一个密钥，只有拥有密钥的通信双方才能生成和验证消息验证码，消息验证码算法需要一个密钥，这和对称加密算法是一样的，通信双方在消息传递之前需要获得同样的密钥。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;252-mac-算法的种类&#34;&gt;&#xA;  2.5.2 MAC 算法的种类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#252-mac-%e7%ae%97%e6%b3%95%e7%9a%84%e7%a7%8d%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CBC-MAC算法&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CBC-MAC算法从块密码算法的CBC分组模式演变而来，简单地说就是最后一个密文分组的值就是MAC值&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;HMAC算法&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在HTTP中应用最多的MAC算法是HMAC算法&lt;/li&gt;&#xA;&lt;li&gt;HMAC（Hash-based Message Authentication Code）算法使用Hash算法作为加密基元，HMAC结合Hash算法有多种变种，比如HMAC-SHA-1、HMAC-SHA256、HMAC-SHA512&lt;/li&gt;&#xA;&lt;li&gt;读者不要误以为HMAC算法就是Hash算法加上一个密钥，HMAC算法只是基于Hash算法的，内部的实现还是相当复杂的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;253-消息验证码算法实践&#34;&gt;&#xA;  2.5.3 消息验证码算法实践&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#253-%e6%b6%88%e6%81%af%e9%aa%8c%e8%af%81%e7%a0%81%e7%ae%97%e6%b3%95%e5%ae%9e%e8%b7%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;254-加密算法不能提供完整性&#34;&gt;&#xA;  2.5.4 加密算法不能提供完整性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#254-%e5%8a%a0%e5%af%86%e7%ae%97%e6%b3%95%e4%b8%8d%e8%83%bd%e6%8f%90%e4%be%9b%e5%ae%8c%e6%95%b4%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;完整性的意思是消息没有被篡改，仅仅加密数据是无法保证数据完整性的，初听起来可能觉得很奇怪。攻击者如果没有密钥就无法破解原文，也就无法篡改，数据必然是完整的。遗憾的是攻击者虽然无法破解数据，但是可以修改密文的部分数据，然后发送给接收者，接收者通过密钥发现能够解密，但是解密出来的值实际上不是原文，消息已经被修改了，也就是说加密操作不能提供完整性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;hash算法可以作为消息验证码吗&#34;&gt;&#xA;  hash算法可以作为消息验证码吗？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#hash%e7%ae%97%e6%b3%95%e5%8f%af%e4%bb%a5%e4%bd%9c%e4%b8%ba%e6%b6%88%e6%81%af%e9%aa%8c%e8%af%81%e7%a0%81%e5%90%97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;是的，哈希算法可以作为消息验证码（MAC）的一部分，但单独使用哈希算法并不能直接构成消息验证码。消息验证码（MAC）是一种用于验证消息&lt;strong&gt;完整性&lt;/strong&gt;和&lt;strong&gt;真实性&lt;/strong&gt;的技术，通常需要结合密钥来确保安全性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>深入浅出HTTPS：从原理到实战</title>
      <link>/zh/zh/post/books/computer-science/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAhttps%E4%BB%8E%E5%8E%9F%E7%90%86%E5%88%B0%E5%AE%9E%E6%88%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/books/computer-science/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAhttps%E4%BB%8E%E5%8E%9F%E7%90%86%E5%88%B0%E5%AE%9E%E6%88%98/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;2015年百度搜索引擎完成其历史上最大的系统性升级——全面由HTTP升级到HTTPS&lt;/li&gt;&#xA;&lt;li&gt;2016年苹果公告要求App Store中的所有应用在2017年1月1日之后都必须使用HTTPS加密连接&lt;/li&gt;&#xA;&lt;li&gt;2017年1月9日微信上线小程序后，要求开发者的所有服务端请求必须为HTTPS&lt;/li&gt;&#xA;&lt;li&gt;同时Google已调整搜索引擎算法，让采用HTTPS的网站在搜索结果中排名更靠前，并宣布从2018年7月开始所有的HTTP网站将标记为“不安全”&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第1章-http介绍&#34;&gt;&#xA;  第1章 HTTP介绍&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-http%e4%bb%8b%e7%bb%8d&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;HTTP的特点&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;客户端/服务器模型&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;客户端和服务器是否正确传输依赖于TCP这个协议。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;HTTP是无状态的&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;所谓的无状态就是每次请求完成后，不会在客户端和服务器上保存任何的信息，对于客户端和服务器来说，根本不知道上一次请求的信息是什么，甚至不知道本次连接的对端是不是上次连接的那一端，它的生命周期随着TCP/IP连接的关闭结束了&lt;/li&gt;&#xA;&lt;li&gt;无状态的设计已经不能适应新的情况，为了保持状态，出现了Cookie和Session技术，但是Cookie技术设计得非常不严谨，引发了很多安全问题。&lt;/li&gt;&#xA;&lt;li&gt;介绍下Cookie是如何进行会话保持的，客户端第一次请求完成后，服务器会发送Cookie信息到客户端的计算机上，客户端下次请求的时候会携带该Cookie信息，这样服务器就知道该用户就是上一次请求的用户了。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;HTTP是跨平台的&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过上面的讲解，读者知道HTTP就是具备一定规则的纯文本信息，任何开发语言都可以实现HTTP或者基于HTTP进行开发，开发出来的软件也很容易移植，受系统环境的影响非常少。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;HTTP用途很广泛&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;13-网络模型&#34;&gt;&#xA;  1.3 网络模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#13-%e7%bd%91%e7%bb%9c%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;HTTP是应用层协议，应用层协议是TCP/IP的一部分&lt;/li&gt;&#xA;&lt;li&gt;OSI模型是一个通用的网络协议标准，但实际使用的标准却是TCP/IP标准，TCP/IP包含的不仅仅是TCP或者IP，它是一个协议族，网络应用开发都需要掌握TCP/IP。&lt;/li&gt;&#xA;&lt;li&gt;TCP/IP有两个最大的特点，分别是分层和封包/拆包机制&lt;/li&gt;&#xA;&lt;li&gt;每一层和它的上下层都有标准的接口规范，每一层无须关心上下层是如何工作的，它只关心上下层是否正确基于规范实现了接口&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;应用层&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果没有应用层，那么网络中传输的数据没有任何意义，因为人类无法理解数据的含义。而有了应用层，软件就能解释应用层数据的含义。在Web应用中，有了HTTP和HTML标准，浏览器才能呈现对用户有意义的内容。&lt;/li&gt;&#xA;&lt;li&gt;应用层协议有很多，比如HTTP、FTP、邮件协议，开发者开发的软件一般都是应用层协议软件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;传输层&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;网络层&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;网络层主要是IP这个协议，客户端和服务器传输的时候，会经过很多节点，IP就是选择一条最优的路径。每个终端上都有一张路由表，路由表负责将数据传输到下一个节点，下一个节点再传输到下下个节点，最终到达目的地址。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;链路层&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;应用层、传输层、网络层都是虚拟的，只有链路层才是实体设备，包括光纤、网卡等设备。基于这些设备，数据最终才能到达终端。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;接下来简单描述封包/拆包机制，对于客户端请求来说，传输层接收到应用层消息后，在HTTP数据包前面增加TCP包头，然后发送给网络层；网络层在TCP数据包前面加上IP包头发送给链路层；链路层在IP数据包前面加上以太网包头；最终服务器接收到完整的数据包。&lt;/li&gt;&#xA;&lt;li&gt;然后服务器进行拆包：首先在网络层去除链路层包头；在传输层去除IP包头；在应用层去除TCP包头；最终得到完整的HTTP应用层数据。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;14-协议安全分析&#34;&gt;&#xA;  1.4 协议安全分析&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#14-%e5%8d%8f%e8%ae%ae%e5%ae%89%e5%85%a8%e5%88%86%e6%9e%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;协议不安全的根本原因&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;数据没有加密&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;无法验证身份&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;数据易篡改&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第2章-密码学&#34;&gt;&#xA;  第2章 密码学&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-%e5%af%86%e7%a0%81%e5%ad%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;21-对于密码学的认知&#34;&gt;&#xA;  2.1 对于密码学的认知&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#21-%e5%af%b9%e4%ba%8e%e5%af%86%e7%a0%81%e5%ad%a6%e7%9a%84%e8%ae%a4%e7%9f%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;OpenSSL&#xA;&lt;ul&gt;&#xA;&lt;li&gt;OpenSSL命令行功能非常强大，有很多的子命令和参数，如果不理解密码学算法，根本无法理解子命令和参数的含义，这是难学习的根本原因，也说明学习OpenSSL之前必须先掌握密码学算法。&lt;/li&gt;&#xA;&lt;li&gt;不同版本的OpenSSL命令行工具在使用的时候有一些差别，同样一条命令，读者会发现在特定版本下可能无法正确运行。&lt;/li&gt;&#xA;&lt;li&gt;OpenSSL命令行的帮助手册和文档描写得不是很通俗，很难进行系统的学习。&lt;/li&gt;&#xA;&lt;li&gt;完成同样一个操作，OpenSSL命令行有许多方法实现，这可能会干扰读者的学习。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;22-随机数&#34;&gt;&#xA;  2.2 随机数&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#22-%e9%9a%8f%e6%9c%ba%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;而对于PRNG来说，内部状态的数值来自于模拟的数值，称为种子（seed）。随机数生成器每次生成随机数的时候，内部状态的值都会变化，这样才能产生不一样的随机数，如果每次熵和种子是一样的，生成的随机数也是相同的，所以熵和种子对于随机数生成器非常重要。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;221-随机数的类型&#34;&gt;&#xA;  2.2.1 随机数的类型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#221-%e9%9a%8f%e6%9c%ba%e6%95%b0%e7%9a%84%e7%b1%bb%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;真正的随机数生成器&#xA;&lt;ul&gt;&#xA;&lt;li&gt;需要从物理设备获取&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;伪随机数生成器&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过算法获取&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;密码学伪随机数生成器&#xA;&lt;ul&gt;&#xA;&lt;li&gt;用于密码学&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;随机数的特性&#xA;&lt;ul&gt;&#xA;&lt;li&gt;效率&lt;/li&gt;&#xA;&lt;li&gt;随机性&lt;/li&gt;&#xA;&lt;li&gt;不可预测性&lt;/li&gt;&#xA;&lt;li&gt;不可重现性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;222-随机数的工作原理&#34;&gt;&#xA;  2.2.2 随机数的工作原理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#222-%e9%9a%8f%e6%9c%ba%e6%95%b0%e7%9a%84%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;223-常见的随机数生成器&#34;&gt;&#xA;  2.2.3 常见的随机数生成器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#223-%e5%b8%b8%e8%a7%81%e7%9a%84%e9%9a%8f%e6%9c%ba%e6%95%b0%e7%94%9f%e6%88%90%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;224-密码学算法中的随机数&#34;&gt;&#xA;  2.2.4 密码学算法中的随机数&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#224-%e5%af%86%e7%a0%81%e5%ad%a6%e7%ae%97%e6%b3%95%e4%b8%ad%e7%9a%84%e9%9a%8f%e6%9c%ba%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;23-hash算法&#34;&gt;&#xA;  2.3 Hash算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#23-hash%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;231-加密基元&#34;&gt;&#xA;  2.3.1 加密基元&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#231-%e5%8a%a0%e5%af%86%e5%9f%ba%e5%85%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;加密基元就是一些基础的密码学算法，通过它们才能够构建更多的密码学算法、协议、应用程序&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;232-hash算法和密码学hash算法&#34;&gt;&#xA;  2.3.2 Hash算法和密码学Hash算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#232-hash%e7%ae%97%e6%b3%95%e5%92%8c%e5%af%86%e7%a0%81%e5%ad%a6hash%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;233-密码学hash算法的特性&#34;&gt;&#xA;  2.3.3 密码学Hash算法的特性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#233-%e5%af%86%e7%a0%81%e5%ad%a6hash%e7%ae%97%e6%b3%95%e7%9a%84%e7%89%b9%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;由于Hash算法有很多功能，所以Hash算法有多种称呼，比如&lt;strong&gt;摘要算法（Message Digest Algorithms）&lt;/strong&gt;、&lt;strong&gt;单向散列函数（Cryptographic One-way Hash Functions）&lt;/strong&gt;。输出值也有多种称呼，比如&lt;strong&gt;摘要值&lt;/strong&gt;、&lt;strong&gt;散列&lt;/strong&gt;、&lt;strong&gt;指纹&lt;/strong&gt;。读者看到这些名词的时候，都可以理解为Hash算法&lt;/li&gt;&#xA;&lt;li&gt;密码学Hash算法的主要特性&#xA;&lt;ul&gt;&#xA;&lt;li&gt;相同的消息总是能得到同样的摘要值，特定的Hash算法，不管消息长度是多少，最终的摘要值&lt;strong&gt;长度是相同的&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;不管多长的消息，&lt;strong&gt;Hash运算非常快速&lt;/strong&gt;，这是非常重要的特性。&lt;/li&gt;&#xA;&lt;li&gt;通过摘要值很难逆向计算出原始消息，Hash算法具备单向性，摘要值是&lt;strong&gt;不可逆&lt;/strong&gt;的，这也是非常重要的特性。为了逆向计算出原始消息，唯一的方法就是采用暴力攻击、字典攻击、彩虹表，对不同的消息组合进行迭代运算，运算的结果如果匹配该消息的摘要值，表示该Hash算法不应该用于密码学。&lt;/li&gt;&#xA;&lt;li&gt;原始消息一旦修改，即使是&lt;strong&gt;很轻微的修改，最终的摘要值也会产生变化&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;很难找出两个不同的消息，并且它们的摘要值是相同的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;234-hash算法的用途&#34;&gt;&#xA;  2.3.4 Hash算法的用途&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#234-hash%e7%ae%97%e6%b3%95%e7%9a%84%e7%94%a8%e9%80%94&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;文件比较&lt;/li&gt;&#xA;&lt;li&gt;身份校验&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;235-什么是安全的密码学hash算法&#34;&gt;&#xA;  2.3.5 什么是安全的密码学Hash算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#235-%e4%bb%80%e4%b9%88%e6%98%af%e5%ae%89%e5%85%a8%e7%9a%84%e5%af%86%e7%a0%81%e5%ad%a6hash%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;强抗碰撞性（Collision Resistance）&lt;/li&gt;&#xA;&lt;li&gt;弱抗碰撞性（Second pre-image Resistance）&lt;/li&gt;&#xA;&lt;li&gt;单向性（Pre-image Resistance）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;236-密码学hash算法的分类&#34;&gt;&#xA;  2.3.6 密码学Hash算法的分类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#236-%e5%af%86%e7%a0%81%e5%ad%a6hash%e7%ae%97%e6%b3%95%e7%9a%84%e5%88%86%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;MD5&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;MD5是一种比较常用的Hash算法，摘要值长度固定是128比特，MD5算法目前被证明已经不安全了，MD5算法违反了强抗碰撞性原则，但是还没有破坏单一性原则。&lt;/li&gt;&#xA;&lt;li&gt;理论上经过2^80次运算就能产生碰撞，但目前最快只要经过2^63次运算就能破坏强抗碰撞性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;SHA&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;SHA（Secure Hash Algorithms）算法是美国国家标准与技术研究院（NIST）指定的算法，SHA算法不是一个算法，而是一组算法，主要分为三类算法。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;SHA-1&lt;/li&gt;&#xA;&lt;li&gt;SHA-2&lt;/li&gt;&#xA;&lt;li&gt;SHA-3&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;24-对称加密算法&#34;&gt;&#xA;  2.4 对称加密算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#24-%e5%af%b9%e7%a7%b0%e5%8a%a0%e5%af%86%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;建议使用&lt;strong&gt;AES算法&lt;/strong&gt;，该算法是对称加密算法的标准算法&#xA;&lt;ul&gt;&#xA;&lt;li&gt;美国国家标准与技术研究院（National Institute of Standards and Technology, NIST）对众多的对称加密算法进行了考核，从安全性和效率进行了多方面评测，最终选取Rijndael算法作为对称加密算法的标准。以Rijndael算法为原型，创建了AES（Advanced Encryption Standard）算法，AES就是最终的对称加密算法标准。Rijndael算法和AES算法略微不同，但在理解的时候可以认为是相同的算法。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;流密码算法&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;块密码算法&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;迭代模式&#xA;&lt;ul&gt;&#xA;&lt;li&gt;**ECB模式（Electronic Codebook）**是最简单的一种迭代模式，这种迭代模式是存在安全问题的，一般不建议使用。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ECB模式（Electronic Codebook）是最简单的一种迭代模式，这种迭代模式是存在安全问题的，一般不建议使用。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;**CBC模式（Cipher Block Chaining）**是比较常见的一种迭代模式，解决了ECB模式的安全问题。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;迭代运算数据块不能并行处理，只有处理完第n个数据块，才能继续处理第n+1个数据块。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;**CTR模式（counter）**在迭代的时候，相当于是一个流密码的运行模式。每次迭代运算的时候要生成一个密钥流（keystream），生成密钥流的方法可以是任意的，但是各个密钥流之间是有关系的，最简单的方式就是密钥流不断递增，所以才叫作计数器模式。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;241-流密码算法&#34;&gt;&#xA;  2.4.1 流密码算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#241-%e6%b5%81%e5%af%86%e7%a0%81%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;242-块密码算法&#34;&gt;&#xA;  2.4.2 块密码算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#242-%e5%9d%97%e5%af%86%e7%a0%81%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;243-填充标准&#34;&gt;&#xA;  2.4.3 填充标准&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#243-%e5%a1%ab%e5%85%85%e6%a0%87%e5%87%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;244-对称加密算法实践&#34;&gt;&#xA;  2.4.4 对称加密算法实践&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#244-%e5%af%b9%e7%a7%b0%e5%8a%a0%e5%af%86%e7%ae%97%e6%b3%95%e5%ae%9e%e8%b7%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;25-消息验证码&#34;&gt;&#xA;  2.5 消息验证码&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#25-%e6%b6%88%e6%81%af%e9%aa%8c%e8%af%81%e7%a0%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;MAC值一般和原始消息一起传输，原始消息可以选择加密，也可以选择不加密，通信双方会以相同的方式生成MAC值，然后进行比较&lt;/li&gt;&#xA;&lt;li&gt;CBC-MAC算法&lt;/li&gt;&#xA;&lt;li&gt;HMAC算法 Hash-based Message Authentication Code&lt;/li&gt;&#xA;&lt;li&gt;加密算法不能提供完整性，加密的同时必须引入MAC算法避免消息被篡改&lt;/li&gt;&#xA;&lt;li&gt;使用者结合对称加密算法和MAC算法，提供机密性和完整性的模式也叫作Authenticated Encryption（AE）加密模式，主要有三种&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Encrypt-and-MAC (E&amp;amp;M)&lt;/li&gt;&#xA;&lt;li&gt;MAC-then-Encrypt (MtE)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这种模式（图2-12）先对消息进行MAC计算，然后将消息和MAC值组合在一起再进行加密，最终的加密值再发送给接收方。在HTTPS中，一般使用这种模式进行处理，比如AES-128-CBC#PKCS7-HMAC-SHA256模式。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Encrypt-then-MAC (EtM)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;不管是Encrypt-and-MAC模式还是MAC-then-Encrypt模式，使用不当的话都会存在安全问题，目前建议使用Encrypt-then-MAC模式。需要强调的是，这三种模式使用者必须分别处理，一旦处理不当，就可能会存在安全风险，那有没有一种方法在底层直接提供加密和MAC运算呢？无须使用者分别处理加密和MAC运算，这就是接下来讲解的AEAD模式。&lt;/li&gt;&#xA;&lt;li&gt;AEAD加密模式&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CCM模式&lt;/li&gt;&#xA;&lt;li&gt;GCM模式&lt;/li&gt;&#xA;&lt;li&gt;ChaCha20-Poly1305&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;251-什么是消息验证码&#34;&gt;&#xA;  2.5.1 什么是消息验证码&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#251-%e4%bb%80%e4%b9%88%e6%98%af%e6%b6%88%e6%81%af%e9%aa%8c%e8%af%81%e7%a0%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在密码学应用中，很多情况下，传递的消息没有必要加密，只要确保消息是完整且没有被篡改即可&lt;/li&gt;&#xA;&lt;li&gt;比如开发者开发了一组天气API，接口返回的数据并没有加密，原因可能如下&#xA;&lt;ul&gt;&#xA;&lt;li&gt;接口的数据并不重要，对隐私性要求不高&lt;/li&gt;&#xA;&lt;li&gt;加密和解密过程很消耗性能&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;所以接口的设计目标仅仅是避免消息被篡改，读者可能说那很简单啊，接口消息通过Hash算法得到一个摘要值，摘要值和接口消息同时作为接口内容返回不就解决问题了吗？&#xA;&lt;ul&gt;&#xA;&lt;li&gt;攻击者对消息进行拦截，同时修改接口消息和消息的摘要值然后发送给接收方，接收方收到消息后，对接口消息计算摘要值，然后与接收到的摘要值进行比较，如果相同，接收方认为消息是完整的。可实际呢？消息虽然是完整的，但被篡改了，或者说消息被伪装了，但对于接收方来说，仅仅通过摘要值无法验证消息是不是篡改了&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;消息验证码算法的特点&#xA;&lt;ul&gt;&#xA;&lt;li&gt;证明消息没有被篡改，这和Hash算法类似。&lt;/li&gt;&#xA;&lt;li&gt;消息是正确的发送者发送的，也就是说消息是经过验证的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;如何确保消息是特定人发送的呢？在通信双方可以维护同一个密钥，只有拥有密钥的通信双方才能生成和验证消息验证码，消息验证码算法需要一个密钥，这和对称加密算法是一样的，通信双方在消息传递之前需要获得同样的密钥。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;252-mac-算法的种类&#34;&gt;&#xA;  2.5.2 MAC 算法的种类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#252-mac-%e7%ae%97%e6%b3%95%e7%9a%84%e7%a7%8d%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CBC-MAC算法&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CBC-MAC算法从块密码算法的CBC分组模式演变而来，简单地说就是最后一个密文分组的值就是MAC值&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;HMAC算法&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在HTTP中应用最多的MAC算法是HMAC算法&lt;/li&gt;&#xA;&lt;li&gt;HMAC（Hash-based Message Authentication Code）算法使用Hash算法作为加密基元，HMAC结合Hash算法有多种变种，比如HMAC-SHA-1、HMAC-SHA256、HMAC-SHA512&lt;/li&gt;&#xA;&lt;li&gt;读者不要误以为HMAC算法就是Hash算法加上一个密钥，HMAC算法只是基于Hash算法的，内部的实现还是相当复杂的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;253-消息验证码算法实践&#34;&gt;&#xA;  2.5.3 消息验证码算法实践&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#253-%e6%b6%88%e6%81%af%e9%aa%8c%e8%af%81%e7%a0%81%e7%ae%97%e6%b3%95%e5%ae%9e%e8%b7%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;254-加密算法不能提供完整性&#34;&gt;&#xA;  2.5.4 加密算法不能提供完整性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#254-%e5%8a%a0%e5%af%86%e7%ae%97%e6%b3%95%e4%b8%8d%e8%83%bd%e6%8f%90%e4%be%9b%e5%ae%8c%e6%95%b4%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;完整性的意思是消息没有被篡改，仅仅加密数据是无法保证数据完整性的，初听起来可能觉得很奇怪。攻击者如果没有密钥就无法破解原文，也就无法篡改，数据必然是完整的。遗憾的是攻击者虽然无法破解数据，但是可以修改密文的部分数据，然后发送给接收者，接收者通过密钥发现能够解密，但是解密出来的值实际上不是原文，消息已经被修改了，也就是说加密操作不能提供完整性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;hash算法可以作为消息验证码吗&#34;&gt;&#xA;  hash算法可以作为消息验证码吗？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#hash%e7%ae%97%e6%b3%95%e5%8f%af%e4%bb%a5%e4%bd%9c%e4%b8%ba%e6%b6%88%e6%81%af%e9%aa%8c%e8%af%81%e7%a0%81%e5%90%97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;是的，哈希算法可以作为消息验证码（MAC）的一部分，但单独使用哈希算法并不能直接构成消息验证码。消息验证码（MAC）是一种用于验证消息&lt;strong&gt;完整性&lt;/strong&gt;和&lt;strong&gt;真实性&lt;/strong&gt;的技术，通常需要结合密钥来确保安全性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>收割Offer：互联网大厂面经</title>
      <link>/zh/post/books/computer-science/%E6%94%B6%E5%89%B2-offer%E4%BA%92%E8%81%94%E7%BD%91%E5%A4%A7%E5%8E%82%E9%9D%A2%E7%BB%8F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/books/computer-science/%E6%94%B6%E5%89%B2-offer%E4%BA%92%E8%81%94%E7%BD%91%E5%A4%A7%E5%8E%82%E9%9D%A2%E7%BB%8F/</guid>
      <description>&lt;h2 id=&#34;第1章-八股文&#34;&gt;&#xA;  第1章 八股文&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-%e5%85%ab%e8%82%a1%e6%96%87&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-综合知识&#34;&gt;&#xA;  1.1 综合知识&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-%e7%bb%bc%e5%90%88%e7%9f%a5%e8%af%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;111-单元化高可用架构演进历程&#34;&gt;&#xA;  1.1.1 单元化高可用架构演进历程&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#111-%e5%8d%95%e5%85%83%e5%8c%96%e9%ab%98%e5%8f%af%e7%94%a8%e6%9e%b6%e6%9e%84%e6%bc%94%e8%bf%9b%e5%8e%86%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;单体应用→单数据库→单机房→单地部署&lt;/li&gt;&#xA;&lt;li&gt;微服务→分库分表→同城多机房→单元化&lt;/li&gt;&#xA;&lt;li&gt;1 单体应用与单机房微服务&#xA;&lt;ul&gt;&#xA;&lt;li&gt;单体应用把所有的功能模块耦合在一起，它存在的问题是领域边界模糊，无法根据业务模块的需要进行伸缩扩容。除此之外，还存在需求开发分支冲突、线上问题定位困难、整体打包编译费时等问题，不适用于大型复杂项目。&lt;/li&gt;&#xA;&lt;li&gt;由于系统内部处理耗时很小，并且后端服务与数据库部署在同一机房，因此该架构下整个请求链路上的耗时主要发生在用户到机房的物理距离上。&lt;/li&gt;&#xA;&lt;li&gt;微服务化时代，巨大的单体应用被拆分为模块化的服务，每个服务都围绕特定的业务领域构建，微服务之间通过远程过程调用(Remote Procedure Call，RPC)实现通信，这就是单机房微服务。尽管服务拆分使得原本进程内部的调用变成了网络调用，但是应用都部署在同一个机房，因此RPC网络开销可以忽略。微服务解决了应用层的瓶颈，但随着业务的发展，数据库又成为制约系统扩容的瓶颈。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2 单数据库与分库分表&#xA;&lt;ul&gt;&#xA;&lt;li&gt;随着业务的发展数据量不断增多，出现了数据存储、读取方面的问题：一方面单机物理服务器的资源（如CPU、磁盘、内存、IO等）有限，磁盘读取和网络IO出现瓶颈；另一方面单表的数据量太大，查询时扫描的数据很多，造成SQL执行效率低下。为了解决上述问题，引入数据库中间件—实现对上层业务透明的分库分表。&lt;/li&gt;&#xA;&lt;li&gt;分布式数据库的数据分区一般采用Hash函数+Map映射的方式来实现：首先根据数据的分表字段（一般为userid）计算出该数据的Hash桶位置，然后使用事先定义好的映射表将这个Hash桶中的数据映射到数据库物理节点。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;3 单机房演进为同城多机房&#xA;&lt;ul&gt;&#xA;&lt;li&gt;为了解决单机房的容量限制，可在同城新建多个机房，机房之间通过专线连接，将应用服务部署在多个机房，数据库主库和备库部署到不同的机房，依靠不同的服务注册中心将应用层逻辑隔离，实现应用层请求不跨机房处理&lt;/li&gt;&#xA;&lt;li&gt;数据库主库只在其中一个机房内，数据写入时只写主库，主备数据同步，异地机房备库可提供读服务。该方案存在的缺点是访问数据库存在跨机房调用、主备数据同步延迟的问题，但该方案的优点也很多&#xA;&lt;ul&gt;&#xA;&lt;li&gt;容量不受单机房限制，数据层与应用层均可自由扩容。&lt;/li&gt;&#xA;&lt;li&gt;避免不可测因素导致单机房故障，使得全域产品服务不可用，比如地震、火灾、洪水等灾害使得机房断电或者网线被施工方意外挖断等。&lt;/li&gt;&#xA;&lt;li&gt;用户请求就近接入，优先被物理距离较近的机房处理，减少网络耗时，保障用户体验。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;4 同城多机房演进为单元化部署&#xA;&lt;ul&gt;&#xA;&lt;li&gt;因为应用层流量是随机的，任何一个应用节点都可能访问任意一个数据库节点，所以应用层每增加一台服务器实例都需要与数据库建立连接，数据库连接数量存在上限，这又制约了系统的水平扩容&lt;/li&gt;&#xA;&lt;li&gt;提出了单元化的架构，该种架构的应用层也像数据层一样分片，但从应用层到数据层组成一个封闭的单元，一次请求处理收敛在一个单元内部，数据库只负责本单元的应用请求，从而大大节省了连接数；而每个单元可以作为一个独立整体进行部署或挪动，甚至还可以将单元部署到异地来实现容灾。&lt;/li&gt;&#xA;&lt;li&gt;单元化设计的原则如下：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;业务是可分片的，常以用户id或者地区作为分片维度&lt;/li&gt;&#xA;&lt;li&gt;整个系统要面向逻辑分区进行设计，方便单元挪动&lt;/li&gt;&#xA;&lt;li&gt;理想状态下单元内部是自封闭的，单元内可以完成业务的所有处理。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;缺点是，有时跨单元调用是无法避免的，比如转账场景，用户A和B分别属于单元1和单元2，数据也存储在不同单元，扣减用户A的账户余额需要在单元1执行，增加用户B的账户余额需要在单元2执行，因此跨单元调用增加网络耗时这一问题无法避免。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;112-java中5种重要的队列&#34;&gt;&#xA;  1.1.2 Java中5种重要的队列&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#112-java%e4%b8%ad5%e7%a7%8d%e9%87%8d%e8%a6%81%e7%9a%84%e9%98%9f%e5%88%97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 ArrayBlockingQueue队列&lt;/li&gt;&#xA;&lt;li&gt;2 LinkedBlockingQueue队列&lt;/li&gt;&#xA;&lt;li&gt;3 SynchronousQueue队&lt;/li&gt;&#xA;&lt;li&gt;4 无锁队列&lt;/li&gt;&#xA;&lt;li&gt;5 PriorityBlockingQueue队列&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;113-io多路复用&#34;&gt;&#xA;  1.1.3 IO多路复用&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#113-io%e5%a4%9a%e8%b7%af%e5%a4%8d%e7%94%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;IO多路复用就是通过一种机制来监听多个文件描述符，某个文件描述符一旦就绪，它就能通知应用程序进行相应的处理。多路复用的3种实现方式有select、poll和epoll&lt;/li&gt;&#xA;&lt;li&gt;1 阻塞IO&lt;/li&gt;&#xA;&lt;li&gt;2 引入线程池&lt;/li&gt;&#xA;&lt;li&gt;3 IO多路复用3种实现方式&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;114-reentrantlock锁与syschronized锁&#34;&gt;&#xA;  1.1.4 ReentrantLock锁与Syschronized锁&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#114-reentrantlock%e9%94%81%e4%b8%8esyschronized%e9%94%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 公平锁与非公平锁&#xA;&lt;ul&gt;&#xA;&lt;li&gt;公平锁是指多个线程竞争锁时直接进入队列排队，根据申请锁的顺序获得锁，先到先得。而非公平锁则是多个线程竞争锁时，首先尝试直接抢锁，失败后再进入等待队列。&lt;/li&gt;&#xA;&lt;li&gt;使用公平锁，先到先得，线程获取锁时不会出现饥饿现象。使用非公平锁，整体的吞吐效率比较高。&lt;/li&gt;&#xA;&lt;li&gt;ReentrantLock默认是非公平锁，在构造方法中传入参数true则为公平锁；Synchronized是非公平锁。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2 可重入锁&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可重入锁是指一个线程可以多次获取同一把锁，其实现原理是，为每个锁关联一个计数器，线程首次获取锁时，计数器置为1，再次获取该锁时，计数器加1；线程每退出同步块一次，计数器就减1。计数器为0则代表锁被当前线程释放。&lt;/li&gt;&#xA;&lt;li&gt;Synchronized和ReentrantLock都是可重入锁。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;3 ReentrantLock锁&lt;/li&gt;&#xA;&lt;li&gt;4 Syschronized锁&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;115-java-spi机制&#34;&gt;&#xA;  1.1.5 Java SPI机制&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#115-java-spi%e6%9c%ba%e5%88%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;116-限流算法&#34;&gt;&#xA;  1.1.6 限流算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#116-%e9%99%90%e6%b5%81%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;1 计数器&lt;/p&gt;</description>
    </item>
    <item>
      <title>收割Offer：互联网大厂面经</title>
      <link>/zh/zh/post/books/computer-science/%E6%94%B6%E5%89%B2-offer%E4%BA%92%E8%81%94%E7%BD%91%E5%A4%A7%E5%8E%82%E9%9D%A2%E7%BB%8F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/books/computer-science/%E6%94%B6%E5%89%B2-offer%E4%BA%92%E8%81%94%E7%BD%91%E5%A4%A7%E5%8E%82%E9%9D%A2%E7%BB%8F/</guid>
      <description>&lt;h2 id=&#34;第1章-八股文&#34;&gt;&#xA;  第1章 八股文&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-%e5%85%ab%e8%82%a1%e6%96%87&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-综合知识&#34;&gt;&#xA;  1.1 综合知识&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-%e7%bb%bc%e5%90%88%e7%9f%a5%e8%af%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;111-单元化高可用架构演进历程&#34;&gt;&#xA;  1.1.1 单元化高可用架构演进历程&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#111-%e5%8d%95%e5%85%83%e5%8c%96%e9%ab%98%e5%8f%af%e7%94%a8%e6%9e%b6%e6%9e%84%e6%bc%94%e8%bf%9b%e5%8e%86%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;单体应用→单数据库→单机房→单地部署&lt;/li&gt;&#xA;&lt;li&gt;微服务→分库分表→同城多机房→单元化&lt;/li&gt;&#xA;&lt;li&gt;1 单体应用与单机房微服务&#xA;&lt;ul&gt;&#xA;&lt;li&gt;单体应用把所有的功能模块耦合在一起，它存在的问题是领域边界模糊，无法根据业务模块的需要进行伸缩扩容。除此之外，还存在需求开发分支冲突、线上问题定位困难、整体打包编译费时等问题，不适用于大型复杂项目。&lt;/li&gt;&#xA;&lt;li&gt;由于系统内部处理耗时很小，并且后端服务与数据库部署在同一机房，因此该架构下整个请求链路上的耗时主要发生在用户到机房的物理距离上。&lt;/li&gt;&#xA;&lt;li&gt;微服务化时代，巨大的单体应用被拆分为模块化的服务，每个服务都围绕特定的业务领域构建，微服务之间通过远程过程调用(Remote Procedure Call，RPC)实现通信，这就是单机房微服务。尽管服务拆分使得原本进程内部的调用变成了网络调用，但是应用都部署在同一个机房，因此RPC网络开销可以忽略。微服务解决了应用层的瓶颈，但随着业务的发展，数据库又成为制约系统扩容的瓶颈。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2 单数据库与分库分表&#xA;&lt;ul&gt;&#xA;&lt;li&gt;随着业务的发展数据量不断增多，出现了数据存储、读取方面的问题：一方面单机物理服务器的资源（如CPU、磁盘、内存、IO等）有限，磁盘读取和网络IO出现瓶颈；另一方面单表的数据量太大，查询时扫描的数据很多，造成SQL执行效率低下。为了解决上述问题，引入数据库中间件—实现对上层业务透明的分库分表。&lt;/li&gt;&#xA;&lt;li&gt;分布式数据库的数据分区一般采用Hash函数+Map映射的方式来实现：首先根据数据的分表字段（一般为userid）计算出该数据的Hash桶位置，然后使用事先定义好的映射表将这个Hash桶中的数据映射到数据库物理节点。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;3 单机房演进为同城多机房&#xA;&lt;ul&gt;&#xA;&lt;li&gt;为了解决单机房的容量限制，可在同城新建多个机房，机房之间通过专线连接，将应用服务部署在多个机房，数据库主库和备库部署到不同的机房，依靠不同的服务注册中心将应用层逻辑隔离，实现应用层请求不跨机房处理&lt;/li&gt;&#xA;&lt;li&gt;数据库主库只在其中一个机房内，数据写入时只写主库，主备数据同步，异地机房备库可提供读服务。该方案存在的缺点是访问数据库存在跨机房调用、主备数据同步延迟的问题，但该方案的优点也很多&#xA;&lt;ul&gt;&#xA;&lt;li&gt;容量不受单机房限制，数据层与应用层均可自由扩容。&lt;/li&gt;&#xA;&lt;li&gt;避免不可测因素导致单机房故障，使得全域产品服务不可用，比如地震、火灾、洪水等灾害使得机房断电或者网线被施工方意外挖断等。&lt;/li&gt;&#xA;&lt;li&gt;用户请求就近接入，优先被物理距离较近的机房处理，减少网络耗时，保障用户体验。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;4 同城多机房演进为单元化部署&#xA;&lt;ul&gt;&#xA;&lt;li&gt;因为应用层流量是随机的，任何一个应用节点都可能访问任意一个数据库节点，所以应用层每增加一台服务器实例都需要与数据库建立连接，数据库连接数量存在上限，这又制约了系统的水平扩容&lt;/li&gt;&#xA;&lt;li&gt;提出了单元化的架构，该种架构的应用层也像数据层一样分片，但从应用层到数据层组成一个封闭的单元，一次请求处理收敛在一个单元内部，数据库只负责本单元的应用请求，从而大大节省了连接数；而每个单元可以作为一个独立整体进行部署或挪动，甚至还可以将单元部署到异地来实现容灾。&lt;/li&gt;&#xA;&lt;li&gt;单元化设计的原则如下：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;业务是可分片的，常以用户id或者地区作为分片维度&lt;/li&gt;&#xA;&lt;li&gt;整个系统要面向逻辑分区进行设计，方便单元挪动&lt;/li&gt;&#xA;&lt;li&gt;理想状态下单元内部是自封闭的，单元内可以完成业务的所有处理。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;缺点是，有时跨单元调用是无法避免的，比如转账场景，用户A和B分别属于单元1和单元2，数据也存储在不同单元，扣减用户A的账户余额需要在单元1执行，增加用户B的账户余额需要在单元2执行，因此跨单元调用增加网络耗时这一问题无法避免。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;112-java中5种重要的队列&#34;&gt;&#xA;  1.1.2 Java中5种重要的队列&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#112-java%e4%b8%ad5%e7%a7%8d%e9%87%8d%e8%a6%81%e7%9a%84%e9%98%9f%e5%88%97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 ArrayBlockingQueue队列&lt;/li&gt;&#xA;&lt;li&gt;2 LinkedBlockingQueue队列&lt;/li&gt;&#xA;&lt;li&gt;3 SynchronousQueue队&lt;/li&gt;&#xA;&lt;li&gt;4 无锁队列&lt;/li&gt;&#xA;&lt;li&gt;5 PriorityBlockingQueue队列&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;113-io多路复用&#34;&gt;&#xA;  1.1.3 IO多路复用&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#113-io%e5%a4%9a%e8%b7%af%e5%a4%8d%e7%94%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;IO多路复用就是通过一种机制来监听多个文件描述符，某个文件描述符一旦就绪，它就能通知应用程序进行相应的处理。多路复用的3种实现方式有select、poll和epoll&lt;/li&gt;&#xA;&lt;li&gt;1 阻塞IO&lt;/li&gt;&#xA;&lt;li&gt;2 引入线程池&lt;/li&gt;&#xA;&lt;li&gt;3 IO多路复用3种实现方式&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;114-reentrantlock锁与syschronized锁&#34;&gt;&#xA;  1.1.4 ReentrantLock锁与Syschronized锁&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#114-reentrantlock%e9%94%81%e4%b8%8esyschronized%e9%94%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 公平锁与非公平锁&#xA;&lt;ul&gt;&#xA;&lt;li&gt;公平锁是指多个线程竞争锁时直接进入队列排队，根据申请锁的顺序获得锁，先到先得。而非公平锁则是多个线程竞争锁时，首先尝试直接抢锁，失败后再进入等待队列。&lt;/li&gt;&#xA;&lt;li&gt;使用公平锁，先到先得，线程获取锁时不会出现饥饿现象。使用非公平锁，整体的吞吐效率比较高。&lt;/li&gt;&#xA;&lt;li&gt;ReentrantLock默认是非公平锁，在构造方法中传入参数true则为公平锁；Synchronized是非公平锁。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;2 可重入锁&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可重入锁是指一个线程可以多次获取同一把锁，其实现原理是，为每个锁关联一个计数器，线程首次获取锁时，计数器置为1，再次获取该锁时，计数器加1；线程每退出同步块一次，计数器就减1。计数器为0则代表锁被当前线程释放。&lt;/li&gt;&#xA;&lt;li&gt;Synchronized和ReentrantLock都是可重入锁。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;3 ReentrantLock锁&lt;/li&gt;&#xA;&lt;li&gt;4 Syschronized锁&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;115-java-spi机制&#34;&gt;&#xA;  1.1.5 Java SPI机制&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#115-java-spi%e6%9c%ba%e5%88%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;116-限流算法&#34;&gt;&#xA;  1.1.6 限流算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#116-%e9%99%90%e6%b5%81%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;1 计数器&lt;/p&gt;</description>
    </item>
    <item>
      <title>一本书讲透 ElasticSearch：原理、进阶与工程实践</title>
      <link>/zh/post/books/computer-science/%E4%B8%80%E6%9C%AC%E4%B9%A6%E8%AE%B2%E9%80%8F-elasticsearch%E5%8E%9F%E7%90%86%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/books/computer-science/%E4%B8%80%E6%9C%AC%E4%B9%A6%E8%AE%B2%E9%80%8F-elasticsearch%E5%8E%9F%E7%90%86%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/</guid>
      <description>&lt;h2 id=&#34;第1章-elastic-stack全景&#34;&gt;&#xA;  第1章 Elastic Stack全景&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-elastic-stack%e5%85%a8%e6%99%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;首先，Elasticsearch支持各类应用、网站等的全文搜索，包括淘宝、京东等电商平台的搜索，360手机助手、豌豆荚等应用市场平台的搜索，以及腾讯文档、石墨文档等平台的&lt;strong&gt;全文检索服务&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;许多知名企业，如58集团、唯品会、日志易、国投瑞银等，都使用Elasticsearch来&lt;strong&gt;快速分析和处理大量的日志数据&lt;/strong&gt;，从而对业务运行状况进行实时的监控和故障排查。&lt;/li&gt;&#xA;&lt;li&gt;许多知名企业的商业智能系统，如睿思BI、百度数据可视化Sugar BI、永洪BI等，都借助Elasticsearch的&lt;strong&gt;高效、实时的数据分析和可视化能力&lt;/strong&gt;，帮助企业更好地理解市场趋势、优化决策过程。&lt;/li&gt;&#xA;&lt;li&gt;ClickHouse&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ClickHouse是一款由俄罗斯搜索引擎Yandex开发并开源的&lt;strong&gt;列式存储数据库&lt;/strong&gt;，专为**OLAP（在线分析处理）**场景设计。ClickHouse具有高速查询分析的能力，支持实时添加数据和修改结构，并且能够实现高度数据压缩比，从而有效节省存储空间。此外，ClickHouse支持SQL查询，易于使用和集成。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第2章-elasticsearch基础知识&#34;&gt;&#xA;  第2章 Elasticsearch基础知识&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-elasticsearch%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;倒排索引&#xA;&lt;ul&gt;&#xA;&lt;li&gt;一本C语言图书末页的索引结构。这种结构揭示了核心关键词与页码之间的对应关系。这种关系模式可以视为倒排索引的实际例证。在此结构中，我们可以&lt;strong&gt;根据关键词快速找到包含这个关键词的内容的页码&lt;/strong&gt;。这与倒排索引在接收关键词输入后能够迅速定位包含该关键词的文档的性质是一致的。借由这种类比，我们可以更为直观地理解倒排索引在数据查询中的关键作用。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;数据索引化&#xA;&lt;ul&gt;&#xA;&lt;li&gt;数据索引化指的是数据在写入搜索引擎（本书中主要指Elasticsearch）的过程中，&lt;strong&gt;扫描文档中的每一个词项，结合分词器和词典对必要的词项建立倒排索引&lt;/strong&gt;，同时指明该词项在文章中出现的&lt;strong&gt;次数&lt;/strong&gt;和&lt;strong&gt;位置&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;全文检索的前提是待检索的数据已经索引化，当用户查询时能根据建立的倒排索引进行查找。&lt;/li&gt;&#xA;&lt;li&gt;全文检索的特点如下&#xA;&lt;ul&gt;&#xA;&lt;li&gt;只处理文本，不处理语义。&lt;/li&gt;&#xA;&lt;li&gt;结果列表有相关度排序。&lt;/li&gt;&#xA;&lt;li&gt;支持高亮显示结果数据。&lt;/li&gt;&#xA;&lt;li&gt;原始的文本被切分为单个单词、短语或特殊标记后进行存储。&lt;/li&gt;&#xA;&lt;li&gt;给定词与它的&lt;strong&gt;变体&lt;/strong&gt;（如近义词）会被折叠为一个词，如electrification和ectric、mice和mouse、“土豆”和“马铃薯”、“西红柿”和“番茄”等，每组词均被视为同一个词。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;22-elasticsearch的核心概念&#34;&gt;&#xA;  2.2 Elasticsearch的核心概念&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#22-elasticsearch%e7%9a%84%e6%a0%b8%e5%bf%83%e6%a6%82%e5%bf%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;集群&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Elasticsearch集群常用于处理大规模数据集，目的是实现&lt;strong&gt;容错&lt;/strong&gt;和&lt;strong&gt;高可用&lt;/strong&gt;。Elasticsearch集群需要一个&lt;strong&gt;唯一标识&lt;/strong&gt;的集群名称来防止不必要的节点加入。集群大小从单个节点到数千个节点不等，具体大小取决于实际业务场景。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;节点&#xA;&lt;ul&gt;&#xA;&lt;li&gt;节点是指&lt;strong&gt;一个Elasticsearch实例&lt;/strong&gt;，更确切地说，它是一个Elasticsearch进程。节点可以部署到物理机或者虚拟机上。每当Elasticsearch启动时，节点就会开始运行。&lt;strong&gt;每个节点都有唯一标识的名称&lt;/strong&gt;，在部署多节点集群环境的时候我们要注意不要写错节点名称。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;索引&#xA;&lt;ul&gt;&#xA;&lt;li&gt;索引可以看作&lt;strong&gt;数据库中的一个表&lt;/strong&gt;，它包含了一组具有相似结构的文档&lt;/li&gt;&#xA;&lt;li&gt;在Elasticsearch中，数据以&lt;strong&gt;JSON格式的文档&lt;/strong&gt;存储在索引内。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;每个索引具有唯一的名称&lt;/strong&gt;，以便在执行搜索、更新和删除操作时进行引用。&lt;/li&gt;&#xA;&lt;li&gt;索引的名称可以由&lt;strong&gt;用户自定义&lt;/strong&gt;，但必须全部小写。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;分片&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在了解分片是什么之前，让我们谈谈为什么需要分片。假设你有一个包含超大规模文档的索引，有总计1TB的数据。当前集群中有两个节点，每个节点有512GB的空间可用于存储数据。显然，&lt;strong&gt;整个索引无法存储在任何一个节点上，因此有必要以某种方式拆分索引的数据，否则会导致数据存储不完整&lt;/strong&gt;。在这种情况下，索引的大小超过了单个节点的硬件限制，分片就派上用场了。分片通过将索引分成更小的部分来解决这个问题。&lt;/li&gt;&#xA;&lt;li&gt;当处理涉及多个数据分片的查询时，Elasticsearch会&lt;strong&gt;将查询请求分发到各个相关的分片&lt;/strong&gt;，并将它们的结果集进行聚合。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;副本&#xA;&lt;ul&gt;&#xA;&lt;li&gt;分片可以被复制，被复制的分片称为“主分片”，如图2-3中的主分片1～4；主分片的复制版本称为“副本分片”或简称为“副本”，如图2-3中的副本1～4&lt;/li&gt;&#xA;&lt;li&gt;创建索引时需要指定主分片，且主分片数一经指定就不支持动态更新了。而副本同样需要在创建索引时指定，每个分片可以有0或多个副本，副本数支持动态更新。&lt;/li&gt;&#xA;&lt;li&gt;当某主分片所在的数据节点不可用时，会导致主分片丢失现象，若短时间内不对此采取补救措施，集群会将该分片对应的副本提升为新的主分片。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;文档&#xA;&lt;ul&gt;&#xA;&lt;li&gt;关系型数据库将数据以行或元组为单位存储在数据库表中，而Elasticsearch将数据以文档为单位存储在索引中。&lt;/li&gt;&#xA;&lt;li&gt;作为Elasticsearch的基本存储单元，&lt;strong&gt;文档是指存储在Elasticsearch索引中的JSON对象&lt;/strong&gt;。文档中的数据由键值对构成。键是字段的名称，值是不同数据类型的字段。不同的数据类型包含但不限于字符串类型、数字类型、布尔类型、对象类型等。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;字段&#xA;&lt;ul&gt;&#xA;&lt;li&gt;字段是Elasticsearch中最小的单个数据单元，类似于关系型数据库表中的字段。一般实战项目前期的设计环节都是根据业务需求拆分、定义字段，并且敲定字段类型。在上面航空类索引的示例中，“FlightNum”是字段，其含义为“航班号”，字段类型为keyword。&lt;/li&gt;&#xA;&lt;li&gt;与关系型数据库不同的是，&lt;strong&gt;Elasticsearch的一个字段可以设定两种或两种以上的数据类型&lt;/strong&gt;，通过定义multi-field来灵活地满足复杂的业务需求。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;映射&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不少初学者对映射(Mapping)这个概念会感觉不好理解。映射类似于关系型数据库中的Schema，可以近似地理解为**“表结构”**。&lt;/li&gt;&#xA;&lt;li&gt;我们拿到一个业务需求后，往往会将业务细分会几个索引。每个索引都需要一个相对固定的表结构，包含但不限于字段名称、字段类型、是否需要分词、是否需要索引、是否需要存储、是否需要多字段类型等。这些都是设计映射时要考虑的问题。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;分词&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在英文文本中，空格就是切分语句或短语的“屏障”。但中文文本中则没有了这道“屏障”，于是分词就变得就不那么简单，需要由专门的分词算法构建的分词器来实现。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第3章-elasticsearch集群部署&#34;&gt;&#xA;  第3章 Elasticsearch集群部署&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0-elasticsearch%e9%9b%86%e7%be%a4%e9%83%a8%e7%bd%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;什么是堆内存&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Java中的堆是JVM所管理的最大的一块内存空间，主要用于&lt;strong&gt;存放各种类的实例对象&lt;/strong&gt;。在Java中，堆被划分成两个不同的区域：新生代(Young)和老年代(Old)。新生代又被划分为3个区域：Eden、From Survivor、To Survivor。&lt;/li&gt;&#xA;&lt;li&gt;这样划分的目的是使JVM更好地管理堆内存中的对象，包括内存的分配以及回收。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;堆内存的作用是什么&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;堆内存的唯一目的就是&lt;strong&gt;创建对象实例&lt;/strong&gt;，所有的对象实例和数组都要在堆上分配。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;堆内存如何配置&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;默认情况下，Elasticsearch JVM使用的堆内存最小和最大值均为4 GB（8.X版本以上）&lt;/li&gt;&#xA;&lt;li&gt;在转移到生产环境时，配置足够容量的堆大小以确保Elasticsearch功能和性能是必要的。&lt;/li&gt;&#xA;&lt;li&gt;Elasticsearch将通过对Xms（最小堆大小）和Xmx（最大堆大小）的设置来分配jvm.options中指定的整个堆。&lt;/li&gt;&#xA;&lt;li&gt;堆内存的值取决于服务器上可用的内存大小。Elasticsearch堆内存设置对其性能表现来说十分关键。&lt;strong&gt;建议将堆大小配置为服务器可用内存的50%，上限为32GB，且预留足够的内存给操作系统以提升缓存效率&lt;/strong&gt;。合理调整堆内存大小可减轻垃圾回收工作的压力，优化查询速度和索引效率。请务必进行监控并根据实际需求来调整堆内存大小。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;为什么堆内存不能超过物理机内存的一半&lt;/p&gt;</description>
    </item>
    <item>
      <title>一本书讲透 ElasticSearch：原理、进阶与工程实践</title>
      <link>/zh/zh/post/books/computer-science/%E4%B8%80%E6%9C%AC%E4%B9%A6%E8%AE%B2%E9%80%8F-elasticsearch%E5%8E%9F%E7%90%86%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/books/computer-science/%E4%B8%80%E6%9C%AC%E4%B9%A6%E8%AE%B2%E9%80%8F-elasticsearch%E5%8E%9F%E7%90%86%E8%BF%9B%E9%98%B6%E4%B8%8E%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/</guid>
      <description>&lt;h2 id=&#34;第1章-elastic-stack全景&#34;&gt;&#xA;  第1章 Elastic Stack全景&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-elastic-stack%e5%85%a8%e6%99%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;首先，Elasticsearch支持各类应用、网站等的全文搜索，包括淘宝、京东等电商平台的搜索，360手机助手、豌豆荚等应用市场平台的搜索，以及腾讯文档、石墨文档等平台的&lt;strong&gt;全文检索服务&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;许多知名企业，如58集团、唯品会、日志易、国投瑞银等，都使用Elasticsearch来&lt;strong&gt;快速分析和处理大量的日志数据&lt;/strong&gt;，从而对业务运行状况进行实时的监控和故障排查。&lt;/li&gt;&#xA;&lt;li&gt;许多知名企业的商业智能系统，如睿思BI、百度数据可视化Sugar BI、永洪BI等，都借助Elasticsearch的&lt;strong&gt;高效、实时的数据分析和可视化能力&lt;/strong&gt;，帮助企业更好地理解市场趋势、优化决策过程。&lt;/li&gt;&#xA;&lt;li&gt;ClickHouse&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ClickHouse是一款由俄罗斯搜索引擎Yandex开发并开源的&lt;strong&gt;列式存储数据库&lt;/strong&gt;，专为**OLAP（在线分析处理）**场景设计。ClickHouse具有高速查询分析的能力，支持实时添加数据和修改结构，并且能够实现高度数据压缩比，从而有效节省存储空间。此外，ClickHouse支持SQL查询，易于使用和集成。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第2章-elasticsearch基础知识&#34;&gt;&#xA;  第2章 Elasticsearch基础知识&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-elasticsearch%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;倒排索引&#xA;&lt;ul&gt;&#xA;&lt;li&gt;一本C语言图书末页的索引结构。这种结构揭示了核心关键词与页码之间的对应关系。这种关系模式可以视为倒排索引的实际例证。在此结构中，我们可以&lt;strong&gt;根据关键词快速找到包含这个关键词的内容的页码&lt;/strong&gt;。这与倒排索引在接收关键词输入后能够迅速定位包含该关键词的文档的性质是一致的。借由这种类比，我们可以更为直观地理解倒排索引在数据查询中的关键作用。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;数据索引化&#xA;&lt;ul&gt;&#xA;&lt;li&gt;数据索引化指的是数据在写入搜索引擎（本书中主要指Elasticsearch）的过程中，&lt;strong&gt;扫描文档中的每一个词项，结合分词器和词典对必要的词项建立倒排索引&lt;/strong&gt;，同时指明该词项在文章中出现的&lt;strong&gt;次数&lt;/strong&gt;和&lt;strong&gt;位置&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;全文检索的前提是待检索的数据已经索引化，当用户查询时能根据建立的倒排索引进行查找。&lt;/li&gt;&#xA;&lt;li&gt;全文检索的特点如下&#xA;&lt;ul&gt;&#xA;&lt;li&gt;只处理文本，不处理语义。&lt;/li&gt;&#xA;&lt;li&gt;结果列表有相关度排序。&lt;/li&gt;&#xA;&lt;li&gt;支持高亮显示结果数据。&lt;/li&gt;&#xA;&lt;li&gt;原始的文本被切分为单个单词、短语或特殊标记后进行存储。&lt;/li&gt;&#xA;&lt;li&gt;给定词与它的&lt;strong&gt;变体&lt;/strong&gt;（如近义词）会被折叠为一个词，如electrification和ectric、mice和mouse、“土豆”和“马铃薯”、“西红柿”和“番茄”等，每组词均被视为同一个词。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;22-elasticsearch的核心概念&#34;&gt;&#xA;  2.2 Elasticsearch的核心概念&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#22-elasticsearch%e7%9a%84%e6%a0%b8%e5%bf%83%e6%a6%82%e5%bf%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;集群&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Elasticsearch集群常用于处理大规模数据集，目的是实现&lt;strong&gt;容错&lt;/strong&gt;和&lt;strong&gt;高可用&lt;/strong&gt;。Elasticsearch集群需要一个&lt;strong&gt;唯一标识&lt;/strong&gt;的集群名称来防止不必要的节点加入。集群大小从单个节点到数千个节点不等，具体大小取决于实际业务场景。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;节点&#xA;&lt;ul&gt;&#xA;&lt;li&gt;节点是指&lt;strong&gt;一个Elasticsearch实例&lt;/strong&gt;，更确切地说，它是一个Elasticsearch进程。节点可以部署到物理机或者虚拟机上。每当Elasticsearch启动时，节点就会开始运行。&lt;strong&gt;每个节点都有唯一标识的名称&lt;/strong&gt;，在部署多节点集群环境的时候我们要注意不要写错节点名称。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;索引&#xA;&lt;ul&gt;&#xA;&lt;li&gt;索引可以看作&lt;strong&gt;数据库中的一个表&lt;/strong&gt;，它包含了一组具有相似结构的文档&lt;/li&gt;&#xA;&lt;li&gt;在Elasticsearch中，数据以&lt;strong&gt;JSON格式的文档&lt;/strong&gt;存储在索引内。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;每个索引具有唯一的名称&lt;/strong&gt;，以便在执行搜索、更新和删除操作时进行引用。&lt;/li&gt;&#xA;&lt;li&gt;索引的名称可以由&lt;strong&gt;用户自定义&lt;/strong&gt;，但必须全部小写。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;分片&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在了解分片是什么之前，让我们谈谈为什么需要分片。假设你有一个包含超大规模文档的索引，有总计1TB的数据。当前集群中有两个节点，每个节点有512GB的空间可用于存储数据。显然，&lt;strong&gt;整个索引无法存储在任何一个节点上，因此有必要以某种方式拆分索引的数据，否则会导致数据存储不完整&lt;/strong&gt;。在这种情况下，索引的大小超过了单个节点的硬件限制，分片就派上用场了。分片通过将索引分成更小的部分来解决这个问题。&lt;/li&gt;&#xA;&lt;li&gt;当处理涉及多个数据分片的查询时，Elasticsearch会&lt;strong&gt;将查询请求分发到各个相关的分片&lt;/strong&gt;，并将它们的结果集进行聚合。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;副本&#xA;&lt;ul&gt;&#xA;&lt;li&gt;分片可以被复制，被复制的分片称为“主分片”，如图2-3中的主分片1～4；主分片的复制版本称为“副本分片”或简称为“副本”，如图2-3中的副本1～4&lt;/li&gt;&#xA;&lt;li&gt;创建索引时需要指定主分片，且主分片数一经指定就不支持动态更新了。而副本同样需要在创建索引时指定，每个分片可以有0或多个副本，副本数支持动态更新。&lt;/li&gt;&#xA;&lt;li&gt;当某主分片所在的数据节点不可用时，会导致主分片丢失现象，若短时间内不对此采取补救措施，集群会将该分片对应的副本提升为新的主分片。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;文档&#xA;&lt;ul&gt;&#xA;&lt;li&gt;关系型数据库将数据以行或元组为单位存储在数据库表中，而Elasticsearch将数据以文档为单位存储在索引中。&lt;/li&gt;&#xA;&lt;li&gt;作为Elasticsearch的基本存储单元，&lt;strong&gt;文档是指存储在Elasticsearch索引中的JSON对象&lt;/strong&gt;。文档中的数据由键值对构成。键是字段的名称，值是不同数据类型的字段。不同的数据类型包含但不限于字符串类型、数字类型、布尔类型、对象类型等。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;字段&#xA;&lt;ul&gt;&#xA;&lt;li&gt;字段是Elasticsearch中最小的单个数据单元，类似于关系型数据库表中的字段。一般实战项目前期的设计环节都是根据业务需求拆分、定义字段，并且敲定字段类型。在上面航空类索引的示例中，“FlightNum”是字段，其含义为“航班号”，字段类型为keyword。&lt;/li&gt;&#xA;&lt;li&gt;与关系型数据库不同的是，&lt;strong&gt;Elasticsearch的一个字段可以设定两种或两种以上的数据类型&lt;/strong&gt;，通过定义multi-field来灵活地满足复杂的业务需求。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;映射&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不少初学者对映射(Mapping)这个概念会感觉不好理解。映射类似于关系型数据库中的Schema，可以近似地理解为**“表结构”**。&lt;/li&gt;&#xA;&lt;li&gt;我们拿到一个业务需求后，往往会将业务细分会几个索引。每个索引都需要一个相对固定的表结构，包含但不限于字段名称、字段类型、是否需要分词、是否需要索引、是否需要存储、是否需要多字段类型等。这些都是设计映射时要考虑的问题。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;分词&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在英文文本中，空格就是切分语句或短语的“屏障”。但中文文本中则没有了这道“屏障”，于是分词就变得就不那么简单，需要由专门的分词算法构建的分词器来实现。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第3章-elasticsearch集群部署&#34;&gt;&#xA;  第3章 Elasticsearch集群部署&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0-elasticsearch%e9%9b%86%e7%be%a4%e9%83%a8%e7%bd%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;什么是堆内存&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Java中的堆是JVM所管理的最大的一块内存空间，主要用于&lt;strong&gt;存放各种类的实例对象&lt;/strong&gt;。在Java中，堆被划分成两个不同的区域：新生代(Young)和老年代(Old)。新生代又被划分为3个区域：Eden、From Survivor、To Survivor。&lt;/li&gt;&#xA;&lt;li&gt;这样划分的目的是使JVM更好地管理堆内存中的对象，包括内存的分配以及回收。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;堆内存的作用是什么&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;堆内存的唯一目的就是&lt;strong&gt;创建对象实例&lt;/strong&gt;，所有的对象实例和数组都要在堆上分配。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;堆内存如何配置&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;默认情况下，Elasticsearch JVM使用的堆内存最小和最大值均为4 GB（8.X版本以上）&lt;/li&gt;&#xA;&lt;li&gt;在转移到生产环境时，配置足够容量的堆大小以确保Elasticsearch功能和性能是必要的。&lt;/li&gt;&#xA;&lt;li&gt;Elasticsearch将通过对Xms（最小堆大小）和Xmx（最大堆大小）的设置来分配jvm.options中指定的整个堆。&lt;/li&gt;&#xA;&lt;li&gt;堆内存的值取决于服务器上可用的内存大小。Elasticsearch堆内存设置对其性能表现来说十分关键。&lt;strong&gt;建议将堆大小配置为服务器可用内存的50%，上限为32GB，且预留足够的内存给操作系统以提升缓存效率&lt;/strong&gt;。合理调整堆内存大小可减轻垃圾回收工作的压力，优化查询速度和索引效率。请务必进行监控并根据实际需求来调整堆内存大小。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;为什么堆内存不能超过物理机内存的一半&lt;/p&gt;</description>
    </item>
    <item>
      <title>英伟达-黄仁勋之芯</title>
      <link>/zh/post/books/%E8%8B%B1%E4%BC%9F%E8%BE%BE-%E9%BB%84%E4%BB%81%E5%8B%8B%E4%B9%8B%E8%8A%AF/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/books/%E8%8B%B1%E4%BC%9F%E8%BE%BE-%E9%BB%84%E4%BB%81%E5%8B%8B%E4%B9%8B%E8%8A%AF/</guid>
      <description>&lt;h1 id=&#34;黄仁勋-英伟达之芯&#34;&gt;&#xA;  黄仁勋-英伟达之芯&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%bb%84%e4%bb%81%e5%8b%8b-%e8%8b%b1%e4%bc%9f%e8%be%be%e4%b9%8b%e8%8a%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;第1章-求学生涯&#34;&gt;&#xA;  第1章 求学生涯&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-%e6%b1%82%e5%ad%a6%e7%94%9f%e6%b6%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第2章-职涯早期&#34;&gt;&#xA;  第2章 职涯早期&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-%e8%81%8c%e6%b6%af%e6%97%a9%e6%9c%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第3章-从餐厅起步的nvidia&#34;&gt;&#xA;  第3章 从餐厅起步的Nvidia&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0-%e4%bb%8e%e9%a4%90%e5%8e%85%e8%b5%b7%e6%ad%a5%e7%9a%84nvidia&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第4章-英伟达遭遇绝境&#34;&gt;&#xA;  第4章 英伟达遭遇绝境&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0-%e8%8b%b1%e4%bc%9f%e8%be%be%e9%81%ad%e9%81%87%e7%bb%9d%e5%a2%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第5章-咸鱼翻身&#34;&gt;&#xA;  第5章 咸鱼翻身&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac5%e7%ab%a0-%e5%92%b8%e9%b1%bc%e7%bf%bb%e8%ba%ab&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第6章-新机器时代曙光初现&#34;&gt;&#xA;  第6章 新机器时代曙光初现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0-%e6%96%b0%e6%9c%ba%e5%99%a8%e6%97%b6%e4%bb%a3%e6%9b%99%e5%85%89%e5%88%9d%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第7章-死亡竞赛&#34;&gt;&#xA;  第7章 死亡竞赛&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac7%e7%ab%a0-%e6%ad%bb%e4%ba%a1%e7%ab%9e%e8%b5%9b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第8章-游戏玩家拯救英伟达&#34;&gt;&#xA;  第8章 游戏玩家拯救英伟达&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac8%e7%ab%a0-%e6%b8%b8%e6%88%8f%e7%8e%a9%e5%ae%b6%e6%8b%af%e6%95%91%e8%8b%b1%e4%bc%9f%e8%be%be&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第9章-光速之道&#34;&gt;&#xA;  第9章 光速之道&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac9%e7%ab%a0-%e5%85%89%e9%80%9f%e4%b9%8b%e9%81%93&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第10章-同频共振&#34;&gt;&#xA;  第10章 同频共振&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac10%e7%ab%a0-%e5%90%8c%e9%a2%91%e5%85%b1%e6%8c%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第11章-范式转变的时刻&#34;&gt;&#xA;  第11章 范式转变的时刻&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac11%e7%ab%a0-%e8%8c%83%e5%bc%8f%e8%bd%ac%e5%8f%98%e7%9a%84%e6%97%b6%e5%88%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第12章-千载难逢的机会&#34;&gt;&#xA;  第12章 千载难逢的机会&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac12%e7%ab%a0-%e5%8d%83%e8%bd%bd%e9%9a%be%e9%80%a2%e7%9a%84%e6%9c%ba%e4%bc%9a&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第13章-由机器引领的时代&#34;&gt;&#xA;  第13章 由机器引领的时代&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac13%e7%ab%a0-%e7%94%b1%e6%9c%ba%e5%99%a8%e5%bc%95%e9%a2%86%e7%9a%84%e6%97%b6%e4%bb%a3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;克里泽夫斯基：辛顿在多伦多大学时的学生&lt;/li&gt;&#xA;&lt;li&gt;因为无法解释神经网络的计算过程，学术界不认可这种方法&lt;/li&gt;&#xA;&lt;li&gt;辛顿给&lt;strong&gt;苏茨克弗&lt;/strong&gt;和&lt;strong&gt;克里泽夫斯基&lt;/strong&gt;布置了一项艰巨的任务：利用英伟达的GPU训练计算机学会图像识别&lt;/li&gt;&#xA;&lt;li&gt;卡坦扎罗 2011年加入英伟达&#xA;&lt;ul&gt;&#xA;&lt;li&gt;cuDNN cuda deep neural network&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;矩阵乘法&lt;/li&gt;&#xA;&lt;li&gt;优秀的神经网络软件应该注重速度而不是精度&lt;/li&gt;&#xA;&lt;li&gt;马克思与黄仁勋的分歧&#xA;&lt;ul&gt;&#xA;&lt;li&gt;马斯克认为，先进的人工智能可能带来灭绝级威胁。这一观点得到了包括辛顿和苏茨克弗在内的大批技术专家的认同，他们还是最初那篇关于AlexNet的论文的合著者。然而黄仁勋完全不这么认为。他竟觉得人工智能毫无风险，真是令我吃惊。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第14章-ai行业的佼佼者&#34;&gt;&#xA;  第14章 AI行业的佼佼者&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac14%e7%ab%a0-ai%e8%a1%8c%e4%b8%9a%e7%9a%84%e4%bd%bc%e4%bd%bc%e8%80%85&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2016年，英伟达的股价飙升了224%，这让黄仁勋重获荣光，再度跻身亿万富翁行列。不过，在当年的标准普尔500指数中，表现最抢眼的股票并非英伟达，而是其长期竞争对手AMD，其股价涨幅高达309%。黄仁勋并不甘心位居次席。&lt;/li&gt;&#xA;&lt;li&gt;Omniverse&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第15章-ai工厂&#34;&gt;&#xA;  第15章 AI工厂&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac15%e7%ab%a0-ai%e5%b7%a5%e5%8e%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;乌斯科雷特&lt;/strong&gt;把这套学习机制命名为“自注意力”&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第16章-全球最具价值的半导体企业&#34;&gt;&#xA;  第16章 全球最具价值的半导体企业&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac16%e7%ab%a0-%e5%85%a8%e7%90%83%e6%9c%80%e5%85%b7%e4%bb%b7%e5%80%bc%e7%9a%84%e5%8d%8a%e5%af%bc%e4%bd%93%e4%bc%81%e4%b8%9a&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在2018年的GTC大会上，黄仁勋指出，在短短5年内，英伟达的GPU处理速度提升了25倍，这一成绩远超摩尔定律的预测。接着，他展示了一张图，这张图显示在2012年的显卡上需要一周的时间才能训练出AlexNet，而在他推出的新款计算机DGX-2上则仅需18分钟就能完成训练。&lt;/li&gt;&#xA;&lt;li&gt;2020年7月，英伟达的市值终于超越了英特尔。没过多久，英伟达的市值又超越了AMD。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第17章-这个时代最重要的科技公司&#34;&gt;&#xA;  第17章 这个时代最重要的科技公司&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac17%e7%ab%a0-%e8%bf%99%e4%b8%aa%e6%97%b6%e4%bb%a3%e6%9c%80%e9%87%8d%e8%a6%81%e7%9a%84%e7%a7%91%e6%8a%80%e5%85%ac%e5%8f%b8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第18章-人类需要更多智慧&#34;&gt;&#xA;  第18章 人类需要更多智慧&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac18%e7%ab%a0-%e4%ba%ba%e7%b1%bb%e9%9c%80%e8%a6%81%e6%9b%b4%e5%a4%9a%e6%99%ba%e6%85%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第19章-更多电力更大算力&#34;&gt;&#xA;  第19章 更多电力更大算力&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac19%e7%ab%a0-%e6%9b%b4%e5%a4%9a%e7%94%b5%e5%8a%9b%e6%9b%b4%e5%a4%a7%e7%ae%97%e5%8a%9b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第20章-地球上最重要的股票&#34;&gt;&#xA;  第20章 地球上最重要的股票&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac20%e7%ab%a0-%e5%9c%b0%e7%90%83%e4%b8%8a%e6%9c%80%e9%87%8d%e8%a6%81%e7%9a%84%e8%82%a1%e7%a5%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第21章-向理性本身发起挑战&#34;&gt;&#xA;  第21章 向理性本身发起挑战&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac21%e7%ab%a0-%e5%90%91%e7%90%86%e6%80%a7%e6%9c%ac%e8%ba%ab%e5%8f%91%e8%b5%b7%e6%8c%91%e6%88%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第22章-深不见底的恐惧&#34;&gt;&#xA;  第22章 深不见底的恐惧&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac22%e7%ab%a0-%e6%b7%b1%e4%b8%8d%e8%a7%81%e5%ba%95%e7%9a%84%e6%81%90%e6%83%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第23章-思考机器&#34;&gt;&#xA;  第23章 思考机器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac23%e7%ab%a0-%e6%80%9d%e8%80%83%e6%9c%ba%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>英伟达-黄仁勋之芯</title>
      <link>/zh/zh/post/books/%E8%8B%B1%E4%BC%9F%E8%BE%BE-%E9%BB%84%E4%BB%81%E5%8B%8B%E4%B9%8B%E8%8A%AF/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/books/%E8%8B%B1%E4%BC%9F%E8%BE%BE-%E9%BB%84%E4%BB%81%E5%8B%8B%E4%B9%8B%E8%8A%AF/</guid>
      <description>&lt;h1 id=&#34;黄仁勋-英伟达之芯&#34;&gt;&#xA;  黄仁勋-英伟达之芯&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%bb%84%e4%bb%81%e5%8b%8b-%e8%8b%b1%e4%bc%9f%e8%be%be%e4%b9%8b%e8%8a%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;第1章-求学生涯&#34;&gt;&#xA;  第1章 求学生涯&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac1%e7%ab%a0-%e6%b1%82%e5%ad%a6%e7%94%9f%e6%b6%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第2章-职涯早期&#34;&gt;&#xA;  第2章 职涯早期&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac2%e7%ab%a0-%e8%81%8c%e6%b6%af%e6%97%a9%e6%9c%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第3章-从餐厅起步的nvidia&#34;&gt;&#xA;  第3章 从餐厅起步的Nvidia&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac3%e7%ab%a0-%e4%bb%8e%e9%a4%90%e5%8e%85%e8%b5%b7%e6%ad%a5%e7%9a%84nvidia&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第4章-英伟达遭遇绝境&#34;&gt;&#xA;  第4章 英伟达遭遇绝境&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac4%e7%ab%a0-%e8%8b%b1%e4%bc%9f%e8%be%be%e9%81%ad%e9%81%87%e7%bb%9d%e5%a2%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第5章-咸鱼翻身&#34;&gt;&#xA;  第5章 咸鱼翻身&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac5%e7%ab%a0-%e5%92%b8%e9%b1%bc%e7%bf%bb%e8%ba%ab&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第6章-新机器时代曙光初现&#34;&gt;&#xA;  第6章 新机器时代曙光初现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac6%e7%ab%a0-%e6%96%b0%e6%9c%ba%e5%99%a8%e6%97%b6%e4%bb%a3%e6%9b%99%e5%85%89%e5%88%9d%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第7章-死亡竞赛&#34;&gt;&#xA;  第7章 死亡竞赛&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac7%e7%ab%a0-%e6%ad%bb%e4%ba%a1%e7%ab%9e%e8%b5%9b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第8章-游戏玩家拯救英伟达&#34;&gt;&#xA;  第8章 游戏玩家拯救英伟达&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac8%e7%ab%a0-%e6%b8%b8%e6%88%8f%e7%8e%a9%e5%ae%b6%e6%8b%af%e6%95%91%e8%8b%b1%e4%bc%9f%e8%be%be&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第9章-光速之道&#34;&gt;&#xA;  第9章 光速之道&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac9%e7%ab%a0-%e5%85%89%e9%80%9f%e4%b9%8b%e9%81%93&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第10章-同频共振&#34;&gt;&#xA;  第10章 同频共振&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac10%e7%ab%a0-%e5%90%8c%e9%a2%91%e5%85%b1%e6%8c%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第11章-范式转变的时刻&#34;&gt;&#xA;  第11章 范式转变的时刻&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac11%e7%ab%a0-%e8%8c%83%e5%bc%8f%e8%bd%ac%e5%8f%98%e7%9a%84%e6%97%b6%e5%88%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第12章-千载难逢的机会&#34;&gt;&#xA;  第12章 千载难逢的机会&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac12%e7%ab%a0-%e5%8d%83%e8%bd%bd%e9%9a%be%e9%80%a2%e7%9a%84%e6%9c%ba%e4%bc%9a&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第13章-由机器引领的时代&#34;&gt;&#xA;  第13章 由机器引领的时代&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac13%e7%ab%a0-%e7%94%b1%e6%9c%ba%e5%99%a8%e5%bc%95%e9%a2%86%e7%9a%84%e6%97%b6%e4%bb%a3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;克里泽夫斯基：辛顿在多伦多大学时的学生&lt;/li&gt;&#xA;&lt;li&gt;因为无法解释神经网络的计算过程，学术界不认可这种方法&lt;/li&gt;&#xA;&lt;li&gt;辛顿给&lt;strong&gt;苏茨克弗&lt;/strong&gt;和&lt;strong&gt;克里泽夫斯基&lt;/strong&gt;布置了一项艰巨的任务：利用英伟达的GPU训练计算机学会图像识别&lt;/li&gt;&#xA;&lt;li&gt;卡坦扎罗 2011年加入英伟达&#xA;&lt;ul&gt;&#xA;&lt;li&gt;cuDNN cuda deep neural network&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;矩阵乘法&lt;/li&gt;&#xA;&lt;li&gt;优秀的神经网络软件应该注重速度而不是精度&lt;/li&gt;&#xA;&lt;li&gt;马克思与黄仁勋的分歧&#xA;&lt;ul&gt;&#xA;&lt;li&gt;马斯克认为，先进的人工智能可能带来灭绝级威胁。这一观点得到了包括辛顿和苏茨克弗在内的大批技术专家的认同，他们还是最初那篇关于AlexNet的论文的合著者。然而黄仁勋完全不这么认为。他竟觉得人工智能毫无风险，真是令我吃惊。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第14章-ai行业的佼佼者&#34;&gt;&#xA;  第14章 AI行业的佼佼者&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac14%e7%ab%a0-ai%e8%a1%8c%e4%b8%9a%e7%9a%84%e4%bd%bc%e4%bd%bc%e8%80%85&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2016年，英伟达的股价飙升了224%，这让黄仁勋重获荣光，再度跻身亿万富翁行列。不过，在当年的标准普尔500指数中，表现最抢眼的股票并非英伟达，而是其长期竞争对手AMD，其股价涨幅高达309%。黄仁勋并不甘心位居次席。&lt;/li&gt;&#xA;&lt;li&gt;Omniverse&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第15章-ai工厂&#34;&gt;&#xA;  第15章 AI工厂&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac15%e7%ab%a0-ai%e5%b7%a5%e5%8e%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;乌斯科雷特&lt;/strong&gt;把这套学习机制命名为“自注意力”&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第16章-全球最具价值的半导体企业&#34;&gt;&#xA;  第16章 全球最具价值的半导体企业&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac16%e7%ab%a0-%e5%85%a8%e7%90%83%e6%9c%80%e5%85%b7%e4%bb%b7%e5%80%bc%e7%9a%84%e5%8d%8a%e5%af%bc%e4%bd%93%e4%bc%81%e4%b8%9a&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在2018年的GTC大会上，黄仁勋指出，在短短5年内，英伟达的GPU处理速度提升了25倍，这一成绩远超摩尔定律的预测。接着，他展示了一张图，这张图显示在2012年的显卡上需要一周的时间才能训练出AlexNet，而在他推出的新款计算机DGX-2上则仅需18分钟就能完成训练。&lt;/li&gt;&#xA;&lt;li&gt;2020年7月，英伟达的市值终于超越了英特尔。没过多久，英伟达的市值又超越了AMD。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;第17章-这个时代最重要的科技公司&#34;&gt;&#xA;  第17章 这个时代最重要的科技公司&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac17%e7%ab%a0-%e8%bf%99%e4%b8%aa%e6%97%b6%e4%bb%a3%e6%9c%80%e9%87%8d%e8%a6%81%e7%9a%84%e7%a7%91%e6%8a%80%e5%85%ac%e5%8f%b8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第18章-人类需要更多智慧&#34;&gt;&#xA;  第18章 人类需要更多智慧&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac18%e7%ab%a0-%e4%ba%ba%e7%b1%bb%e9%9c%80%e8%a6%81%e6%9b%b4%e5%a4%9a%e6%99%ba%e6%85%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第19章-更多电力更大算力&#34;&gt;&#xA;  第19章 更多电力更大算力&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac19%e7%ab%a0-%e6%9b%b4%e5%a4%9a%e7%94%b5%e5%8a%9b%e6%9b%b4%e5%a4%a7%e7%ae%97%e5%8a%9b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第20章-地球上最重要的股票&#34;&gt;&#xA;  第20章 地球上最重要的股票&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac20%e7%ab%a0-%e5%9c%b0%e7%90%83%e4%b8%8a%e6%9c%80%e9%87%8d%e8%a6%81%e7%9a%84%e8%82%a1%e7%a5%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第21章-向理性本身发起挑战&#34;&gt;&#xA;  第21章 向理性本身发起挑战&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac21%e7%ab%a0-%e5%90%91%e7%90%86%e6%80%a7%e6%9c%ac%e8%ba%ab%e5%8f%91%e8%b5%b7%e6%8c%91%e6%88%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第22章-深不见底的恐惧&#34;&gt;&#xA;  第22章 深不见底的恐惧&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac22%e7%ab%a0-%e6%b7%b1%e4%b8%8d%e8%a7%81%e5%ba%95%e7%9a%84%e6%81%90%e6%83%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第23章-思考机器&#34;&gt;&#xA;  第23章 思考机器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac23%e7%ab%a0-%e6%80%9d%e8%80%83%e6%9c%ba%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;</description>
    </item>
    <item>
      <title>用地图看懂世界格局</title>
      <link>/zh/post/books/%E7%94%A8%E5%9C%B0%E5%9B%BE%E7%9C%8B%E6%87%82%E4%B8%96%E7%95%8C%E6%A0%BC%E5%B1%80/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/post/books/%E7%94%A8%E5%9C%B0%E5%9B%BE%E7%9C%8B%E6%87%82%E4%B8%96%E7%95%8C%E6%A0%BC%E5%B1%80/</guid>
      <description>&lt;h1 id=&#34;用地图看懂世界格局&#34;&gt;&#xA;  用地图看懂世界格局&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%94%a8%e5%9c%b0%e5%9b%be%e7%9c%8b%e6%87%82%e4%b8%96%e7%95%8c%e6%a0%bc%e5%b1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;第一章欧洲篇从进退两难英国脱欧说起&#34;&gt;&#xA;  第一章：欧洲篇——从进退两难、英国脱欧说起&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%80%e7%ab%a0%e6%ac%a7%e6%b4%b2%e7%af%87%e4%bb%8e%e8%bf%9b%e9%80%80%e4%b8%a4%e9%9a%be%e8%8b%b1%e5%9b%bd%e8%84%b1%e6%ac%a7%e8%af%b4%e8%b5%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一地缘造就宿命&#34;&gt;&#xA;  一、地缘造就宿命&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e5%9c%b0%e7%bc%98%e9%80%a0%e5%b0%b1%e5%ae%bf%e5%91%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二摇摆中的外交&#34;&gt;&#xA;  二、摇摆中的外交&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e6%91%87%e6%91%86%e4%b8%ad%e7%9a%84%e5%a4%96%e4%ba%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三漫谈福利制度&#34;&gt;&#xA;  三、漫谈福利制度&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e6%bc%ab%e8%b0%88%e7%a6%8f%e5%88%a9%e5%88%b6%e5%ba%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四英国脱欧&#34;&gt;&#xA;  四、英国脱欧&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b%e8%8b%b1%e5%9b%bd%e8%84%b1%e6%ac%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第二章美国篇从经略天下美国大选说起&#34;&gt;&#xA;  第二章：美国篇——从经略天下、美国大选说起&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%ba%8c%e7%ab%a0%e7%be%8e%e5%9b%bd%e7%af%87%e4%bb%8e%e7%bb%8f%e7%95%a5%e5%a4%a9%e4%b8%8b%e7%be%8e%e5%9b%bd%e5%a4%a7%e9%80%89%e8%af%b4%e8%b5%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一从地缘美国的基本盘&#34;&gt;&#xA;  一、从地缘美国的“基本盘”&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e4%bb%8e%e5%9c%b0%e7%bc%98%e7%be%8e%e5%9b%bd%e7%9a%84%e5%9f%ba%e6%9c%ac%e7%9b%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二创新之本&#34;&gt;&#xA;  二、创新之本&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%88%9b%e6%96%b0%e4%b9%8b%e6%9c%ac&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三要法治还是要民主&#34;&gt;&#xA;  三、要法治还是要民主？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e8%a6%81%e6%b3%95%e6%b2%bb%e8%bf%98%e6%98%af%e8%a6%81%e6%b0%91%e4%b8%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四经略天下美国的地缘战略变迁&#34;&gt;&#xA;  四、经略天下——美国的地缘战略变迁&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b%e7%bb%8f%e7%95%a5%e5%a4%a9%e4%b8%8b%e7%be%8e%e5%9b%bd%e7%9a%84%e5%9c%b0%e7%bc%98%e6%88%98%e7%95%a5%e5%8f%98%e8%bf%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;五美国的拐点与特朗普&#34;&gt;&#xA;  五、美国的拐点与特朗普&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%94%e7%be%8e%e5%9b%bd%e7%9a%84%e6%8b%90%e7%82%b9%e4%b8%8e%e7%89%b9%e6%9c%97%e6%99%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;附章中产阶级与国家的战争潜力&#34;&gt;&#xA;  附章：中产阶级与国家的战争潜力&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%99%84%e7%ab%a0%e4%b8%ad%e4%ba%a7%e9%98%b6%e7%ba%a7%e4%b8%8e%e5%9b%bd%e5%ae%b6%e7%9a%84%e6%88%98%e4%ba%89%e6%bd%9c%e5%8a%9b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第三章-俄罗斯篇从俄土争端叙利亚战争说起&#34;&gt;&#xA;  第三章 俄罗斯篇——从俄土争端、叙利亚战争说起&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%89%e7%ab%a0-%e4%bf%84%e7%bd%97%e6%96%af%e7%af%87%e4%bb%8e%e4%bf%84%e5%9c%9f%e4%ba%89%e7%ab%af%e5%8f%99%e5%88%a9%e4%ba%9a%e6%88%98%e4%ba%89%e8%af%b4%e8%b5%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一地缘环境与战斗种族&#34;&gt;&#xA;  一、地缘环境与“战斗种族”&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e5%9c%b0%e7%bc%98%e7%8e%af%e5%a2%83%e4%b8%8e%e6%88%98%e6%96%97%e7%a7%8d%e6%97%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二权力的游戏漫谈俄土之间的渊源&#34;&gt;&#xA;  二、权力的游戏——漫谈俄土之间的渊源&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e6%9d%83%e5%8a%9b%e7%9a%84%e6%b8%b8%e6%88%8f%e6%bc%ab%e8%b0%88%e4%bf%84%e5%9c%9f%e4%b9%8b%e9%97%b4%e7%9a%84%e6%b8%8a%e6%ba%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三叙利亚的博弈地缘视角下的俄土关系&#34;&gt;&#xA;  三、叙利亚的博弈——地缘视角下的俄土关系&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e5%8f%99%e5%88%a9%e4%ba%9a%e7%9a%84%e5%8d%9a%e5%bc%88%e5%9c%b0%e7%bc%98%e8%a7%86%e8%a7%92%e4%b8%8b%e7%9a%84%e4%bf%84%e5%9c%9f%e5%85%b3%e7%b3%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四俄军介入叙利亚的看点&#34;&gt;&#xA;  四、俄军介入叙利亚的看点&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b%e4%bf%84%e5%86%9b%e4%bb%8b%e5%85%a5%e5%8f%99%e5%88%a9%e4%ba%9a%e7%9a%84%e7%9c%8b%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;五俄印军购男神的另一面&#34;&gt;&#xA;  五、俄印军购——“男神”的另一面&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%94%e4%bf%84%e5%8d%b0%e5%86%9b%e8%b4%ad%e7%94%b7%e7%a5%9e%e7%9a%84%e5%8f%a6%e4%b8%80%e9%9d%a2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第四章中国周边从萨德导弹南海争端说起&#34;&gt;&#xA;  第四章：中国周边——从萨德导弹、南海争端说起&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e5%9b%9b%e7%ab%a0%e4%b8%ad%e5%9b%bd%e5%91%a8%e8%be%b9%e4%bb%8e%e8%90%a8%e5%be%b7%e5%af%bc%e5%bc%b9%e5%8d%97%e6%b5%b7%e4%ba%89%e7%ab%af%e8%af%b4%e8%b5%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一朝鲜半岛与朝核问题&#34;&gt;&#xA;  一、朝鲜半岛与朝核问题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e6%9c%9d%e9%b2%9c%e5%8d%8a%e5%b2%9b%e4%b8%8e%e6%9c%9d%e6%a0%b8%e9%97%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二南海仲裁案&#34;&gt;&#xA;  二、南海仲裁案&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%8d%97%e6%b5%b7%e4%bb%b2%e8%a3%81%e6%a1%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三网络安全并非是让网络变得人畜无害&#34;&gt;&#xA;  三、网络安全并非是让网络变得“人畜无害”&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8%e5%b9%b6%e9%9d%9e%e6%98%af%e8%ae%a9%e7%bd%91%e7%bb%9c%e5%8f%98%e5%be%97%e4%ba%ba%e7%95%9c%e6%97%a0%e5%ae%b3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四以大经济的视角审视抗战&#34;&gt;&#xA;  四、以“大经济”的视角审视抗战&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b%e4%bb%a5%e5%a4%a7%e7%bb%8f%e6%b5%8e%e7%9a%84%e8%a7%86%e8%a7%92%e5%ae%a1%e8%a7%86%e6%8a%97%e6%88%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;</description>
    </item>
    <item>
      <title>用地图看懂世界格局</title>
      <link>/zh/zh/post/books/%E7%94%A8%E5%9C%B0%E5%9B%BE%E7%9C%8B%E6%87%82%E4%B8%96%E7%95%8C%E6%A0%BC%E5%B1%80/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/zh/zh/post/books/%E7%94%A8%E5%9C%B0%E5%9B%BE%E7%9C%8B%E6%87%82%E4%B8%96%E7%95%8C%E6%A0%BC%E5%B1%80/</guid>
      <description>&lt;h1 id=&#34;用地图看懂世界格局&#34;&gt;&#xA;  用地图看懂世界格局&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%94%a8%e5%9c%b0%e5%9b%be%e7%9c%8b%e6%87%82%e4%b8%96%e7%95%8c%e6%a0%bc%e5%b1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;第一章欧洲篇从进退两难英国脱欧说起&#34;&gt;&#xA;  第一章：欧洲篇——从进退两难、英国脱欧说起&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%80%e7%ab%a0%e6%ac%a7%e6%b4%b2%e7%af%87%e4%bb%8e%e8%bf%9b%e9%80%80%e4%b8%a4%e9%9a%be%e8%8b%b1%e5%9b%bd%e8%84%b1%e6%ac%a7%e8%af%b4%e8%b5%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一地缘造就宿命&#34;&gt;&#xA;  一、地缘造就宿命&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e5%9c%b0%e7%bc%98%e9%80%a0%e5%b0%b1%e5%ae%bf%e5%91%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二摇摆中的外交&#34;&gt;&#xA;  二、摇摆中的外交&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e6%91%87%e6%91%86%e4%b8%ad%e7%9a%84%e5%a4%96%e4%ba%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三漫谈福利制度&#34;&gt;&#xA;  三、漫谈福利制度&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e6%bc%ab%e8%b0%88%e7%a6%8f%e5%88%a9%e5%88%b6%e5%ba%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四英国脱欧&#34;&gt;&#xA;  四、英国脱欧&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b%e8%8b%b1%e5%9b%bd%e8%84%b1%e6%ac%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第二章美国篇从经略天下美国大选说起&#34;&gt;&#xA;  第二章：美国篇——从经略天下、美国大选说起&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%ba%8c%e7%ab%a0%e7%be%8e%e5%9b%bd%e7%af%87%e4%bb%8e%e7%bb%8f%e7%95%a5%e5%a4%a9%e4%b8%8b%e7%be%8e%e5%9b%bd%e5%a4%a7%e9%80%89%e8%af%b4%e8%b5%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一从地缘美国的基本盘&#34;&gt;&#xA;  一、从地缘美国的“基本盘”&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e4%bb%8e%e5%9c%b0%e7%bc%98%e7%be%8e%e5%9b%bd%e7%9a%84%e5%9f%ba%e6%9c%ac%e7%9b%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二创新之本&#34;&gt;&#xA;  二、创新之本&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%88%9b%e6%96%b0%e4%b9%8b%e6%9c%ac&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三要法治还是要民主&#34;&gt;&#xA;  三、要法治还是要民主？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e8%a6%81%e6%b3%95%e6%b2%bb%e8%bf%98%e6%98%af%e8%a6%81%e6%b0%91%e4%b8%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四经略天下美国的地缘战略变迁&#34;&gt;&#xA;  四、经略天下——美国的地缘战略变迁&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b%e7%bb%8f%e7%95%a5%e5%a4%a9%e4%b8%8b%e7%be%8e%e5%9b%bd%e7%9a%84%e5%9c%b0%e7%bc%98%e6%88%98%e7%95%a5%e5%8f%98%e8%bf%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;五美国的拐点与特朗普&#34;&gt;&#xA;  五、美国的拐点与特朗普&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%94%e7%be%8e%e5%9b%bd%e7%9a%84%e6%8b%90%e7%82%b9%e4%b8%8e%e7%89%b9%e6%9c%97%e6%99%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;附章中产阶级与国家的战争潜力&#34;&gt;&#xA;  附章：中产阶级与国家的战争潜力&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%99%84%e7%ab%a0%e4%b8%ad%e4%ba%a7%e9%98%b6%e7%ba%a7%e4%b8%8e%e5%9b%bd%e5%ae%b6%e7%9a%84%e6%88%98%e4%ba%89%e6%bd%9c%e5%8a%9b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;第三章-俄罗斯篇从俄土争端叙利亚战争说起&#34;&gt;&#xA;  第三章 俄罗斯篇——从俄土争端、叙利亚战争说起&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%89%e7%ab%a0-%e4%bf%84%e7%bd%97%e6%96%af%e7%af%87%e4%bb%8e%e4%bf%84%e5%9c%9f%e4%ba%89%e7%ab%af%e5%8f%99%e5%88%a9%e4%ba%9a%e6%88%98%e4%ba%89%e8%af%b4%e8%b5%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一地缘环境与战斗种族&#34;&gt;&#xA;  一、地缘环境与“战斗种族”&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e5%9c%b0%e7%bc%98%e7%8e%af%e5%a2%83%e4%b8%8e%e6%88%98%e6%96%97%e7%a7%8d%e6%97%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二权力的游戏漫谈俄土之间的渊源&#34;&gt;&#xA;  二、权力的游戏——漫谈俄土之间的渊源&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e6%9d%83%e5%8a%9b%e7%9a%84%e6%b8%b8%e6%88%8f%e6%bc%ab%e8%b0%88%e4%bf%84%e5%9c%9f%e4%b9%8b%e9%97%b4%e7%9a%84%e6%b8%8a%e6%ba%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三叙利亚的博弈地缘视角下的俄土关系&#34;&gt;&#xA;  三、叙利亚的博弈——地缘视角下的俄土关系&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e5%8f%99%e5%88%a9%e4%ba%9a%e7%9a%84%e5%8d%9a%e5%bc%88%e5%9c%b0%e7%bc%98%e8%a7%86%e8%a7%92%e4%b8%8b%e7%9a%84%e4%bf%84%e5%9c%9f%e5%85%b3%e7%b3%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四俄军介入叙利亚的看点&#34;&gt;&#xA;  四、俄军介入叙利亚的看点&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b%e4%bf%84%e5%86%9b%e4%bb%8b%e5%85%a5%e5%8f%99%e5%88%a9%e4%ba%9a%e7%9a%84%e7%9c%8b%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;五俄印军购男神的另一面&#34;&gt;&#xA;  五、俄印军购——“男神”的另一面&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%94%e4%bf%84%e5%8d%b0%e5%86%9b%e8%b4%ad%e7%94%b7%e7%a5%9e%e7%9a%84%e5%8f%a6%e4%b8%80%e9%9d%a2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;第四章中国周边从萨德导弹南海争端说起&#34;&gt;&#xA;  第四章：中国周边——从萨德导弹、南海争端说起&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ac%ac%e5%9b%9b%e7%ab%a0%e4%b8%ad%e5%9b%bd%e5%91%a8%e8%be%b9%e4%bb%8e%e8%90%a8%e5%be%b7%e5%af%bc%e5%bc%b9%e5%8d%97%e6%b5%b7%e4%ba%89%e7%ab%af%e8%af%b4%e8%b5%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一朝鲜半岛与朝核问题&#34;&gt;&#xA;  一、朝鲜半岛与朝核问题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e6%9c%9d%e9%b2%9c%e5%8d%8a%e5%b2%9b%e4%b8%8e%e6%9c%9d%e6%a0%b8%e9%97%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;二南海仲裁案&#34;&gt;&#xA;  二、南海仲裁案&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8c%e5%8d%97%e6%b5%b7%e4%bb%b2%e8%a3%81%e6%a1%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;三网络安全并非是让网络变得人畜无害&#34;&gt;&#xA;  三、网络安全并非是让网络变得“人畜无害”&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89%e7%bd%91%e7%bb%9c%e5%ae%89%e5%85%a8%e5%b9%b6%e9%9d%9e%e6%98%af%e8%ae%a9%e7%bd%91%e7%bb%9c%e5%8f%98%e5%be%97%e4%ba%ba%e7%95%9c%e6%97%a0%e5%ae%b3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;四以大经济的视角审视抗战&#34;&gt;&#xA;  四、以“大经济”的视角审视抗战&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9b%e4%bb%a5%e5%a4%a7%e7%bb%8f%e6%b5%8e%e7%9a%84%e8%a7%86%e8%a7%92%e5%ae%a1%e8%a7%86%e6%8a%97%e6%88%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;</description>
    </item>
  </channel>
</rss>
