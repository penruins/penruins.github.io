import{_ as a,c as i,o as t,af as s}from"./chunks/framework.Bhntpte7.js";const m=JSON.parse('{"title":"Mybatis Plus","description":"","frontmatter":{"date":"","draft":false,"title":"Mybatis Plus","weight":1000},"headers":[],"relativePath":"computer-science/java/mybatis-plus.md","filePath":"computer-science/java/mybatis-plus.md"}'),l={name:"computer-science/java/mybatis-plus.md"};function o(n,e,c,d,r,p){return t(),i("div",null,[...e[0]||(e[0]=[s(`<ul><li>document <ul><li><a href="https://baomidou.com/guides/wrapper/#nested" target="_blank" rel="noreferrer">条件构造器</a></li></ul></li></ul><h1 id="condition-为-false-时-之后的方法仍会执行" tabindex="-1">condition 为 false 时，之后的方法仍会执行 <a class="header-anchor" href="#condition-为-false-时-之后的方法仍会执行" aria-label="Permalink to “condition 为 false 时，之后的方法仍会执行”">​</a></h1><p>使用 <code>lambdaQuery().eq(boolean condition, R column, Object val)</code> 时，如果 <code>condition</code> 条件不成立，val 如果是一个方法，还是会执行</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>xxxxService.lambdaQuery()</span></span>
<span class="line"><span>    .eq(1 == 0, Entity:getId, getId()) // getId() 这个方法仍然是会执行的</span></span></code></pre></div><ul><li>这区别于 java 的三元表达式以及逻辑判断 <ul><li><code>0 == 1 || (1 / 0 == 5)</code> 这是会报错的</li><li><code>0 == 0 || (1 / 0 == 5)</code> 这不会报错</li><li><code>int r = 0 == 0 ? 1 : 1 / 0;</code> 这不会报错</li><li><code>int r = 0 == 1 ? 1 : 1 / 0;</code> 这会报错</li></ul></li></ul>`,5)])])}const h=a(l,[["render",o]]);export{m as __pageData,h as default};
